{"version":3,"sources":["webpack:///./node_modules/swiper/dist/js/swiper.js","webpack:///./src/components/swipe.vue?3157","webpack:///./src/components/swipe.vue?7e5b","webpack:///./node_modules/ssr-window/dist/ssr-window.esm.js","webpack:///./node_modules/dom7/dist/dom7.modular.js","webpack:///./node_modules/swiper/dist/js/swiper.esm.bundle.js","webpack:///src/components/swipe.vue","webpack:///./src/components/swipe.vue?0230","webpack:///./src/components/swipe.vue"],"names":["global","factory","module","exports","this","d","document","body","addEventListener","removeEventListener","activeElement","blur","nodeName","querySelector","querySelectorAll","getElementById","createEvent","initEvent","createElement","children","childNodes","style","setAttribute","getElementsByTagName","location","hash","w","doc","window","navigator","userAgent","history","CustomEvent","getComputedStyle","getPropertyValue","Image","Date","screen","setTimeout","clearTimeout","win","Dom7","arr","self","i","length","$","selector","context","els","tempParent","html","trim","indexOf","toCreate","innerHTML","push","match","split","nodeType","unique","uniqueArray","addClass","className","this$1","classes","j","classList","add","removeClass","remove","hasClass","contains","toggleClass","toggle","attr","attrs","value","arguments$1","arguments","getAttribute","attrName","removeAttr","removeAttribute","data","key","el","dom7ElementDataStorage","dataKey","transform","elStyle","webkitTransform","transition","duration","webkitTransitionDuration","transitionDuration","on","assign","args","len","eventType","targetSelector","listener","capture","handleLiveEvent","e","target","eventData","dom7EventData","unshift","is","apply","parents","k","handleEvent","undefined","events","event$1","dom7LiveListeners","proxyListener","event","dom7Listeners","off","handlers","handler","splice","trigger","evt","detail","bubbles","cancelable","filter","dataIndex","dispatchEvent","transitionEnd","callback","dom","fireCallBack","call","outerWidth","includeMargins","styles","offsetWidth","parseFloat","outerHeight","offsetHeight","offset","box","getBoundingClientRect","clientTop","clientLeft","scrollTop","scrollY","scrollLeft","scrollX","top","left","css","props","prop","each","text","textContent","compareWith","matches","webkitMatchesSelector","msMatchesSelector","index","child","previousSibling","eq","returnIndex","append","newChild","tempDiv","firstChild","appendChild","prepend","insertBefore","next","nextElementSibling","nextAll","nextEls","prev","previousElementSibling","prevAll","prevEls","parent","parentNode","closest","find","foundElements","found","removeChild","toAdd","fn","prototype","Class","Methods","Object","keys","forEach","methodName","Utils","deleteProps","obj","object","nextTick","delay","now","getTranslate","axis","matrix","curTransform","transformMatrix","curStyle","WebKitCSSMatrix","map","a","replace","join","MozTransform","OTransform","MsTransform","msTransform","toString","m41","m42","parseUrlQuery","url","params","param","query","urlToParse","href","paramsPart","decodeURIComponent","isObject","o","constructor","extend","len$1","to","nextSource","keysArray","nextIndex","nextKey","desc","getOwnPropertyDescriptor","enumerable","Support","testDiv","touch","Modernizr","DocumentTouch","pointerEvents","pointerEnabled","PointerEvent","prefixedPointerEvents","msPointerEnabled","transforms3d","csstransforms3d","flexbox","observer","passiveListener","supportsPassive","opts","defineProperty","get","gestures","SwiperClass","eventsListeners","eventName","staticAccessors","components","configurable","updateSize","width","height","swiper","$el","clientWidth","clientHeight","isHorizontal","isVertical","parseInt","size","updateSlides","$wrapperEl","swiperSize","rtl","rtlTranslate","wrongRTL","isVirtual","virtual","enabled","previousSlidesLength","slides","slidesLength","snapGrid","slidesGrid","slidesSizesGrid","offsetBefore","slidesOffsetBefore","offsetAfter","slidesOffsetAfter","previousSnapGridLength","previousSlidesGridLength","spaceBetween","slidePosition","prevSlideSize","slidesNumberEvenToRows","slideSize","virtualSize","marginLeft","marginTop","marginRight","marginBottom","slidesPerColumn","Math","floor","ceil","slidesPerView","slidesPerColumnFill","max","newSlidesGrid","slidesPerRow","numFullColumns","slide","newSlideOrderIndex","column","row","-webkit-box-ordinal-group","-moz-box-ordinal-group","-ms-flex-order","-webkit-order","order","slideStyles","currentTransform","currentWebKitTransform","roundLengths","swiperSlideSize","centeredSlides","abs","slidesPerGroup","effect","setWrapperSize","i$1","slidesGridItem","i$2","slidesGridItem$1","emit","watchOverflow","checkOverflow","watchSlidesProgress","watchSlidesVisibility","updateSlidesOffset","updateAutoHeight","speed","activeSlides","newHeight","setTransition","activeIndex","swiperSlideOffset","offsetLeft","offsetTop","updateSlidesProgress","translate","offsetCenter","slideVisibleClass","slideProgress","minTranslate","slideBefore","slideAfter","isVisible","progress","updateProgress","translatesDiff","maxTranslate","isBeginning","isEnd","wasBeginning","wasEnd","updateSlidesClasses","activeSlide","realIndex","slideActiveClass","loop","slideDuplicateClass","slideDuplicateActiveClass","nextSlide","slideNextClass","prevSlide","slidePrevClass","slideDuplicateNextClass","slideDuplicatePrevClass","updateActiveIndex","newActiveIndex","snapIndex","previousIndex","previousRealIndex","previousSnapIndex","normalizeSlideIndex","updateClickedSlide","slideFound","clickedSlide","clickedIndex","slideToClickedSlide","priority","method","once","onceHandler","eventHandler","Array","isArray","slice","eventsArray","useModulesParams","instanceParams","instance","modules","moduleName","useModules","modulesParams","moduleParams","modulePropName","moduleProp","bind","moduleEventName","create","set","use","installModule","name","proto","static","install","m","concat","defineProperties","update","virtualTranslate","currentTranslate","setTranslate","byController","newProgress","x","y","z","previousTranslate","transitionStart","runCallbacks","direction","autoHeight","dir","transitionEnd$1","animating","transition$1","slideTo","internal","slideIndex","preventIntercationOnTransition","initialSlide","initialized","allowSlideNext","allowSlidePrev","onSlideToWrapperTransitionEnd","destroyed","slideToLoop","newIndex","loopedSlides","slideNext","loopFix","_clientLeft","slidePrev","normalize","val","prevIndex","normalizedTranslate","normalizedSnapGrid","prevSnap","slideReset","slideToClosest","currentSnap","nextSnap","slidesPerViewDynamic","slideToIndex","loopCreate","loopFillGroupWithBlank","blankSlidesNum","blankNode","loopAdditionalSlides","prependSlides","appendSlides","cloneNode","snapTranslate","diff","slideChanged","slideChanged$1","loopDestroy","setGrabCursor","moving","simulateTouch","isLocked","cursor","unsetGrabCursor","grabCursor","appendSlide","prependSlide","addSlide","activeIndexBuffer","baseLength","slidesBuffer","currentSlide","removeSlide","slidesIndexes","indexToRemove","removeAllSlides","manipulation","Device","ua","device","ios","android","androidChrome","desktop","windows","iphone","ipod","ipad","cordova","phonegap","os","osVersion","toLowerCase","webView","osVersionArr","metaViewport","minimalUi","pixelRatio","devicePixelRatio","onTouchStart","touchEventsData","touches","originalEvent","isTouchEvent","type","which","isTouched","isMoved","noSwiping","noSwipingSelector","allowClick","swipeHandler","currentX","targetTouches","pageX","currentY","pageY","startX","startY","iOSEdgeSwipeDetection","iOSEdgeSwipeThreshold","allowTouchCallbacks","isScrolling","startMoving","touchStartTime","swipeDirection","threshold","allowThresholdMove","preventDefault","formElements","allowTouchMove","onTouchMove","preventedByNestedSwiper","touchReleaseOnEdges","touchAngle","diffX","diffY","atan2","PI","touchMoveStopPropagation","nested","stopPropagation","startTranslate","allowMomentumBounce","touchRatio","disableParentSwiper","resistanceRatio","resistance","pow","followFinger","freeMode","velocities","position","time","onTouchEnd","currentPos","touchEndTime","timeDiff","lastClickTime","clickTimeout","freeModeMomentum","lastMoveEvent","pop","velocityEvent","distance","velocity","freeModeMinimumVelocity","freeModeMomentumVelocityRatio","momentumDuration","freeModeMomentumRatio","momentumDistance","newPosition","afterBouncePosition","needsLoopFix","doBounce","bounceAmount","freeModeMomentumBounceRatio","freeModeMomentumBounce","freeModeSticky","longSwipesMs","stopIndex","groupSize","ratio","longSwipes","longSwipesRatio","shortSwipes","onResize","breakpoints","setBreakpoint","newTranslate","min","onClick","preventClicks","preventClicksPropagation","stopImmediatePropagation","attachEvents","touchEvents","wrapperEl","touchEventsTarget","start","passiveListeners","passive","move","end","detachEvents","breakpoint","getBreakpoint","currentBreakpoint","breakPointsParams","originalParams","needsReLoop","points","point","sort","b","innerWidth","Browser","isSafari","isIE","isUiWebView","test","addClasses","classNames","suffixes","suffix","containerModifierClass","removeClasses","loadImage","imageEl","src","srcset","sizes","checkForComplete","image","onReady","complete","onload","onerror","preloadImages","imagesLoaded","imagesToLoad","updateOnImagesReady","currentSrc","images","wasLocked","navigation","checkOverflow$1","defaults","init","uniqueNavElements","noSwipingClass","slideClass","slideBlankClass","wrapperClass","runCallbacksOnInit","prototypes","extendedDefaults","Swiper","SwiperClass$$1","prototypeGroup","protoMethod","moduleParamName","swiperParams","passedParams","swipers","containerEl","newParams","touchEventsTouch","touchEventsDesktop","__proto__","spv","breakLoop","translated","translateValue","destroy","deleteInstance","cleanStyles","extendDefaults","newDefaults","Device$1","Support$1","support","Browser$1","browser","Resize","resize","resizeHandler","orientationChangeHandler","Observer","func","MutationObserver","WebkitMutationObserver","attach","options","ObserverFunc","mutations","mutation","observe","attributes","childList","characterData","observers","observeParents","containerParents","disconnect","Observer$1","Virtual","force","ref","ref$1","previousFrom","from","previousTo","previousSlidesGrid","renderSlide","previousOffset","offsetProp","slidesAfter","slidesBefore","onRendered","lazy","load","renderExternal","slidesToRender","prependIndexes","appendIndexes","cache","$slideEl","newCache","cachedIndex","Virtual$1","beforeInit","overwriteParams","Keyboard","handle","kc","keyCode","charCode","shiftKey","altKey","ctrlKey","metaKey","keyboard","onlyInViewport","inView","windowWidth","windowHeight","innerHeight","swiperOffset","swiperCoord","returnValue","enable","disable","Keyboard$1","isEventSupported","isSupported","element","implementation","hasFeature","Mousewheel","lastScrollTime","PIXEL_STEP","LINE_HEIGHT","PAGE_HEIGHT","sX","sY","pX","pY","wheelDelta","wheelDeltaY","wheelDeltaX","HORIZONTAL_AXIS","deltaY","deltaX","deltaMode","spinX","spinY","pixelX","pixelY","handleMouseEnter","mouseEntered","handleMouseLeave","mousewheel","releaseOnEdges","delta","rtlFactor","forceToAxis","invert","sensitivity","timeout","autoplay","autoplayDisableOnInteraction","stop","getTime","eventsTarged","Mousewheel$1","Navigation","$nextEl","$prevEl","disabledClass","lockClass","nextEl","prevEl","Navigation$1","hideOnClick","hiddenClass","toEdge","fromEdge","click","Pagination","pagination","current","total","paginationType","bullets","firstIndex","lastIndex","midIndex","dynamicBullets","bulletSize","dynamicMainBullets","dynamicBulletIndex","bullet","$bullet","bulletIndex","bulletActiveClass","$firstDisplayedBullet","$lastDisplayedBullet","dynamicBulletsLength","bulletsOffset","formatFractionCurrent","formatFractionTotal","progressbarDirection","progressbarOpposite","scale","scaleX","scaleY","renderCustom","render","paginationHTML","numberOfBullets","renderBullet","bulletClass","renderFraction","currentClass","totalClass","renderProgressbar","progressbarFillClass","clickable","clickableClass","modifierClass","progressbarOppositeClass","Pagination$1","bulletElement","number","activeIndexChange","snapIndexChange","slidesLengthChange","snapGridLengthChange","Scrollbar","scrollbar","dragSize","trackSize","$dragEl","newSize","newPos","hide","opacity","divider","moveDivider","display","scrollbarHide","setDragPosition","pointerPosition","positionRatio","clientX","clientY","onDragStart","dragTimeout","onDragMove","onDragEnd","snapOnRelease","enableDraggable","activeListener","disableDraggable","$swiperEl","dragEl","draggable","Scrollbar$1","dragClass","observerUpdate","Parallax","setTransform","p","currentOpacity","currentScale","parallax","slideEl","parallaxEl","$parallaxEl","parallaxDuration","Parallax$1","Zoom","getDistanceBetweenTouches","x1","y1","x2","y2","sqrt","onGestureStart","zoom","gesture","fakeGestureTouched","fakeGestureMoved","scaleStart","$imageEl","$imageWrapEl","maxRatio","isScaling","onGestureChange","scaleMove","minRatio","onGestureEnd","changedTouches","touchesStart","slideWidth","slideHeight","scaledWidth","scaledHeight","minX","maxX","minY","maxY","touchesCurrent","prevPositionX","prevPositionY","prevTime","momentumDurationX","momentumDurationY","momentumDistanceX","newPositionX","momentumDistanceY","newPositionY","onTransitionEnd","out","in","touchX","touchY","offsetX","offsetY","translateX","translateY","imageWidth","imageHeight","translateMinX","translateMinY","translateMaxX","translateMaxY","Zoom$1","containerClass","zoomedSlideClass","touchStart","touchEnd","doubleTap","Lazy","loadInSlide","loadInDuplicate","$images","elementClass","loadedClass","loadingClass","imageIndex","background","slideOriginalIndex","originalSlide","duplicatedSlide","slideExist","initialImageLoaded","elIndex","loadPrevNext","loadPrevNextAmount","amount","maxIndex","minIndex","Lazy$1","loadOnTransitionStart","preloaderClass","scroll","scrollbarDragMove","Controller","LinearSpline","i1","i3","binarySearch","guess","array","interpolate","getInterpolateFunction","c","controller","spline","setTranslate$1","multiplier","controlledTranslate","controlled","control","setControlledTranslate","by","inverse","setControlledTransition","Controller$1","a11y","makeElFocusable","addElRole","role","addElLabel","label","disableEl","enableEl","onEnterKey","$targetEl","notify","lastSlideMessage","nextSlideMessage","firstSlideMessage","prevSlideMessage","message","notification","liveRegion","updateNavigation","updatePagination","bulletEl","$bulletEl","paginationBulletMessage","A11y","notificationClass","paginationUpdate","History","pushState","hashNavigation","paths","getPathValues","scrollToSlide","replaceState","setHistoryPopState","pathArray","pathname","part","setHistory","slugify","includes","currentState","state","slideHistory","History$1","HashNavigation","onHashCange","newHash","activeSlideHash","setHash","slideHash","watchState","HashNavigation$1","Autoplay","run","$activeSlideEl","reverseDirection","stopOnLastSlide","running","pause","paused","waitForTransition","Autoplay$1","disableOnInteraction","beforeTransitionStart","sliderFirstMove","Fade","tx","ty","slideOpacity","fadeEffect","crossFade","eventTriggered","triggerEvents","EffectFade","Cube","$cubeShadowEl","swiperWidth","swiperHeight","cubeEffect","wrapperRotate","shadow","slideAngle","round","tz","slideShadows","shadowBefore","shadowAfter","-webkit-transform-origin","-moz-transform-origin","-ms-transform-origin","transform-origin","shadowOffset","shadowAngle","sin","cos","scale1","shadowScale","scale2","zFactor","EffectCube","Flip","flipEffect","limitRotation","rotate","rotateY","rotateX","zIndex","EffectFlip","Coverflow","coverflowEffect","center","depth","slideOffset","offsetMultiplier","modifier","translateZ","stretch","slideTransform","$shadowBeforeEl","$shadowAfterEl","ws","perspectiveOrigin","EffectCoverflow","_node_modules_mini_css_extract_plugin_dist_loader_js_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_lib_index_js_ref_8_oneOf_1_2_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_swipe_vue_vue_type_style_index_0_id_68929526_lang_scss_scoped_true__WEBPACK_IMPORTED_MODULE_0___default","swipevue_type_template_id_68929526_scoped_true_render","_vm","_h","$createElement","_c","_self","staticClass","_l","item","alt","staticRenderFns","[object Object]","dom7_modular_outerWidth","dom7_modular_outerHeight","dom7_modular_html","dom7_modular_text","dom7_modular_index","dom7_modular_parent","swiper_esm_bundle_Support","styles$$1","index$$1","data$$1","swiper_esm_bundle_translate","swiper_esm_bundle_slide","swiper_esm_bundle_Device","swiper_esm_bundle_onClick","swiper_esm_bundle_events","swiper_esm_bundle_breakpoints","swiper_esm_bundle_Browser","swiper_esm_bundle_images","swiper_esm_bundle_Swiper","super","offset$$1","text$$1","transform$$1","swiper_esm_bundle","swipevue_type_script_lang_js","mounted","components_swipevue_type_script_lang_js","component","componentNormalizer","__webpack_exports__"],"mappings":"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","file":"2.9b6a7e63.js","sourcesContent":["/**\n * Swiper 4.3.3\n * Most modern mobile touch slider and framework with hardware accelerated transitions\n * http://www.idangero.us/swiper/\n *\n * Copyright 2014-2018 Vladimir Kharlampidi\n *\n * Released under the MIT License\n *\n * Released on: June 5, 2018\n */\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global.Swiper = factory());\n}(this, (function () { 'use strict';\n\n  /**\n   * SSR Window 1.0.0\n   * Better handling for window object in SSR environment\n   * https://github.com/nolimits4web/ssr-window\n   *\n   * Copyright 2018, Vladimir Kharlampidi\n   *\n   * Licensed under MIT\n   *\n   * Released on: February 10, 2018\n   */\n  var d;\n  if (typeof document === 'undefined') {\n    d = {\n      body: {},\n      addEventListener: function addEventListener() {},\n      removeEventListener: function removeEventListener() {},\n      activeElement: {\n        blur: function blur() {},\n        nodeName: '',\n      },\n      querySelector: function querySelector() {\n        return null;\n      },\n      querySelectorAll: function querySelectorAll() {\n        return [];\n      },\n      getElementById: function getElementById() {\n        return null;\n      },\n      createEvent: function createEvent() {\n        return {\n          initEvent: function initEvent() {},\n        };\n      },\n      createElement: function createElement() {\n        return {\n          children: [],\n          childNodes: [],\n          style: {},\n          setAttribute: function setAttribute() {},\n          getElementsByTagName: function getElementsByTagName() {\n            return [];\n          },\n        };\n      },\n      location: { hash: '' },\n    };\n  } else {\n    // eslint-disable-next-line\n    d = document;\n  }\n\n  var doc = d;\n\n  var w;\n  if (typeof window === 'undefined') {\n    w = {\n      document: doc,\n      navigator: {\n        userAgent: '',\n      },\n      location: {},\n      history: {},\n      CustomEvent: function CustomEvent() {\n        return this;\n      },\n      addEventListener: function addEventListener() {},\n      removeEventListener: function removeEventListener() {},\n      getComputedStyle: function getComputedStyle() {\n        return {\n          getPropertyValue: function getPropertyValue() {\n            return '';\n          },\n        };\n      },\n      Image: function Image() {},\n      Date: function Date() {},\n      screen: {},\n      setTimeout: function setTimeout() {},\n      clearTimeout: function clearTimeout() {},\n    };\n  } else {\n    // eslint-disable-next-line\n    w = window;\n  }\n\n  var win = w;\n\n  /**\n   * Dom7 2.0.6\n   * Minimalistic JavaScript library for DOM manipulation, with a jQuery-compatible API\n   * http://framework7.io/docs/dom.html\n   *\n   * Copyright 2018, Vladimir Kharlampidi\n   * The iDangero.us\n   * http://www.idangero.us/\n   *\n   * Licensed under MIT\n   *\n   * Released on: May 27, 2018\n   */\n\n  var Dom7 = function Dom7(arr) {\n    var self = this;\n    // Create array-like object\n    for (var i = 0; i < arr.length; i += 1) {\n      self[i] = arr[i];\n    }\n    self.length = arr.length;\n    // Return collection with methods\n    return this;\n  };\n\n  function $(selector, context) {\n    var arr = [];\n    var i = 0;\n    if (selector && !context) {\n      if (selector instanceof Dom7) {\n        return selector;\n      }\n    }\n    if (selector) {\n        // String\n      if (typeof selector === 'string') {\n        var els;\n        var tempParent;\n        var html = selector.trim();\n        if (html.indexOf('<') >= 0 && html.indexOf('>') >= 0) {\n          var toCreate = 'div';\n          if (html.indexOf('<li') === 0) { toCreate = 'ul'; }\n          if (html.indexOf('<tr') === 0) { toCreate = 'tbody'; }\n          if (html.indexOf('<td') === 0 || html.indexOf('<th') === 0) { toCreate = 'tr'; }\n          if (html.indexOf('<tbody') === 0) { toCreate = 'table'; }\n          if (html.indexOf('<option') === 0) { toCreate = 'select'; }\n          tempParent = doc.createElement(toCreate);\n          tempParent.innerHTML = html;\n          for (i = 0; i < tempParent.childNodes.length; i += 1) {\n            arr.push(tempParent.childNodes[i]);\n          }\n        } else {\n          if (!context && selector[0] === '#' && !selector.match(/[ .<>:~]/)) {\n            // Pure ID selector\n            els = [doc.getElementById(selector.trim().split('#')[1])];\n          } else {\n            // Other selectors\n            els = (context || doc).querySelectorAll(selector.trim());\n          }\n          for (i = 0; i < els.length; i += 1) {\n            if (els[i]) { arr.push(els[i]); }\n          }\n        }\n      } else if (selector.nodeType || selector === win || selector === doc) {\n        // Node/element\n        arr.push(selector);\n      } else if (selector.length > 0 && selector[0].nodeType) {\n        // Array of elements or instance of Dom\n        for (i = 0; i < selector.length; i += 1) {\n          arr.push(selector[i]);\n        }\n      }\n    }\n    return new Dom7(arr);\n  }\n\n  $.fn = Dom7.prototype;\n  $.Class = Dom7;\n  $.Dom7 = Dom7;\n\n  function unique(arr) {\n    var uniqueArray = [];\n    for (var i = 0; i < arr.length; i += 1) {\n      if (uniqueArray.indexOf(arr[i]) === -1) { uniqueArray.push(arr[i]); }\n    }\n    return uniqueArray;\n  }\n\n  // Classes and attributes\n  function addClass(className) {\n    var this$1 = this;\n\n    if (typeof className === 'undefined') {\n      return this;\n    }\n    var classes = className.split(' ');\n    for (var i = 0; i < classes.length; i += 1) {\n      for (var j = 0; j < this.length; j += 1) {\n        if (typeof this$1[j].classList !== 'undefined') { this$1[j].classList.add(classes[i]); }\n      }\n    }\n    return this;\n  }\n  function removeClass(className) {\n    var this$1 = this;\n\n    var classes = className.split(' ');\n    for (var i = 0; i < classes.length; i += 1) {\n      for (var j = 0; j < this.length; j += 1) {\n        if (typeof this$1[j].classList !== 'undefined') { this$1[j].classList.remove(classes[i]); }\n      }\n    }\n    return this;\n  }\n  function hasClass(className) {\n    if (!this[0]) { return false; }\n    return this[0].classList.contains(className);\n  }\n  function toggleClass(className) {\n    var this$1 = this;\n\n    var classes = className.split(' ');\n    for (var i = 0; i < classes.length; i += 1) {\n      for (var j = 0; j < this.length; j += 1) {\n        if (typeof this$1[j].classList !== 'undefined') { this$1[j].classList.toggle(classes[i]); }\n      }\n    }\n    return this;\n  }\n  function attr(attrs, value) {\n    var arguments$1 = arguments;\n    var this$1 = this;\n\n    if (arguments.length === 1 && typeof attrs === 'string') {\n      // Get attr\n      if (this[0]) { return this[0].getAttribute(attrs); }\n      return undefined;\n    }\n\n    // Set attrs\n    for (var i = 0; i < this.length; i += 1) {\n      if (arguments$1.length === 2) {\n        // String\n        this$1[i].setAttribute(attrs, value);\n      } else {\n        // Object\n        // eslint-disable-next-line\n        for (var attrName in attrs) {\n          this$1[i][attrName] = attrs[attrName];\n          this$1[i].setAttribute(attrName, attrs[attrName]);\n        }\n      }\n    }\n    return this;\n  }\n  // eslint-disable-next-line\n  function removeAttr(attr) {\n    var this$1 = this;\n\n    for (var i = 0; i < this.length; i += 1) {\n      this$1[i].removeAttribute(attr);\n    }\n    return this;\n  }\n  function data(key, value) {\n    var this$1 = this;\n\n    var el;\n    if (typeof value === 'undefined') {\n      el = this[0];\n      // Get value\n      if (el) {\n        if (el.dom7ElementDataStorage && (key in el.dom7ElementDataStorage)) {\n          return el.dom7ElementDataStorage[key];\n        }\n\n        var dataKey = el.getAttribute((\"data-\" + key));\n        if (dataKey) {\n          return dataKey;\n        }\n        return undefined;\n      }\n      return undefined;\n    }\n\n    // Set value\n    for (var i = 0; i < this.length; i += 1) {\n      el = this$1[i];\n      if (!el.dom7ElementDataStorage) { el.dom7ElementDataStorage = {}; }\n      el.dom7ElementDataStorage[key] = value;\n    }\n    return this;\n  }\n  // Transforms\n  // eslint-disable-next-line\n  function transform(transform) {\n    var this$1 = this;\n\n    for (var i = 0; i < this.length; i += 1) {\n      var elStyle = this$1[i].style;\n      elStyle.webkitTransform = transform;\n      elStyle.transform = transform;\n    }\n    return this;\n  }\n  function transition(duration) {\n    var this$1 = this;\n\n    if (typeof duration !== 'string') {\n      duration = duration + \"ms\"; // eslint-disable-line\n    }\n    for (var i = 0; i < this.length; i += 1) {\n      var elStyle = this$1[i].style;\n      elStyle.webkitTransitionDuration = duration;\n      elStyle.transitionDuration = duration;\n    }\n    return this;\n  }\n  // Events\n  function on() {\n    var this$1 = this;\n    var assign;\n\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n    var eventType = args[0];\n    var targetSelector = args[1];\n    var listener = args[2];\n    var capture = args[3];\n    if (typeof args[1] === 'function') {\n      (assign = args, eventType = assign[0], listener = assign[1], capture = assign[2]);\n      targetSelector = undefined;\n    }\n    if (!capture) { capture = false; }\n\n    function handleLiveEvent(e) {\n      var target = e.target;\n      if (!target) { return; }\n      var eventData = e.target.dom7EventData || [];\n      if (eventData.indexOf(e) < 0) {\n        eventData.unshift(e);\n      }\n      if ($(target).is(targetSelector)) { listener.apply(target, eventData); }\n      else {\n        var parents = $(target).parents(); // eslint-disable-line\n        for (var k = 0; k < parents.length; k += 1) {\n          if ($(parents[k]).is(targetSelector)) { listener.apply(parents[k], eventData); }\n        }\n      }\n    }\n    function handleEvent(e) {\n      var eventData = e && e.target ? e.target.dom7EventData || [] : [];\n      if (eventData.indexOf(e) < 0) {\n        eventData.unshift(e);\n      }\n      listener.apply(this, eventData);\n    }\n    var events = eventType.split(' ');\n    var j;\n    for (var i = 0; i < this.length; i += 1) {\n      var el = this$1[i];\n      if (!targetSelector) {\n        for (j = 0; j < events.length; j += 1) {\n          var event = events[j];\n          if (!el.dom7Listeners) { el.dom7Listeners = {}; }\n          if (!el.dom7Listeners[event]) { el.dom7Listeners[event] = []; }\n          el.dom7Listeners[event].push({\n            listener: listener,\n            proxyListener: handleEvent,\n          });\n          el.addEventListener(event, handleEvent, capture);\n        }\n      } else {\n        // Live events\n        for (j = 0; j < events.length; j += 1) {\n          var event$1 = events[j];\n          if (!el.dom7LiveListeners) { el.dom7LiveListeners = {}; }\n          if (!el.dom7LiveListeners[event$1]) { el.dom7LiveListeners[event$1] = []; }\n          el.dom7LiveListeners[event$1].push({\n            listener: listener,\n            proxyListener: handleLiveEvent,\n          });\n          el.addEventListener(event$1, handleLiveEvent, capture);\n        }\n      }\n    }\n    return this;\n  }\n  function off() {\n    var this$1 = this;\n    var assign;\n\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n    var eventType = args[0];\n    var targetSelector = args[1];\n    var listener = args[2];\n    var capture = args[3];\n    if (typeof args[1] === 'function') {\n      (assign = args, eventType = assign[0], listener = assign[1], capture = assign[2]);\n      targetSelector = undefined;\n    }\n    if (!capture) { capture = false; }\n\n    var events = eventType.split(' ');\n    for (var i = 0; i < events.length; i += 1) {\n      var event = events[i];\n      for (var j = 0; j < this.length; j += 1) {\n        var el = this$1[j];\n        var handlers = (void 0);\n        if (!targetSelector && el.dom7Listeners) {\n          handlers = el.dom7Listeners[event];\n        } else if (targetSelector && el.dom7LiveListeners) {\n          handlers = el.dom7LiveListeners[event];\n        }\n        if (handlers && handlers.length) {\n          for (var k = handlers.length - 1; k >= 0; k -= 1) {\n            var handler = handlers[k];\n            if (listener && handler.listener === listener) {\n              el.removeEventListener(event, handler.proxyListener, capture);\n              handlers.splice(k, 1);\n            } else if (!listener) {\n              el.removeEventListener(event, handler.proxyListener, capture);\n              handlers.splice(k, 1);\n            }\n          }\n        }\n      }\n    }\n    return this;\n  }\n  function trigger() {\n    var this$1 = this;\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n\n    var events = args[0].split(' ');\n    var eventData = args[1];\n    for (var i = 0; i < events.length; i += 1) {\n      var event = events[i];\n      for (var j = 0; j < this.length; j += 1) {\n        var el = this$1[j];\n        var evt = (void 0);\n        try {\n          evt = new win.CustomEvent(event, {\n            detail: eventData,\n            bubbles: true,\n            cancelable: true,\n          });\n        } catch (e) {\n          evt = doc.createEvent('Event');\n          evt.initEvent(event, true, true);\n          evt.detail = eventData;\n        }\n        // eslint-disable-next-line\n        el.dom7EventData = args.filter(function (data, dataIndex) { return dataIndex > 0; });\n        el.dispatchEvent(evt);\n        el.dom7EventData = [];\n        delete el.dom7EventData;\n      }\n    }\n    return this;\n  }\n  function transitionEnd(callback) {\n    var events = ['webkitTransitionEnd', 'transitionend'];\n    var dom = this;\n    var i;\n    function fireCallBack(e) {\n      /* jshint validthis:true */\n      if (e.target !== this) { return; }\n      callback.call(this, e);\n      for (i = 0; i < events.length; i += 1) {\n        dom.off(events[i], fireCallBack);\n      }\n    }\n    if (callback) {\n      for (i = 0; i < events.length; i += 1) {\n        dom.on(events[i], fireCallBack);\n      }\n    }\n    return this;\n  }\n  function outerWidth(includeMargins) {\n    if (this.length > 0) {\n      if (includeMargins) {\n        // eslint-disable-next-line\n        var styles = this.styles();\n        return this[0].offsetWidth + parseFloat(styles.getPropertyValue('margin-right')) + parseFloat(styles.getPropertyValue('margin-left'));\n      }\n      return this[0].offsetWidth;\n    }\n    return null;\n  }\n  function outerHeight(includeMargins) {\n    if (this.length > 0) {\n      if (includeMargins) {\n        // eslint-disable-next-line\n        var styles = this.styles();\n        return this[0].offsetHeight + parseFloat(styles.getPropertyValue('margin-top')) + parseFloat(styles.getPropertyValue('margin-bottom'));\n      }\n      return this[0].offsetHeight;\n    }\n    return null;\n  }\n  function offset() {\n    if (this.length > 0) {\n      var el = this[0];\n      var box = el.getBoundingClientRect();\n      var body = doc.body;\n      var clientTop = el.clientTop || body.clientTop || 0;\n      var clientLeft = el.clientLeft || body.clientLeft || 0;\n      var scrollTop = el === win ? win.scrollY : el.scrollTop;\n      var scrollLeft = el === win ? win.scrollX : el.scrollLeft;\n      return {\n        top: (box.top + scrollTop) - clientTop,\n        left: (box.left + scrollLeft) - clientLeft,\n      };\n    }\n\n    return null;\n  }\n  function styles() {\n    if (this[0]) { return win.getComputedStyle(this[0], null); }\n    return {};\n  }\n  function css(props, value) {\n    var this$1 = this;\n\n    var i;\n    if (arguments.length === 1) {\n      if (typeof props === 'string') {\n        if (this[0]) { return win.getComputedStyle(this[0], null).getPropertyValue(props); }\n      } else {\n        for (i = 0; i < this.length; i += 1) {\n          // eslint-disable-next-line\n          for (var prop in props) {\n            this$1[i].style[prop] = props[prop];\n          }\n        }\n        return this;\n      }\n    }\n    if (arguments.length === 2 && typeof props === 'string') {\n      for (i = 0; i < this.length; i += 1) {\n        this$1[i].style[props] = value;\n      }\n      return this;\n    }\n    return this;\n  }\n  // Iterate over the collection passing elements to `callback`\n  function each(callback) {\n    var this$1 = this;\n\n    // Don't bother continuing without a callback\n    if (!callback) { return this; }\n    // Iterate over the current collection\n    for (var i = 0; i < this.length; i += 1) {\n      // If the callback returns false\n      if (callback.call(this$1[i], i, this$1[i]) === false) {\n        // End the loop early\n        return this$1;\n      }\n    }\n    // Return `this` to allow chained DOM operations\n    return this;\n  }\n  // eslint-disable-next-line\n  function html(html) {\n    var this$1 = this;\n\n    if (typeof html === 'undefined') {\n      return this[0] ? this[0].innerHTML : undefined;\n    }\n\n    for (var i = 0; i < this.length; i += 1) {\n      this$1[i].innerHTML = html;\n    }\n    return this;\n  }\n  // eslint-disable-next-line\n  function text(text) {\n    var this$1 = this;\n\n    if (typeof text === 'undefined') {\n      if (this[0]) {\n        return this[0].textContent.trim();\n      }\n      return null;\n    }\n\n    for (var i = 0; i < this.length; i += 1) {\n      this$1[i].textContent = text;\n    }\n    return this;\n  }\n  function is(selector) {\n    var el = this[0];\n    var compareWith;\n    var i;\n    if (!el || typeof selector === 'undefined') { return false; }\n    if (typeof selector === 'string') {\n      if (el.matches) { return el.matches(selector); }\n      else if (el.webkitMatchesSelector) { return el.webkitMatchesSelector(selector); }\n      else if (el.msMatchesSelector) { return el.msMatchesSelector(selector); }\n\n      compareWith = $(selector);\n      for (i = 0; i < compareWith.length; i += 1) {\n        if (compareWith[i] === el) { return true; }\n      }\n      return false;\n    } else if (selector === doc) { return el === doc; }\n    else if (selector === win) { return el === win; }\n\n    if (selector.nodeType || selector instanceof Dom7) {\n      compareWith = selector.nodeType ? [selector] : selector;\n      for (i = 0; i < compareWith.length; i += 1) {\n        if (compareWith[i] === el) { return true; }\n      }\n      return false;\n    }\n    return false;\n  }\n  function index() {\n    var child = this[0];\n    var i;\n    if (child) {\n      i = 0;\n      // eslint-disable-next-line\n      while ((child = child.previousSibling) !== null) {\n        if (child.nodeType === 1) { i += 1; }\n      }\n      return i;\n    }\n    return undefined;\n  }\n  // eslint-disable-next-line\n  function eq(index) {\n    if (typeof index === 'undefined') { return this; }\n    var length = this.length;\n    var returnIndex;\n    if (index > length - 1) {\n      return new Dom7([]);\n    }\n    if (index < 0) {\n      returnIndex = length + index;\n      if (returnIndex < 0) { return new Dom7([]); }\n      return new Dom7([this[returnIndex]]);\n    }\n    return new Dom7([this[index]]);\n  }\n  function append() {\n    var this$1 = this;\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n\n    var newChild;\n\n    for (var k = 0; k < args.length; k += 1) {\n      newChild = args[k];\n      for (var i = 0; i < this.length; i += 1) {\n        if (typeof newChild === 'string') {\n          var tempDiv = doc.createElement('div');\n          tempDiv.innerHTML = newChild;\n          while (tempDiv.firstChild) {\n            this$1[i].appendChild(tempDiv.firstChild);\n          }\n        } else if (newChild instanceof Dom7) {\n          for (var j = 0; j < newChild.length; j += 1) {\n            this$1[i].appendChild(newChild[j]);\n          }\n        } else {\n          this$1[i].appendChild(newChild);\n        }\n      }\n    }\n\n    return this;\n  }\n  function prepend(newChild) {\n    var this$1 = this;\n\n    var i;\n    var j;\n    for (i = 0; i < this.length; i += 1) {\n      if (typeof newChild === 'string') {\n        var tempDiv = doc.createElement('div');\n        tempDiv.innerHTML = newChild;\n        for (j = tempDiv.childNodes.length - 1; j >= 0; j -= 1) {\n          this$1[i].insertBefore(tempDiv.childNodes[j], this$1[i].childNodes[0]);\n        }\n      } else if (newChild instanceof Dom7) {\n        for (j = 0; j < newChild.length; j += 1) {\n          this$1[i].insertBefore(newChild[j], this$1[i].childNodes[0]);\n        }\n      } else {\n        this$1[i].insertBefore(newChild, this$1[i].childNodes[0]);\n      }\n    }\n    return this;\n  }\n  function next(selector) {\n    if (this.length > 0) {\n      if (selector) {\n        if (this[0].nextElementSibling && $(this[0].nextElementSibling).is(selector)) {\n          return new Dom7([this[0].nextElementSibling]);\n        }\n        return new Dom7([]);\n      }\n\n      if (this[0].nextElementSibling) { return new Dom7([this[0].nextElementSibling]); }\n      return new Dom7([]);\n    }\n    return new Dom7([]);\n  }\n  function nextAll(selector) {\n    var nextEls = [];\n    var el = this[0];\n    if (!el) { return new Dom7([]); }\n    while (el.nextElementSibling) {\n      var next = el.nextElementSibling; // eslint-disable-line\n      if (selector) {\n        if ($(next).is(selector)) { nextEls.push(next); }\n      } else { nextEls.push(next); }\n      el = next;\n    }\n    return new Dom7(nextEls);\n  }\n  function prev(selector) {\n    if (this.length > 0) {\n      var el = this[0];\n      if (selector) {\n        if (el.previousElementSibling && $(el.previousElementSibling).is(selector)) {\n          return new Dom7([el.previousElementSibling]);\n        }\n        return new Dom7([]);\n      }\n\n      if (el.previousElementSibling) { return new Dom7([el.previousElementSibling]); }\n      return new Dom7([]);\n    }\n    return new Dom7([]);\n  }\n  function prevAll(selector) {\n    var prevEls = [];\n    var el = this[0];\n    if (!el) { return new Dom7([]); }\n    while (el.previousElementSibling) {\n      var prev = el.previousElementSibling; // eslint-disable-line\n      if (selector) {\n        if ($(prev).is(selector)) { prevEls.push(prev); }\n      } else { prevEls.push(prev); }\n      el = prev;\n    }\n    return new Dom7(prevEls);\n  }\n  function parent(selector) {\n    var this$1 = this;\n\n    var parents = []; // eslint-disable-line\n    for (var i = 0; i < this.length; i += 1) {\n      if (this$1[i].parentNode !== null) {\n        if (selector) {\n          if ($(this$1[i].parentNode).is(selector)) { parents.push(this$1[i].parentNode); }\n        } else {\n          parents.push(this$1[i].parentNode);\n        }\n      }\n    }\n    return $(unique(parents));\n  }\n  function parents(selector) {\n    var this$1 = this;\n\n    var parents = []; // eslint-disable-line\n    for (var i = 0; i < this.length; i += 1) {\n      var parent = this$1[i].parentNode; // eslint-disable-line\n      while (parent) {\n        if (selector) {\n          if ($(parent).is(selector)) { parents.push(parent); }\n        } else {\n          parents.push(parent);\n        }\n        parent = parent.parentNode;\n      }\n    }\n    return $(unique(parents));\n  }\n  function closest(selector) {\n    var closest = this; // eslint-disable-line\n    if (typeof selector === 'undefined') {\n      return new Dom7([]);\n    }\n    if (!closest.is(selector)) {\n      closest = closest.parents(selector).eq(0);\n    }\n    return closest;\n  }\n  function find(selector) {\n    var this$1 = this;\n\n    var foundElements = [];\n    for (var i = 0; i < this.length; i += 1) {\n      var found = this$1[i].querySelectorAll(selector);\n      for (var j = 0; j < found.length; j += 1) {\n        foundElements.push(found[j]);\n      }\n    }\n    return new Dom7(foundElements);\n  }\n  function children(selector) {\n    var this$1 = this;\n\n    var children = []; // eslint-disable-line\n    for (var i = 0; i < this.length; i += 1) {\n      var childNodes = this$1[i].childNodes;\n\n      for (var j = 0; j < childNodes.length; j += 1) {\n        if (!selector) {\n          if (childNodes[j].nodeType === 1) { children.push(childNodes[j]); }\n        } else if (childNodes[j].nodeType === 1 && $(childNodes[j]).is(selector)) {\n          children.push(childNodes[j]);\n        }\n      }\n    }\n    return new Dom7(unique(children));\n  }\n  function remove() {\n    var this$1 = this;\n\n    for (var i = 0; i < this.length; i += 1) {\n      if (this$1[i].parentNode) { this$1[i].parentNode.removeChild(this$1[i]); }\n    }\n    return this;\n  }\n  function add() {\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n\n    var dom = this;\n    var i;\n    var j;\n    for (i = 0; i < args.length; i += 1) {\n      var toAdd = $(args[i]);\n      for (j = 0; j < toAdd.length; j += 1) {\n        dom[dom.length] = toAdd[j];\n        dom.length += 1;\n      }\n    }\n    return dom;\n  }\n\n  var Methods = {\n    addClass: addClass,\n    removeClass: removeClass,\n    hasClass: hasClass,\n    toggleClass: toggleClass,\n    attr: attr,\n    removeAttr: removeAttr,\n    data: data,\n    transform: transform,\n    transition: transition,\n    on: on,\n    off: off,\n    trigger: trigger,\n    transitionEnd: transitionEnd,\n    outerWidth: outerWidth,\n    outerHeight: outerHeight,\n    offset: offset,\n    css: css,\n    each: each,\n    html: html,\n    text: text,\n    is: is,\n    index: index,\n    eq: eq,\n    append: append,\n    prepend: prepend,\n    next: next,\n    nextAll: nextAll,\n    prev: prev,\n    prevAll: prevAll,\n    parent: parent,\n    parents: parents,\n    closest: closest,\n    find: find,\n    children: children,\n    remove: remove,\n    add: add,\n    styles: styles,\n  };\n\n  Object.keys(Methods).forEach(function (methodName) {\n    $.fn[methodName] = Methods[methodName];\n  });\n\n  var Utils = {\n    deleteProps: function deleteProps(obj) {\n      var object = obj;\n      Object.keys(object).forEach(function (key) {\n        try {\n          object[key] = null;\n        } catch (e) {\n          // no getter for object\n        }\n        try {\n          delete object[key];\n        } catch (e) {\n          // something got wrong\n        }\n      });\n    },\n    nextTick: function nextTick(callback, delay) {\n      if ( delay === void 0 ) delay = 0;\n\n      return setTimeout(callback, delay);\n    },\n    now: function now() {\n      return Date.now();\n    },\n    getTranslate: function getTranslate(el, axis) {\n      if ( axis === void 0 ) axis = 'x';\n\n      var matrix;\n      var curTransform;\n      var transformMatrix;\n\n      var curStyle = win.getComputedStyle(el, null);\n\n      if (win.WebKitCSSMatrix) {\n        curTransform = curStyle.transform || curStyle.webkitTransform;\n        if (curTransform.split(',').length > 6) {\n          curTransform = curTransform.split(', ').map(function (a) { return a.replace(',', '.'); }).join(', ');\n        }\n        // Some old versions of Webkit choke when 'none' is passed; pass\n        // empty string instead in this case\n        transformMatrix = new win.WebKitCSSMatrix(curTransform === 'none' ? '' : curTransform);\n      } else {\n        transformMatrix = curStyle.MozTransform || curStyle.OTransform || curStyle.MsTransform || curStyle.msTransform || curStyle.transform || curStyle.getPropertyValue('transform').replace('translate(', 'matrix(1, 0, 0, 1,');\n        matrix = transformMatrix.toString().split(',');\n      }\n\n      if (axis === 'x') {\n        // Latest Chrome and webkits Fix\n        if (win.WebKitCSSMatrix) { curTransform = transformMatrix.m41; }\n        // Crazy IE10 Matrix\n        else if (matrix.length === 16) { curTransform = parseFloat(matrix[12]); }\n        // Normal Browsers\n        else { curTransform = parseFloat(matrix[4]); }\n      }\n      if (axis === 'y') {\n        // Latest Chrome and webkits Fix\n        if (win.WebKitCSSMatrix) { curTransform = transformMatrix.m42; }\n        // Crazy IE10 Matrix\n        else if (matrix.length === 16) { curTransform = parseFloat(matrix[13]); }\n        // Normal Browsers\n        else { curTransform = parseFloat(matrix[5]); }\n      }\n      return curTransform || 0;\n    },\n    parseUrlQuery: function parseUrlQuery(url) {\n      var query = {};\n      var urlToParse = url || win.location.href;\n      var i;\n      var params;\n      var param;\n      var length;\n      if (typeof urlToParse === 'string' && urlToParse.length) {\n        urlToParse = urlToParse.indexOf('?') > -1 ? urlToParse.replace(/\\S*\\?/, '') : '';\n        params = urlToParse.split('&').filter(function (paramsPart) { return paramsPart !== ''; });\n        length = params.length;\n\n        for (i = 0; i < length; i += 1) {\n          param = params[i].replace(/#\\S+/g, '').split('=');\n          query[decodeURIComponent(param[0])] = typeof param[1] === 'undefined' ? undefined : decodeURIComponent(param[1]) || '';\n        }\n      }\n      return query;\n    },\n    isObject: function isObject(o) {\n      return typeof o === 'object' && o !== null && o.constructor && o.constructor === Object;\n    },\n    extend: function extend() {\n      var args = [], len$1 = arguments.length;\n      while ( len$1-- ) args[ len$1 ] = arguments[ len$1 ];\n\n      var to = Object(args[0]);\n      for (var i = 1; i < args.length; i += 1) {\n        var nextSource = args[i];\n        if (nextSource !== undefined && nextSource !== null) {\n          var keysArray = Object.keys(Object(nextSource));\n          for (var nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex += 1) {\n            var nextKey = keysArray[nextIndex];\n            var desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\n            if (desc !== undefined && desc.enumerable) {\n              if (Utils.isObject(to[nextKey]) && Utils.isObject(nextSource[nextKey])) {\n                Utils.extend(to[nextKey], nextSource[nextKey]);\n              } else if (!Utils.isObject(to[nextKey]) && Utils.isObject(nextSource[nextKey])) {\n                to[nextKey] = {};\n                Utils.extend(to[nextKey], nextSource[nextKey]);\n              } else {\n                to[nextKey] = nextSource[nextKey];\n              }\n            }\n          }\n        }\n      }\n      return to;\n    },\n  };\n\n  var Support = (function Support() {\n    var testDiv = doc.createElement('div');\n    return {\n      touch: (win.Modernizr && win.Modernizr.touch === true) || (function checkTouch() {\n        return !!(('ontouchstart' in win) || (win.DocumentTouch && doc instanceof win.DocumentTouch));\n      }()),\n\n      pointerEvents: !!(win.navigator.pointerEnabled || win.PointerEvent),\n      prefixedPointerEvents: !!win.navigator.msPointerEnabled,\n\n      transition: (function checkTransition() {\n        var style = testDiv.style;\n        return ('transition' in style || 'webkitTransition' in style || 'MozTransition' in style);\n      }()),\n      transforms3d: (win.Modernizr && win.Modernizr.csstransforms3d === true) || (function checkTransforms3d() {\n        var style = testDiv.style;\n        return ('webkitPerspective' in style || 'MozPerspective' in style || 'OPerspective' in style || 'MsPerspective' in style || 'perspective' in style);\n      }()),\n\n      flexbox: (function checkFlexbox() {\n        var style = testDiv.style;\n        var styles = ('alignItems webkitAlignItems webkitBoxAlign msFlexAlign mozBoxAlign webkitFlexDirection msFlexDirection mozBoxDirection mozBoxOrient webkitBoxDirection webkitBoxOrient').split(' ');\n        for (var i = 0; i < styles.length; i += 1) {\n          if (styles[i] in style) { return true; }\n        }\n        return false;\n      }()),\n\n      observer: (function checkObserver() {\n        return ('MutationObserver' in win || 'WebkitMutationObserver' in win);\n      }()),\n\n      passiveListener: (function checkPassiveListener() {\n        var supportsPassive = false;\n        try {\n          var opts = Object.defineProperty({}, 'passive', {\n            // eslint-disable-next-line\n            get: function get() {\n              supportsPassive = true;\n            },\n          });\n          win.addEventListener('testPassiveListener', null, opts);\n        } catch (e) {\n          // No support\n        }\n        return supportsPassive;\n      }()),\n\n      gestures: (function checkGestures() {\n        return 'ongesturestart' in win;\n      }()),\n    };\n  }());\n\n  var SwiperClass = function SwiperClass(params) {\n    if ( params === void 0 ) params = {};\n\n    var self = this;\n    self.params = params;\n\n    // Events\n    self.eventsListeners = {};\n\n    if (self.params && self.params.on) {\n      Object.keys(self.params.on).forEach(function (eventName) {\n        self.on(eventName, self.params.on[eventName]);\n      });\n    }\n  };\n\n  var staticAccessors = { components: { configurable: true } };\n  SwiperClass.prototype.on = function on (events, handler, priority) {\n    var self = this;\n    if (typeof handler !== 'function') { return self; }\n    var method = priority ? 'unshift' : 'push';\n    events.split(' ').forEach(function (event) {\n      if (!self.eventsListeners[event]) { self.eventsListeners[event] = []; }\n      self.eventsListeners[event][method](handler);\n    });\n    return self;\n  };\n  SwiperClass.prototype.once = function once (events, handler, priority) {\n    var self = this;\n    if (typeof handler !== 'function') { return self; }\n    function onceHandler() {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n      handler.apply(self, args);\n      self.off(events, onceHandler);\n    }\n    return self.on(events, onceHandler, priority);\n  };\n  SwiperClass.prototype.off = function off (events, handler) {\n    var self = this;\n    if (!self.eventsListeners) { return self; }\n    events.split(' ').forEach(function (event) {\n      if (typeof handler === 'undefined') {\n        self.eventsListeners[event] = [];\n      } else {\n        self.eventsListeners[event].forEach(function (eventHandler, index) {\n          if (eventHandler === handler) {\n            self.eventsListeners[event].splice(index, 1);\n          }\n        });\n      }\n    });\n    return self;\n  };\n  SwiperClass.prototype.emit = function emit () {\n      var args = [], len = arguments.length;\n      while ( len-- ) args[ len ] = arguments[ len ];\n\n    var self = this;\n    if (!self.eventsListeners) { return self; }\n    var events;\n    var data;\n    var context;\n    if (typeof args[0] === 'string' || Array.isArray(args[0])) {\n      events = args[0];\n      data = args.slice(1, args.length);\n      context = self;\n    } else {\n      events = args[0].events;\n      data = args[0].data;\n      context = args[0].context || self;\n    }\n    var eventsArray = Array.isArray(events) ? events : events.split(' ');\n    eventsArray.forEach(function (event) {\n      if (self.eventsListeners && self.eventsListeners[event]) {\n        var handlers = [];\n        self.eventsListeners[event].forEach(function (eventHandler) {\n          handlers.push(eventHandler);\n        });\n        handlers.forEach(function (eventHandler) {\n          eventHandler.apply(context, data);\n        });\n      }\n    });\n    return self;\n  };\n  SwiperClass.prototype.useModulesParams = function useModulesParams (instanceParams) {\n    var instance = this;\n    if (!instance.modules) { return; }\n    Object.keys(instance.modules).forEach(function (moduleName) {\n      var module = instance.modules[moduleName];\n      // Extend params\n      if (module.params) {\n        Utils.extend(instanceParams, module.params);\n      }\n    });\n  };\n  SwiperClass.prototype.useModules = function useModules (modulesParams) {\n      if ( modulesParams === void 0 ) modulesParams = {};\n\n    var instance = this;\n    if (!instance.modules) { return; }\n    Object.keys(instance.modules).forEach(function (moduleName) {\n      var module = instance.modules[moduleName];\n      var moduleParams = modulesParams[moduleName] || {};\n      // Extend instance methods and props\n      if (module.instance) {\n        Object.keys(module.instance).forEach(function (modulePropName) {\n          var moduleProp = module.instance[modulePropName];\n          if (typeof moduleProp === 'function') {\n            instance[modulePropName] = moduleProp.bind(instance);\n          } else {\n            instance[modulePropName] = moduleProp;\n          }\n        });\n      }\n      // Add event listeners\n      if (module.on && instance.on) {\n        Object.keys(module.on).forEach(function (moduleEventName) {\n          instance.on(moduleEventName, module.on[moduleEventName]);\n        });\n      }\n\n      // Module create callback\n      if (module.create) {\n        module.create.bind(instance)(moduleParams);\n      }\n    });\n  };\n  staticAccessors.components.set = function (components) {\n    var Class = this;\n    if (!Class.use) { return; }\n    Class.use(components);\n  };\n  SwiperClass.installModule = function installModule (module) {\n      var params = [], len = arguments.length - 1;\n      while ( len-- > 0 ) params[ len ] = arguments[ len + 1 ];\n\n    var Class = this;\n    if (!Class.prototype.modules) { Class.prototype.modules = {}; }\n    var name = module.name || (((Object.keys(Class.prototype.modules).length) + \"_\" + (Utils.now())));\n    Class.prototype.modules[name] = module;\n    // Prototype\n    if (module.proto) {\n      Object.keys(module.proto).forEach(function (key) {\n        Class.prototype[key] = module.proto[key];\n      });\n    }\n    // Class\n    if (module.static) {\n      Object.keys(module.static).forEach(function (key) {\n        Class[key] = module.static[key];\n      });\n    }\n    // Callback\n    if (module.install) {\n      module.install.apply(Class, params);\n    }\n    return Class;\n  };\n  SwiperClass.use = function use (module) {\n      var params = [], len = arguments.length - 1;\n      while ( len-- > 0 ) params[ len ] = arguments[ len + 1 ];\n\n    var Class = this;\n    if (Array.isArray(module)) {\n      module.forEach(function (m) { return Class.installModule(m); });\n      return Class;\n    }\n    return Class.installModule.apply(Class, [ module ].concat( params ));\n  };\n\n  Object.defineProperties( SwiperClass, staticAccessors );\n\n  function updateSize () {\n    var swiper = this;\n    var width;\n    var height;\n    var $el = swiper.$el;\n    if (typeof swiper.params.width !== 'undefined') {\n      width = swiper.params.width;\n    } else {\n      width = $el[0].clientWidth;\n    }\n    if (typeof swiper.params.height !== 'undefined') {\n      height = swiper.params.height;\n    } else {\n      height = $el[0].clientHeight;\n    }\n    if ((width === 0 && swiper.isHorizontal()) || (height === 0 && swiper.isVertical())) {\n      return;\n    }\n\n    // Subtract paddings\n    width = width - parseInt($el.css('padding-left'), 10) - parseInt($el.css('padding-right'), 10);\n    height = height - parseInt($el.css('padding-top'), 10) - parseInt($el.css('padding-bottom'), 10);\n\n    Utils.extend(swiper, {\n      width: width,\n      height: height,\n      size: swiper.isHorizontal() ? width : height,\n    });\n  }\n\n  function updateSlides () {\n    var swiper = this;\n    var params = swiper.params;\n\n    var $wrapperEl = swiper.$wrapperEl;\n    var swiperSize = swiper.size;\n    var rtl = swiper.rtlTranslate;\n    var wrongRTL = swiper.wrongRTL;\n    var isVirtual = swiper.virtual && params.virtual.enabled;\n    var previousSlidesLength = isVirtual ? swiper.virtual.slides.length : swiper.slides.length;\n    var slides = $wrapperEl.children((\".\" + (swiper.params.slideClass)));\n    var slidesLength = isVirtual ? swiper.virtual.slides.length : slides.length;\n    var snapGrid = [];\n    var slidesGrid = [];\n    var slidesSizesGrid = [];\n\n    var offsetBefore = params.slidesOffsetBefore;\n    if (typeof offsetBefore === 'function') {\n      offsetBefore = params.slidesOffsetBefore.call(swiper);\n    }\n\n    var offsetAfter = params.slidesOffsetAfter;\n    if (typeof offsetAfter === 'function') {\n      offsetAfter = params.slidesOffsetAfter.call(swiper);\n    }\n\n    var previousSnapGridLength = swiper.snapGrid.length;\n    var previousSlidesGridLength = swiper.snapGrid.length;\n\n    var spaceBetween = params.spaceBetween;\n    var slidePosition = -offsetBefore;\n    var prevSlideSize = 0;\n    var index = 0;\n    if (typeof swiperSize === 'undefined') {\n      return;\n    }\n    if (typeof spaceBetween === 'string' && spaceBetween.indexOf('%') >= 0) {\n      spaceBetween = (parseFloat(spaceBetween.replace('%', '')) / 100) * swiperSize;\n    }\n\n    swiper.virtualSize = -spaceBetween;\n\n    // reset margins\n    if (rtl) { slides.css({ marginLeft: '', marginTop: '' }); }\n    else { slides.css({ marginRight: '', marginBottom: '' }); }\n\n    var slidesNumberEvenToRows;\n    if (params.slidesPerColumn > 1) {\n      if (Math.floor(slidesLength / params.slidesPerColumn) === slidesLength / swiper.params.slidesPerColumn) {\n        slidesNumberEvenToRows = slidesLength;\n      } else {\n        slidesNumberEvenToRows = Math.ceil(slidesLength / params.slidesPerColumn) * params.slidesPerColumn;\n      }\n      if (params.slidesPerView !== 'auto' && params.slidesPerColumnFill === 'row') {\n        slidesNumberEvenToRows = Math.max(slidesNumberEvenToRows, params.slidesPerView * params.slidesPerColumn);\n      }\n    }\n\n    // Calc slides\n    var slideSize;\n    var slidesPerColumn = params.slidesPerColumn;\n    var slidesPerRow = slidesNumberEvenToRows / slidesPerColumn;\n    var numFullColumns = slidesPerRow - ((params.slidesPerColumn * slidesPerRow) - slidesLength);\n    for (var i = 0; i < slidesLength; i += 1) {\n      slideSize = 0;\n      var slide = slides.eq(i);\n      if (params.slidesPerColumn > 1) {\n        // Set slides order\n        var newSlideOrderIndex = (void 0);\n        var column = (void 0);\n        var row = (void 0);\n        if (params.slidesPerColumnFill === 'column') {\n          column = Math.floor(i / slidesPerColumn);\n          row = i - (column * slidesPerColumn);\n          if (column > numFullColumns || (column === numFullColumns && row === slidesPerColumn - 1)) {\n            row += 1;\n            if (row >= slidesPerColumn) {\n              row = 0;\n              column += 1;\n            }\n          }\n          newSlideOrderIndex = column + ((row * slidesNumberEvenToRows) / slidesPerColumn);\n          slide\n            .css({\n              '-webkit-box-ordinal-group': newSlideOrderIndex,\n              '-moz-box-ordinal-group': newSlideOrderIndex,\n              '-ms-flex-order': newSlideOrderIndex,\n              '-webkit-order': newSlideOrderIndex,\n              order: newSlideOrderIndex,\n            });\n        } else {\n          row = Math.floor(i / slidesPerRow);\n          column = i - (row * slidesPerRow);\n        }\n        slide\n          .css(\n            (\"margin-\" + (swiper.isHorizontal() ? 'top' : 'left')),\n            (row !== 0 && params.spaceBetween) && (((params.spaceBetween) + \"px\"))\n          )\n          .attr('data-swiper-column', column)\n          .attr('data-swiper-row', row);\n      }\n      if (slide.css('display') === 'none') { continue; } // eslint-disable-line\n\n      if (params.slidesPerView === 'auto') {\n        var slideStyles = win.getComputedStyle(slide[0], null);\n        var currentTransform = slide[0].style.transform;\n        var currentWebKitTransform = slide[0].style.webkitTransform;\n        if (currentTransform) {\n          slide[0].style.transform = 'none';\n        }\n        if (currentWebKitTransform) {\n          slide[0].style.webkitTransform = 'none';\n        }\n        if (swiper.isHorizontal()) {\n          slideSize = slide[0].getBoundingClientRect().width +\n            parseFloat(slideStyles.getPropertyValue('margin-left')) +\n            parseFloat(slideStyles.getPropertyValue('margin-right'));\n        } else {\n          slideSize = slide[0].getBoundingClientRect().height +\n            parseFloat(slideStyles.getPropertyValue('margin-top')) +\n            parseFloat(slideStyles.getPropertyValue('margin-bottom'));\n        }\n        if (currentTransform) {\n          slide[0].style.transform = currentTransform;\n        }\n        if (currentWebKitTransform) {\n          slide[0].style.webkitTransform = currentWebKitTransform;\n        }\n        if (params.roundLengths) { slideSize = Math.floor(slideSize); }\n      } else {\n        slideSize = (swiperSize - ((params.slidesPerView - 1) * spaceBetween)) / params.slidesPerView;\n        if (params.roundLengths) { slideSize = Math.floor(slideSize); }\n\n        if (slides[i]) {\n          if (swiper.isHorizontal()) {\n            slides[i].style.width = slideSize + \"px\";\n          } else {\n            slides[i].style.height = slideSize + \"px\";\n          }\n        }\n      }\n      if (slides[i]) {\n        slides[i].swiperSlideSize = slideSize;\n      }\n      slidesSizesGrid.push(slideSize);\n\n\n      if (params.centeredSlides) {\n        slidePosition = slidePosition + (slideSize / 2) + (prevSlideSize / 2) + spaceBetween;\n        if (prevSlideSize === 0 && i !== 0) { slidePosition = slidePosition - (swiperSize / 2) - spaceBetween; }\n        if (i === 0) { slidePosition = slidePosition - (swiperSize / 2) - spaceBetween; }\n        if (Math.abs(slidePosition) < 1 / 1000) { slidePosition = 0; }\n        if (params.roundLengths) { slidePosition = Math.floor(slidePosition); }\n        if ((index) % params.slidesPerGroup === 0) { snapGrid.push(slidePosition); }\n        slidesGrid.push(slidePosition);\n      } else {\n        if (params.roundLengths) { slidePosition = Math.floor(slidePosition); }\n        if ((index) % params.slidesPerGroup === 0) { snapGrid.push(slidePosition); }\n        slidesGrid.push(slidePosition);\n        slidePosition = slidePosition + slideSize + spaceBetween;\n      }\n\n      swiper.virtualSize += slideSize + spaceBetween;\n\n      prevSlideSize = slideSize;\n\n      index += 1;\n    }\n    swiper.virtualSize = Math.max(swiper.virtualSize, swiperSize) + offsetAfter;\n    var newSlidesGrid;\n\n    if (\n      rtl && wrongRTL && (params.effect === 'slide' || params.effect === 'coverflow')) {\n      $wrapperEl.css({ width: ((swiper.virtualSize + params.spaceBetween) + \"px\") });\n    }\n    if (!Support.flexbox || params.setWrapperSize) {\n      if (swiper.isHorizontal()) { $wrapperEl.css({ width: ((swiper.virtualSize + params.spaceBetween) + \"px\") }); }\n      else { $wrapperEl.css({ height: ((swiper.virtualSize + params.spaceBetween) + \"px\") }); }\n    }\n\n    if (params.slidesPerColumn > 1) {\n      swiper.virtualSize = (slideSize + params.spaceBetween) * slidesNumberEvenToRows;\n      swiper.virtualSize = Math.ceil(swiper.virtualSize / params.slidesPerColumn) - params.spaceBetween;\n      if (swiper.isHorizontal()) { $wrapperEl.css({ width: ((swiper.virtualSize + params.spaceBetween) + \"px\") }); }\n      else { $wrapperEl.css({ height: ((swiper.virtualSize + params.spaceBetween) + \"px\") }); }\n      if (params.centeredSlides) {\n        newSlidesGrid = [];\n        for (var i$1 = 0; i$1 < snapGrid.length; i$1 += 1) {\n          var slidesGridItem = snapGrid[i$1];\n          if (params.roundLengths) { slidesGridItem = Math.floor(slidesGridItem); }\n          if (snapGrid[i$1] < swiper.virtualSize + snapGrid[0]) { newSlidesGrid.push(slidesGridItem); }\n        }\n        snapGrid = newSlidesGrid;\n      }\n    }\n\n    // Remove last grid elements depending on width\n    if (!params.centeredSlides) {\n      newSlidesGrid = [];\n      for (var i$2 = 0; i$2 < snapGrid.length; i$2 += 1) {\n        var slidesGridItem$1 = snapGrid[i$2];\n        if (params.roundLengths) { slidesGridItem$1 = Math.floor(slidesGridItem$1); }\n        if (snapGrid[i$2] <= swiper.virtualSize - swiperSize) {\n          newSlidesGrid.push(slidesGridItem$1);\n        }\n      }\n      snapGrid = newSlidesGrid;\n      if (Math.floor(swiper.virtualSize - swiperSize) - Math.floor(snapGrid[snapGrid.length - 1]) > 1) {\n        snapGrid.push(swiper.virtualSize - swiperSize);\n      }\n    }\n    if (snapGrid.length === 0) { snapGrid = [0]; }\n\n    if (params.spaceBetween !== 0) {\n      if (swiper.isHorizontal()) {\n        if (rtl) { slides.css({ marginLeft: (spaceBetween + \"px\") }); }\n        else { slides.css({ marginRight: (spaceBetween + \"px\") }); }\n      } else { slides.css({ marginBottom: (spaceBetween + \"px\") }); }\n    }\n\n    Utils.extend(swiper, {\n      slides: slides,\n      snapGrid: snapGrid,\n      slidesGrid: slidesGrid,\n      slidesSizesGrid: slidesSizesGrid,\n    });\n\n    if (slidesLength !== previousSlidesLength) {\n      swiper.emit('slidesLengthChange');\n    }\n    if (snapGrid.length !== previousSnapGridLength) {\n      if (swiper.params.watchOverflow) { swiper.checkOverflow(); }\n      swiper.emit('snapGridLengthChange');\n    }\n    if (slidesGrid.length !== previousSlidesGridLength) {\n      swiper.emit('slidesGridLengthChange');\n    }\n\n    if (params.watchSlidesProgress || params.watchSlidesVisibility) {\n      swiper.updateSlidesOffset();\n    }\n  }\n\n  function updateAutoHeight (speed) {\n    var swiper = this;\n    var activeSlides = [];\n    var newHeight = 0;\n    var i;\n    if (typeof speed === 'number') {\n      swiper.setTransition(speed);\n    } else if (speed === true) {\n      swiper.setTransition(swiper.params.speed);\n    }\n    // Find slides currently in view\n    if (swiper.params.slidesPerView !== 'auto' && swiper.params.slidesPerView > 1) {\n      for (i = 0; i < Math.ceil(swiper.params.slidesPerView); i += 1) {\n        var index = swiper.activeIndex + i;\n        if (index > swiper.slides.length) { break; }\n        activeSlides.push(swiper.slides.eq(index)[0]);\n      }\n    } else {\n      activeSlides.push(swiper.slides.eq(swiper.activeIndex)[0]);\n    }\n\n    // Find new height from highest slide in view\n    for (i = 0; i < activeSlides.length; i += 1) {\n      if (typeof activeSlides[i] !== 'undefined') {\n        var height = activeSlides[i].offsetHeight;\n        newHeight = height > newHeight ? height : newHeight;\n      }\n    }\n\n    // Update Height\n    if (newHeight) { swiper.$wrapperEl.css('height', (newHeight + \"px\")); }\n  }\n\n  function updateSlidesOffset () {\n    var swiper = this;\n    var slides = swiper.slides;\n    for (var i = 0; i < slides.length; i += 1) {\n      slides[i].swiperSlideOffset = swiper.isHorizontal() ? slides[i].offsetLeft : slides[i].offsetTop;\n    }\n  }\n\n  function updateSlidesProgress (translate) {\n    if ( translate === void 0 ) translate = (this && this.translate) || 0;\n\n    var swiper = this;\n    var params = swiper.params;\n\n    var slides = swiper.slides;\n    var rtl = swiper.rtlTranslate;\n\n    if (slides.length === 0) { return; }\n    if (typeof slides[0].swiperSlideOffset === 'undefined') { swiper.updateSlidesOffset(); }\n\n    var offsetCenter = -translate;\n    if (rtl) { offsetCenter = translate; }\n\n    // Visible Slides\n    slides.removeClass(params.slideVisibleClass);\n\n    for (var i = 0; i < slides.length; i += 1) {\n      var slide = slides[i];\n      var slideProgress =\n        (\n          (offsetCenter + (params.centeredSlides ? swiper.minTranslate() : 0)) - slide.swiperSlideOffset\n        ) / (slide.swiperSlideSize + params.spaceBetween);\n      if (params.watchSlidesVisibility) {\n        var slideBefore = -(offsetCenter - slide.swiperSlideOffset);\n        var slideAfter = slideBefore + swiper.slidesSizesGrid[i];\n        var isVisible =\n                  (slideBefore >= 0 && slideBefore < swiper.size) ||\n                  (slideAfter > 0 && slideAfter <= swiper.size) ||\n                  (slideBefore <= 0 && slideAfter >= swiper.size);\n        if (isVisible) {\n          slides.eq(i).addClass(params.slideVisibleClass);\n        }\n      }\n      slide.progress = rtl ? -slideProgress : slideProgress;\n    }\n  }\n\n  function updateProgress (translate) {\n    if ( translate === void 0 ) translate = (this && this.translate) || 0;\n\n    var swiper = this;\n    var params = swiper.params;\n\n    var translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n    var progress = swiper.progress;\n    var isBeginning = swiper.isBeginning;\n    var isEnd = swiper.isEnd;\n    var wasBeginning = isBeginning;\n    var wasEnd = isEnd;\n    if (translatesDiff === 0) {\n      progress = 0;\n      isBeginning = true;\n      isEnd = true;\n    } else {\n      progress = (translate - swiper.minTranslate()) / (translatesDiff);\n      isBeginning = progress <= 0;\n      isEnd = progress >= 1;\n    }\n    Utils.extend(swiper, {\n      progress: progress,\n      isBeginning: isBeginning,\n      isEnd: isEnd,\n    });\n\n    if (params.watchSlidesProgress || params.watchSlidesVisibility) { swiper.updateSlidesProgress(translate); }\n\n    if (isBeginning && !wasBeginning) {\n      swiper.emit('reachBeginning toEdge');\n    }\n    if (isEnd && !wasEnd) {\n      swiper.emit('reachEnd toEdge');\n    }\n    if ((wasBeginning && !isBeginning) || (wasEnd && !isEnd)) {\n      swiper.emit('fromEdge');\n    }\n\n    swiper.emit('progress', progress);\n  }\n\n  function updateSlidesClasses () {\n    var swiper = this;\n\n    var slides = swiper.slides;\n    var params = swiper.params;\n    var $wrapperEl = swiper.$wrapperEl;\n    var activeIndex = swiper.activeIndex;\n    var realIndex = swiper.realIndex;\n    var isVirtual = swiper.virtual && params.virtual.enabled;\n\n    slides.removeClass(((params.slideActiveClass) + \" \" + (params.slideNextClass) + \" \" + (params.slidePrevClass) + \" \" + (params.slideDuplicateActiveClass) + \" \" + (params.slideDuplicateNextClass) + \" \" + (params.slideDuplicatePrevClass)));\n\n    var activeSlide;\n    if (isVirtual) {\n      activeSlide = swiper.$wrapperEl.find((\".\" + (params.slideClass) + \"[data-swiper-slide-index=\\\"\" + activeIndex + \"\\\"]\"));\n    } else {\n      activeSlide = slides.eq(activeIndex);\n    }\n\n    // Active classes\n    activeSlide.addClass(params.slideActiveClass);\n\n    if (params.loop) {\n      // Duplicate to all looped slides\n      if (activeSlide.hasClass(params.slideDuplicateClass)) {\n        $wrapperEl\n          .children((\".\" + (params.slideClass) + \":not(.\" + (params.slideDuplicateClass) + \")[data-swiper-slide-index=\\\"\" + realIndex + \"\\\"]\"))\n          .addClass(params.slideDuplicateActiveClass);\n      } else {\n        $wrapperEl\n          .children((\".\" + (params.slideClass) + \".\" + (params.slideDuplicateClass) + \"[data-swiper-slide-index=\\\"\" + realIndex + \"\\\"]\"))\n          .addClass(params.slideDuplicateActiveClass);\n      }\n    }\n    // Next Slide\n    var nextSlide = activeSlide.nextAll((\".\" + (params.slideClass))).eq(0).addClass(params.slideNextClass);\n    if (params.loop && nextSlide.length === 0) {\n      nextSlide = slides.eq(0);\n      nextSlide.addClass(params.slideNextClass);\n    }\n    // Prev Slide\n    var prevSlide = activeSlide.prevAll((\".\" + (params.slideClass))).eq(0).addClass(params.slidePrevClass);\n    if (params.loop && prevSlide.length === 0) {\n      prevSlide = slides.eq(-1);\n      prevSlide.addClass(params.slidePrevClass);\n    }\n    if (params.loop) {\n      // Duplicate to all looped slides\n      if (nextSlide.hasClass(params.slideDuplicateClass)) {\n        $wrapperEl\n          .children((\".\" + (params.slideClass) + \":not(.\" + (params.slideDuplicateClass) + \")[data-swiper-slide-index=\\\"\" + (nextSlide.attr('data-swiper-slide-index')) + \"\\\"]\"))\n          .addClass(params.slideDuplicateNextClass);\n      } else {\n        $wrapperEl\n          .children((\".\" + (params.slideClass) + \".\" + (params.slideDuplicateClass) + \"[data-swiper-slide-index=\\\"\" + (nextSlide.attr('data-swiper-slide-index')) + \"\\\"]\"))\n          .addClass(params.slideDuplicateNextClass);\n      }\n      if (prevSlide.hasClass(params.slideDuplicateClass)) {\n        $wrapperEl\n          .children((\".\" + (params.slideClass) + \":not(.\" + (params.slideDuplicateClass) + \")[data-swiper-slide-index=\\\"\" + (prevSlide.attr('data-swiper-slide-index')) + \"\\\"]\"))\n          .addClass(params.slideDuplicatePrevClass);\n      } else {\n        $wrapperEl\n          .children((\".\" + (params.slideClass) + \".\" + (params.slideDuplicateClass) + \"[data-swiper-slide-index=\\\"\" + (prevSlide.attr('data-swiper-slide-index')) + \"\\\"]\"))\n          .addClass(params.slideDuplicatePrevClass);\n      }\n    }\n  }\n\n  function updateActiveIndex (newActiveIndex) {\n    var swiper = this;\n    var translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n    var slidesGrid = swiper.slidesGrid;\n    var snapGrid = swiper.snapGrid;\n    var params = swiper.params;\n    var previousIndex = swiper.activeIndex;\n    var previousRealIndex = swiper.realIndex;\n    var previousSnapIndex = swiper.snapIndex;\n    var activeIndex = newActiveIndex;\n    var snapIndex;\n    if (typeof activeIndex === 'undefined') {\n      for (var i = 0; i < slidesGrid.length; i += 1) {\n        if (typeof slidesGrid[i + 1] !== 'undefined') {\n          if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1] - ((slidesGrid[i + 1] - slidesGrid[i]) / 2)) {\n            activeIndex = i;\n          } else if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1]) {\n            activeIndex = i + 1;\n          }\n        } else if (translate >= slidesGrid[i]) {\n          activeIndex = i;\n        }\n      }\n      // Normalize slideIndex\n      if (params.normalizeSlideIndex) {\n        if (activeIndex < 0 || typeof activeIndex === 'undefined') { activeIndex = 0; }\n      }\n    }\n    if (snapGrid.indexOf(translate) >= 0) {\n      snapIndex = snapGrid.indexOf(translate);\n    } else {\n      snapIndex = Math.floor(activeIndex / params.slidesPerGroup);\n    }\n    if (snapIndex >= snapGrid.length) { snapIndex = snapGrid.length - 1; }\n    if (activeIndex === previousIndex) {\n      if (snapIndex !== previousSnapIndex) {\n        swiper.snapIndex = snapIndex;\n        swiper.emit('snapIndexChange');\n      }\n      return;\n    }\n\n    // Get real index\n    var realIndex = parseInt(swiper.slides.eq(activeIndex).attr('data-swiper-slide-index') || activeIndex, 10);\n\n    Utils.extend(swiper, {\n      snapIndex: snapIndex,\n      realIndex: realIndex,\n      previousIndex: previousIndex,\n      activeIndex: activeIndex,\n    });\n    swiper.emit('activeIndexChange');\n    swiper.emit('snapIndexChange');\n    if (previousRealIndex !== realIndex) {\n      swiper.emit('realIndexChange');\n    }\n    swiper.emit('slideChange');\n  }\n\n  function updateClickedSlide (e) {\n    var swiper = this;\n    var params = swiper.params;\n    var slide = $(e.target).closest((\".\" + (params.slideClass)))[0];\n    var slideFound = false;\n    if (slide) {\n      for (var i = 0; i < swiper.slides.length; i += 1) {\n        if (swiper.slides[i] === slide) { slideFound = true; }\n      }\n    }\n\n    if (slide && slideFound) {\n      swiper.clickedSlide = slide;\n      if (swiper.virtual && swiper.params.virtual.enabled) {\n        swiper.clickedIndex = parseInt($(slide).attr('data-swiper-slide-index'), 10);\n      } else {\n        swiper.clickedIndex = $(slide).index();\n      }\n    } else {\n      swiper.clickedSlide = undefined;\n      swiper.clickedIndex = undefined;\n      return;\n    }\n    if (params.slideToClickedSlide && swiper.clickedIndex !== undefined && swiper.clickedIndex !== swiper.activeIndex) {\n      swiper.slideToClickedSlide();\n    }\n  }\n\n  var update = {\n    updateSize: updateSize,\n    updateSlides: updateSlides,\n    updateAutoHeight: updateAutoHeight,\n    updateSlidesOffset: updateSlidesOffset,\n    updateSlidesProgress: updateSlidesProgress,\n    updateProgress: updateProgress,\n    updateSlidesClasses: updateSlidesClasses,\n    updateActiveIndex: updateActiveIndex,\n    updateClickedSlide: updateClickedSlide,\n  };\n\n  function getTranslate (axis) {\n    if ( axis === void 0 ) axis = this.isHorizontal() ? 'x' : 'y';\n\n    var swiper = this;\n\n    var params = swiper.params;\n    var rtl = swiper.rtlTranslate;\n    var translate = swiper.translate;\n    var $wrapperEl = swiper.$wrapperEl;\n\n    if (params.virtualTranslate) {\n      return rtl ? -translate : translate;\n    }\n\n    var currentTranslate = Utils.getTranslate($wrapperEl[0], axis);\n    if (rtl) { currentTranslate = -currentTranslate; }\n\n    return currentTranslate || 0;\n  }\n\n  function setTranslate (translate, byController) {\n    var swiper = this;\n    var rtl = swiper.rtlTranslate;\n    var params = swiper.params;\n    var $wrapperEl = swiper.$wrapperEl;\n    var progress = swiper.progress;\n    var x = 0;\n    var y = 0;\n    var z = 0;\n\n    if (swiper.isHorizontal()) {\n      x = rtl ? -translate : translate;\n    } else {\n      y = translate;\n    }\n\n    if (params.roundLengths) {\n      x = Math.floor(x);\n      y = Math.floor(y);\n    }\n\n    if (!params.virtualTranslate) {\n      if (Support.transforms3d) { $wrapperEl.transform((\"translate3d(\" + x + \"px, \" + y + \"px, \" + z + \"px)\")); }\n      else { $wrapperEl.transform((\"translate(\" + x + \"px, \" + y + \"px)\")); }\n    }\n    swiper.previousTranslate = swiper.translate;\n    swiper.translate = swiper.isHorizontal() ? x : y;\n\n    // Check if we need to update progress\n    var newProgress;\n    var translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n    if (translatesDiff === 0) {\n      newProgress = 0;\n    } else {\n      newProgress = (translate - swiper.minTranslate()) / (translatesDiff);\n    }\n    if (newProgress !== progress) {\n      swiper.updateProgress(translate);\n    }\n\n    swiper.emit('setTranslate', swiper.translate, byController);\n  }\n\n  function minTranslate () {\n    return (-this.snapGrid[0]);\n  }\n\n  function maxTranslate () {\n    return (-this.snapGrid[this.snapGrid.length - 1]);\n  }\n\n  var translate = {\n    getTranslate: getTranslate,\n    setTranslate: setTranslate,\n    minTranslate: minTranslate,\n    maxTranslate: maxTranslate,\n  };\n\n  function setTransition (duration, byController) {\n    var swiper = this;\n\n    swiper.$wrapperEl.transition(duration);\n\n    swiper.emit('setTransition', duration, byController);\n  }\n\n  function transitionStart (runCallbacks, direction) {\n    if ( runCallbacks === void 0 ) runCallbacks = true;\n\n    var swiper = this;\n    var activeIndex = swiper.activeIndex;\n    var params = swiper.params;\n    var previousIndex = swiper.previousIndex;\n    if (params.autoHeight) {\n      swiper.updateAutoHeight();\n    }\n\n    var dir = direction;\n    if (!dir) {\n      if (activeIndex > previousIndex) { dir = 'next'; }\n      else if (activeIndex < previousIndex) { dir = 'prev'; }\n      else { dir = 'reset'; }\n    }\n\n    swiper.emit('transitionStart');\n\n    if (runCallbacks && activeIndex !== previousIndex) {\n      if (dir === 'reset') {\n        swiper.emit('slideResetTransitionStart');\n        return;\n      }\n      swiper.emit('slideChangeTransitionStart');\n      if (dir === 'next') {\n        swiper.emit('slideNextTransitionStart');\n      } else {\n        swiper.emit('slidePrevTransitionStart');\n      }\n    }\n  }\n\n  function transitionEnd$1 (runCallbacks, direction) {\n    if ( runCallbacks === void 0 ) runCallbacks = true;\n\n    var swiper = this;\n    var activeIndex = swiper.activeIndex;\n    var previousIndex = swiper.previousIndex;\n    swiper.animating = false;\n    swiper.setTransition(0);\n\n    var dir = direction;\n    if (!dir) {\n      if (activeIndex > previousIndex) { dir = 'next'; }\n      else if (activeIndex < previousIndex) { dir = 'prev'; }\n      else { dir = 'reset'; }\n    }\n\n    swiper.emit('transitionEnd');\n\n    if (runCallbacks && activeIndex !== previousIndex) {\n      if (dir === 'reset') {\n        swiper.emit('slideResetTransitionEnd');\n        return;\n      }\n      swiper.emit('slideChangeTransitionEnd');\n      if (dir === 'next') {\n        swiper.emit('slideNextTransitionEnd');\n      } else {\n        swiper.emit('slidePrevTransitionEnd');\n      }\n    }\n  }\n\n  var transition$1 = {\n    setTransition: setTransition,\n    transitionStart: transitionStart,\n    transitionEnd: transitionEnd$1,\n  };\n\n  function slideTo (index, speed, runCallbacks, internal) {\n    if ( index === void 0 ) index = 0;\n    if ( speed === void 0 ) speed = this.params.speed;\n    if ( runCallbacks === void 0 ) runCallbacks = true;\n\n    var swiper = this;\n    var slideIndex = index;\n    if (slideIndex < 0) { slideIndex = 0; }\n\n    var params = swiper.params;\n    var snapGrid = swiper.snapGrid;\n    var slidesGrid = swiper.slidesGrid;\n    var previousIndex = swiper.previousIndex;\n    var activeIndex = swiper.activeIndex;\n    var rtl = swiper.rtlTranslate;\n    if (swiper.animating && params.preventIntercationOnTransition) {\n      return false;\n    }\n\n    var snapIndex = Math.floor(slideIndex / params.slidesPerGroup);\n    if (snapIndex >= snapGrid.length) { snapIndex = snapGrid.length - 1; }\n\n    if ((activeIndex || params.initialSlide || 0) === (previousIndex || 0) && runCallbacks) {\n      swiper.emit('beforeSlideChangeStart');\n    }\n\n    var translate = -snapGrid[snapIndex];\n\n    // Update progress\n    swiper.updateProgress(translate);\n\n    // Normalize slideIndex\n    if (params.normalizeSlideIndex) {\n      for (var i = 0; i < slidesGrid.length; i += 1) {\n        if (-Math.floor(translate * 100) >= Math.floor(slidesGrid[i] * 100)) {\n          slideIndex = i;\n        }\n      }\n    }\n    // Directions locks\n    if (swiper.initialized && slideIndex !== activeIndex) {\n      if (!swiper.allowSlideNext && translate < swiper.translate && translate < swiper.minTranslate()) {\n        return false;\n      }\n      if (!swiper.allowSlidePrev && translate > swiper.translate && translate > swiper.maxTranslate()) {\n        if ((activeIndex || 0) !== slideIndex) { return false; }\n      }\n    }\n\n    var direction;\n    if (slideIndex > activeIndex) { direction = 'next'; }\n    else if (slideIndex < activeIndex) { direction = 'prev'; }\n    else { direction = 'reset'; }\n\n\n    // Update Index\n    if ((rtl && -translate === swiper.translate) || (!rtl && translate === swiper.translate)) {\n      swiper.updateActiveIndex(slideIndex);\n      // Update Height\n      if (params.autoHeight) {\n        swiper.updateAutoHeight();\n      }\n      swiper.updateSlidesClasses();\n      if (params.effect !== 'slide') {\n        swiper.setTranslate(translate);\n      }\n      if (direction !== 'reset') {\n        swiper.transitionStart(runCallbacks, direction);\n        swiper.transitionEnd(runCallbacks, direction);\n      }\n      return false;\n    }\n\n    if (speed === 0 || !Support.transition) {\n      swiper.setTransition(0);\n      swiper.setTranslate(translate);\n      swiper.updateActiveIndex(slideIndex);\n      swiper.updateSlidesClasses();\n      swiper.emit('beforeTransitionStart', speed, internal);\n      swiper.transitionStart(runCallbacks, direction);\n      swiper.transitionEnd(runCallbacks, direction);\n    } else {\n      swiper.setTransition(speed);\n      swiper.setTranslate(translate);\n      swiper.updateActiveIndex(slideIndex);\n      swiper.updateSlidesClasses();\n      swiper.emit('beforeTransitionStart', speed, internal);\n      swiper.transitionStart(runCallbacks, direction);\n      if (!swiper.animating) {\n        swiper.animating = true;\n        if (!swiper.onSlideToWrapperTransitionEnd) {\n          swiper.onSlideToWrapperTransitionEnd = function transitionEnd(e) {\n            if (!swiper || swiper.destroyed) { return; }\n            if (e.target !== this) { return; }\n            swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n            swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.onSlideToWrapperTransitionEnd);\n            swiper.transitionEnd(runCallbacks, direction);\n          };\n        }\n        swiper.$wrapperEl[0].addEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n        swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.onSlideToWrapperTransitionEnd);\n      }\n    }\n\n    return true;\n  }\n\n  function slideToLoop (index, speed, runCallbacks, internal) {\n    if ( index === void 0 ) index = 0;\n    if ( speed === void 0 ) speed = this.params.speed;\n    if ( runCallbacks === void 0 ) runCallbacks = true;\n\n    var swiper = this;\n    var newIndex = index;\n    if (swiper.params.loop) {\n      newIndex += swiper.loopedSlides;\n    }\n\n    return swiper.slideTo(newIndex, speed, runCallbacks, internal);\n  }\n\n  /* eslint no-unused-vars: \"off\" */\n  function slideNext (speed, runCallbacks, internal) {\n    if ( speed === void 0 ) speed = this.params.speed;\n    if ( runCallbacks === void 0 ) runCallbacks = true;\n\n    var swiper = this;\n    var params = swiper.params;\n    var animating = swiper.animating;\n    if (params.loop) {\n      if (animating) { return false; }\n      swiper.loopFix();\n      // eslint-disable-next-line\n      swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n      return swiper.slideTo(swiper.activeIndex + params.slidesPerGroup, speed, runCallbacks, internal);\n    }\n    return swiper.slideTo(swiper.activeIndex + params.slidesPerGroup, speed, runCallbacks, internal);\n  }\n\n  /* eslint no-unused-vars: \"off\" */\n  function slidePrev (speed, runCallbacks, internal) {\n    if ( speed === void 0 ) speed = this.params.speed;\n    if ( runCallbacks === void 0 ) runCallbacks = true;\n\n    var swiper = this;\n    var params = swiper.params;\n    var animating = swiper.animating;\n    var snapGrid = swiper.snapGrid;\n    var slidesGrid = swiper.slidesGrid;\n    var rtlTranslate = swiper.rtlTranslate;\n\n    if (params.loop) {\n      if (animating) { return false; }\n      swiper.loopFix();\n      // eslint-disable-next-line\n      swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n    }\n    var translate = rtlTranslate ? swiper.translate : -swiper.translate;\n    function normalize(val) {\n      if (val < 0) { return -Math.floor(Math.abs(val)); }\n      return Math.floor(val);\n    }\n    var normalizedTranslate = normalize(translate);\n    var normalizedSnapGrid = snapGrid.map(function (val) { return normalize(val); });\n    var normalizedSlidesGrid = slidesGrid.map(function (val) { return normalize(val); });\n\n    var currentSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate)];\n    var prevSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate) - 1];\n    var prevIndex;\n    if (typeof prevSnap !== 'undefined') {\n      prevIndex = slidesGrid.indexOf(prevSnap);\n      if (prevIndex < 0) { prevIndex = swiper.activeIndex - 1; }\n    }\n    return swiper.slideTo(prevIndex, speed, runCallbacks, internal);\n  }\n\n  /* eslint no-unused-vars: \"off\" */\n  function slideReset (speed, runCallbacks, internal) {\n    if ( speed === void 0 ) speed = this.params.speed;\n    if ( runCallbacks === void 0 ) runCallbacks = true;\n\n    var swiper = this;\n    return swiper.slideTo(swiper.activeIndex, speed, runCallbacks, internal);\n  }\n\n  /* eslint no-unused-vars: \"off\" */\n  function slideToClosest (speed, runCallbacks, internal) {\n    if ( speed === void 0 ) speed = this.params.speed;\n    if ( runCallbacks === void 0 ) runCallbacks = true;\n\n    var swiper = this;\n    var index = swiper.activeIndex;\n    var snapIndex = Math.floor(index / swiper.params.slidesPerGroup);\n\n    if (snapIndex < swiper.snapGrid.length - 1) {\n      var translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n\n      var currentSnap = swiper.snapGrid[snapIndex];\n      var nextSnap = swiper.snapGrid[snapIndex + 1];\n\n      if ((translate - currentSnap) > (nextSnap - currentSnap) / 2) {\n        index = swiper.params.slidesPerGroup;\n      }\n    }\n\n    return swiper.slideTo(index, speed, runCallbacks, internal);\n  }\n\n  function slideToClickedSlide () {\n    var swiper = this;\n    var params = swiper.params;\n    var $wrapperEl = swiper.$wrapperEl;\n\n    var slidesPerView = params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : params.slidesPerView;\n    var slideToIndex = swiper.clickedIndex;\n    var realIndex;\n    if (params.loop) {\n      if (swiper.animating) { return; }\n      realIndex = parseInt($(swiper.clickedSlide).attr('data-swiper-slide-index'), 10);\n      if (params.centeredSlides) {\n        if (\n          (slideToIndex < swiper.loopedSlides - (slidesPerView / 2)) ||\n          (slideToIndex > (swiper.slides.length - swiper.loopedSlides) + (slidesPerView / 2))\n        ) {\n          swiper.loopFix();\n          slideToIndex = $wrapperEl\n            .children((\".\" + (params.slideClass) + \"[data-swiper-slide-index=\\\"\" + realIndex + \"\\\"]:not(.\" + (params.slideDuplicateClass) + \")\"))\n            .eq(0)\n            .index();\n\n          Utils.nextTick(function () {\n            swiper.slideTo(slideToIndex);\n          });\n        } else {\n          swiper.slideTo(slideToIndex);\n        }\n      } else if (slideToIndex > swiper.slides.length - slidesPerView) {\n        swiper.loopFix();\n        slideToIndex = $wrapperEl\n          .children((\".\" + (params.slideClass) + \"[data-swiper-slide-index=\\\"\" + realIndex + \"\\\"]:not(.\" + (params.slideDuplicateClass) + \")\"))\n          .eq(0)\n          .index();\n\n        Utils.nextTick(function () {\n          swiper.slideTo(slideToIndex);\n        });\n      } else {\n        swiper.slideTo(slideToIndex);\n      }\n    } else {\n      swiper.slideTo(slideToIndex);\n    }\n  }\n\n  var slide = {\n    slideTo: slideTo,\n    slideToLoop: slideToLoop,\n    slideNext: slideNext,\n    slidePrev: slidePrev,\n    slideReset: slideReset,\n    slideToClosest: slideToClosest,\n    slideToClickedSlide: slideToClickedSlide,\n  };\n\n  function loopCreate () {\n    var swiper = this;\n    var params = swiper.params;\n    var $wrapperEl = swiper.$wrapperEl;\n    // Remove duplicated slides\n    $wrapperEl.children((\".\" + (params.slideClass) + \".\" + (params.slideDuplicateClass))).remove();\n\n    var slides = $wrapperEl.children((\".\" + (params.slideClass)));\n\n    if (params.loopFillGroupWithBlank) {\n      var blankSlidesNum = params.slidesPerGroup - (slides.length % params.slidesPerGroup);\n      if (blankSlidesNum !== params.slidesPerGroup) {\n        for (var i = 0; i < blankSlidesNum; i += 1) {\n          var blankNode = $(doc.createElement('div')).addClass(((params.slideClass) + \" \" + (params.slideBlankClass)));\n          $wrapperEl.append(blankNode);\n        }\n        slides = $wrapperEl.children((\".\" + (params.slideClass)));\n      }\n    }\n\n    if (params.slidesPerView === 'auto' && !params.loopedSlides) { params.loopedSlides = slides.length; }\n\n    swiper.loopedSlides = parseInt(params.loopedSlides || params.slidesPerView, 10);\n    swiper.loopedSlides += params.loopAdditionalSlides;\n    if (swiper.loopedSlides > slides.length) {\n      swiper.loopedSlides = slides.length;\n    }\n\n    var prependSlides = [];\n    var appendSlides = [];\n    slides.each(function (index, el) {\n      var slide = $(el);\n      if (index < swiper.loopedSlides) { appendSlides.push(el); }\n      if (index < slides.length && index >= slides.length - swiper.loopedSlides) { prependSlides.push(el); }\n      slide.attr('data-swiper-slide-index', index);\n    });\n    for (var i$1 = 0; i$1 < appendSlides.length; i$1 += 1) {\n      $wrapperEl.append($(appendSlides[i$1].cloneNode(true)).addClass(params.slideDuplicateClass));\n    }\n    for (var i$2 = prependSlides.length - 1; i$2 >= 0; i$2 -= 1) {\n      $wrapperEl.prepend($(prependSlides[i$2].cloneNode(true)).addClass(params.slideDuplicateClass));\n    }\n  }\n\n  function loopFix () {\n    var swiper = this;\n    var params = swiper.params;\n    var activeIndex = swiper.activeIndex;\n    var slides = swiper.slides;\n    var loopedSlides = swiper.loopedSlides;\n    var allowSlidePrev = swiper.allowSlidePrev;\n    var allowSlideNext = swiper.allowSlideNext;\n    var snapGrid = swiper.snapGrid;\n    var rtl = swiper.rtlTranslate;\n    var newIndex;\n    swiper.allowSlidePrev = true;\n    swiper.allowSlideNext = true;\n\n    var snapTranslate = -snapGrid[activeIndex];\n    var diff = snapTranslate - swiper.getTranslate();\n\n\n    // Fix For Negative Oversliding\n    if (activeIndex < loopedSlides) {\n      newIndex = (slides.length - (loopedSlides * 3)) + activeIndex;\n      newIndex += loopedSlides;\n      var slideChanged = swiper.slideTo(newIndex, 0, false, true);\n      if (slideChanged && diff !== 0) {\n        swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);\n      }\n    } else if ((params.slidesPerView === 'auto' && activeIndex >= loopedSlides * 2) || (activeIndex >= slides.length - loopedSlides)) {\n      // Fix For Positive Oversliding\n      newIndex = -slides.length + activeIndex + loopedSlides;\n      newIndex += loopedSlides;\n      var slideChanged$1 = swiper.slideTo(newIndex, 0, false, true);\n      if (slideChanged$1 && diff !== 0) {\n        swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);\n      }\n    }\n    swiper.allowSlidePrev = allowSlidePrev;\n    swiper.allowSlideNext = allowSlideNext;\n  }\n\n  function loopDestroy () {\n    var swiper = this;\n    var $wrapperEl = swiper.$wrapperEl;\n    var params = swiper.params;\n    var slides = swiper.slides;\n    $wrapperEl.children((\".\" + (params.slideClass) + \".\" + (params.slideDuplicateClass))).remove();\n    slides.removeAttr('data-swiper-slide-index');\n  }\n\n  var loop = {\n    loopCreate: loopCreate,\n    loopFix: loopFix,\n    loopDestroy: loopDestroy,\n  };\n\n  function setGrabCursor (moving) {\n    var swiper = this;\n    if (Support.touch || !swiper.params.simulateTouch || (swiper.params.watchOverflow && swiper.isLocked)) { return; }\n    var el = swiper.el;\n    el.style.cursor = 'move';\n    el.style.cursor = moving ? '-webkit-grabbing' : '-webkit-grab';\n    el.style.cursor = moving ? '-moz-grabbin' : '-moz-grab';\n    el.style.cursor = moving ? 'grabbing' : 'grab';\n  }\n\n  function unsetGrabCursor () {\n    var swiper = this;\n    if (Support.touch || (swiper.params.watchOverflow && swiper.isLocked)) { return; }\n    swiper.el.style.cursor = '';\n  }\n\n  var grabCursor = {\n    setGrabCursor: setGrabCursor,\n    unsetGrabCursor: unsetGrabCursor,\n  };\n\n  function appendSlide (slides) {\n    var swiper = this;\n    var $wrapperEl = swiper.$wrapperEl;\n    var params = swiper.params;\n    if (params.loop) {\n      swiper.loopDestroy();\n    }\n    if (typeof slides === 'object' && 'length' in slides) {\n      for (var i = 0; i < slides.length; i += 1) {\n        if (slides[i]) { $wrapperEl.append(slides[i]); }\n      }\n    } else {\n      $wrapperEl.append(slides);\n    }\n    if (params.loop) {\n      swiper.loopCreate();\n    }\n    if (!(params.observer && Support.observer)) {\n      swiper.update();\n    }\n  }\n\n  function prependSlide (slides) {\n    var swiper = this;\n    var params = swiper.params;\n    var $wrapperEl = swiper.$wrapperEl;\n    var activeIndex = swiper.activeIndex;\n\n    if (params.loop) {\n      swiper.loopDestroy();\n    }\n    var newActiveIndex = activeIndex + 1;\n    if (typeof slides === 'object' && 'length' in slides) {\n      for (var i = 0; i < slides.length; i += 1) {\n        if (slides[i]) { $wrapperEl.prepend(slides[i]); }\n      }\n      newActiveIndex = activeIndex + slides.length;\n    } else {\n      $wrapperEl.prepend(slides);\n    }\n    if (params.loop) {\n      swiper.loopCreate();\n    }\n    if (!(params.observer && Support.observer)) {\n      swiper.update();\n    }\n    swiper.slideTo(newActiveIndex, 0, false);\n  }\n\n  function addSlide (index, slides) {\n    var swiper = this;\n    var $wrapperEl = swiper.$wrapperEl;\n    var params = swiper.params;\n    var activeIndex = swiper.activeIndex;\n    var activeIndexBuffer = activeIndex;\n    if (params.loop) {\n      activeIndexBuffer -= swiper.loopedSlides;\n      swiper.loopDestroy();\n      swiper.slides = $wrapperEl.children((\".\" + (params.slideClass)));\n    }\n    var baseLength = swiper.slides.length;\n    if (index <= 0) {\n      swiper.prependSlide(slides);\n      return;\n    } else if (index >= baseLength) {\n      swiper.appendSlide(slides);\n      return;\n    }\n    var newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + 1 : activeIndexBuffer;\n\n    var slidesBuffer = [];\n    for (var i = baseLength - 1; i >= index; i -= 1) {\n      var currentSlide = swiper.slides.eq(i);\n      currentSlide.remove();\n      slidesBuffer.unshift(currentSlide);\n    }\n\n    if (typeof slides === 'object' && 'length' in slides) {\n      for (var i$1 = 0; i$1 < slides.length; i$1 += 1) {\n        if (slides[i$1]) { $wrapperEl.append(slides[i$1]); }\n      }\n      newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + slides.length : activeIndexBuffer;\n    } else {\n      $wrapperEl.append(slides);\n    }\n\n    for (var i$2 = 0; i$2 < slidesBuffer.length; i$2 += 1) {\n      $wrapperEl.append(slidesBuffer[i$2]);\n    }\n\n    if (params.loop) {\n      swiper.loopCreate();\n    }\n    if (!(params.observer && Support.observer)) {\n      swiper.update();\n    }\n    if (params.loop) {\n      swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n    } else {\n      swiper.slideTo(newActiveIndex, 0, false);\n    }\n  }\n\n  function removeSlide (slidesIndexes) {\n    var swiper = this;\n    var params = swiper.params;\n    var $wrapperEl = swiper.$wrapperEl;\n    var activeIndex = swiper.activeIndex;\n\n    var activeIndexBuffer = activeIndex;\n    if (params.loop) {\n      activeIndexBuffer -= swiper.loopedSlides;\n      swiper.loopDestroy();\n      swiper.slides = $wrapperEl.children((\".\" + (params.slideClass)));\n    }\n    var newActiveIndex = activeIndexBuffer;\n    var indexToRemove;\n\n    if (typeof slidesIndexes === 'object' && 'length' in slidesIndexes) {\n      for (var i = 0; i < slidesIndexes.length; i += 1) {\n        indexToRemove = slidesIndexes[i];\n        if (swiper.slides[indexToRemove]) { swiper.slides.eq(indexToRemove).remove(); }\n        if (indexToRemove < newActiveIndex) { newActiveIndex -= 1; }\n      }\n      newActiveIndex = Math.max(newActiveIndex, 0);\n    } else {\n      indexToRemove = slidesIndexes;\n      if (swiper.slides[indexToRemove]) { swiper.slides.eq(indexToRemove).remove(); }\n      if (indexToRemove < newActiveIndex) { newActiveIndex -= 1; }\n      newActiveIndex = Math.max(newActiveIndex, 0);\n    }\n\n    if (params.loop) {\n      swiper.loopCreate();\n    }\n\n    if (!(params.observer && Support.observer)) {\n      swiper.update();\n    }\n    if (params.loop) {\n      swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n    } else {\n      swiper.slideTo(newActiveIndex, 0, false);\n    }\n  }\n\n  function removeAllSlides () {\n    var swiper = this;\n\n    var slidesIndexes = [];\n    for (var i = 0; i < swiper.slides.length; i += 1) {\n      slidesIndexes.push(i);\n    }\n    swiper.removeSlide(slidesIndexes);\n  }\n\n  var manipulation = {\n    appendSlide: appendSlide,\n    prependSlide: prependSlide,\n    addSlide: addSlide,\n    removeSlide: removeSlide,\n    removeAllSlides: removeAllSlides,\n  };\n\n  var Device = (function Device() {\n    var ua = win.navigator.userAgent;\n\n    var device = {\n      ios: false,\n      android: false,\n      androidChrome: false,\n      desktop: false,\n      windows: false,\n      iphone: false,\n      ipod: false,\n      ipad: false,\n      cordova: win.cordova || win.phonegap,\n      phonegap: win.cordova || win.phonegap,\n    };\n\n    var windows = ua.match(/(Windows Phone);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\n    var android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\n    var ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n    var ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n    var iphone = !ipad && ua.match(/(iPhone\\sOS|iOS)\\s([\\d_]+)/);\n\n\n    // Windows\n    if (windows) {\n      device.os = 'windows';\n      device.osVersion = windows[2];\n      device.windows = true;\n    }\n    // Android\n    if (android && !windows) {\n      device.os = 'android';\n      device.osVersion = android[2];\n      device.android = true;\n      device.androidChrome = ua.toLowerCase().indexOf('chrome') >= 0;\n    }\n    if (ipad || iphone || ipod) {\n      device.os = 'ios';\n      device.ios = true;\n    }\n    // iOS\n    if (iphone && !ipod) {\n      device.osVersion = iphone[2].replace(/_/g, '.');\n      device.iphone = true;\n    }\n    if (ipad) {\n      device.osVersion = ipad[2].replace(/_/g, '.');\n      device.ipad = true;\n    }\n    if (ipod) {\n      device.osVersion = ipod[3] ? ipod[3].replace(/_/g, '.') : null;\n      device.iphone = true;\n    }\n    // iOS 8+ changed UA\n    if (device.ios && device.osVersion && ua.indexOf('Version/') >= 0) {\n      if (device.osVersion.split('.')[0] === '10') {\n        device.osVersion = ua.toLowerCase().split('version/')[1].split(' ')[0];\n      }\n    }\n\n    // Desktop\n    device.desktop = !(device.os || device.android || device.webView);\n\n    // Webview\n    device.webView = (iphone || ipad || ipod) && ua.match(/.*AppleWebKit(?!.*Safari)/i);\n\n    // Minimal UI\n    if (device.os && device.os === 'ios') {\n      var osVersionArr = device.osVersion.split('.');\n      var metaViewport = doc.querySelector('meta[name=\"viewport\"]');\n      device.minimalUi =\n        !device.webView &&\n        (ipod || iphone) &&\n        (osVersionArr[0] * 1 === 7 ? osVersionArr[1] * 1 >= 1 : osVersionArr[0] * 1 > 7) &&\n        metaViewport && metaViewport.getAttribute('content').indexOf('minimal-ui') >= 0;\n    }\n\n    // Pixel Ratio\n    device.pixelRatio = win.devicePixelRatio || 1;\n\n    // Export object\n    return device;\n  }());\n\n  function onTouchStart (event) {\n    var swiper = this;\n    var data = swiper.touchEventsData;\n    var params = swiper.params;\n    var touches = swiper.touches;\n    if (swiper.animating && params.preventIntercationOnTransition) {\n      return;\n    }\n    var e = event;\n    if (e.originalEvent) { e = e.originalEvent; }\n    data.isTouchEvent = e.type === 'touchstart';\n    if (!data.isTouchEvent && 'which' in e && e.which === 3) { return; }\n    if (data.isTouched && data.isMoved) { return; }\n    if (params.noSwiping && $(e.target).closest(params.noSwipingSelector ? params.noSwipingSelector : (\".\" + (params.noSwipingClass)))[0]) {\n      swiper.allowClick = true;\n      return;\n    }\n    if (params.swipeHandler) {\n      if (!$(e).closest(params.swipeHandler)[0]) { return; }\n    }\n\n    touches.currentX = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n    touches.currentY = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n    var startX = touches.currentX;\n    var startY = touches.currentY;\n\n    // Do NOT start if iOS edge swipe is detected. Otherwise iOS app (UIWebView) cannot swipe-to-go-back anymore\n\n    if (\n      Device.ios &&\n      !Device.cordova &&\n      params.iOSEdgeSwipeDetection &&\n      ((startX <= params.iOSEdgeSwipeThreshold) ||\n      (startX >= win.screen.width - params.iOSEdgeSwipeThreshold))\n    ) {\n      return;\n    }\n\n    Utils.extend(data, {\n      isTouched: true,\n      isMoved: false,\n      allowTouchCallbacks: true,\n      isScrolling: undefined,\n      startMoving: undefined,\n    });\n\n    touches.startX = startX;\n    touches.startY = startY;\n    data.touchStartTime = Utils.now();\n    swiper.allowClick = true;\n    swiper.updateSize();\n    swiper.swipeDirection = undefined;\n    if (params.threshold > 0) { data.allowThresholdMove = false; }\n    if (e.type !== 'touchstart') {\n      var preventDefault = true;\n      if ($(e.target).is(data.formElements)) { preventDefault = false; }\n      if (\n        doc.activeElement &&\n        $(doc.activeElement).is(data.formElements) &&\n        doc.activeElement !== e.target\n      ) {\n        doc.activeElement.blur();\n      }\n      if (preventDefault && swiper.allowTouchMove) {\n        e.preventDefault();\n      }\n    }\n    swiper.emit('touchStart', e);\n  }\n\n  function onTouchMove (event) {\n    var swiper = this;\n    var data = swiper.touchEventsData;\n    var params = swiper.params;\n    var touches = swiper.touches;\n    var rtl = swiper.rtlTranslate;\n    var e = event;\n    if (e.originalEvent) { e = e.originalEvent; }\n    if (!data.isTouched) {\n      if (data.startMoving && data.isScrolling) {\n        swiper.emit('touchMoveOpposite', e);\n      }\n      return;\n    }\n    if (data.isTouchEvent && e.type === 'mousemove') { return; }\n    var pageX = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;\n    var pageY = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;\n    if (e.preventedByNestedSwiper) {\n      touches.startX = pageX;\n      touches.startY = pageY;\n      return;\n    }\n    if (!swiper.allowTouchMove) {\n      // isMoved = true;\n      swiper.allowClick = false;\n      if (data.isTouched) {\n        Utils.extend(touches, {\n          startX: pageX,\n          startY: pageY,\n          currentX: pageX,\n          currentY: pageY,\n        });\n        data.touchStartTime = Utils.now();\n      }\n      return;\n    }\n    if (data.isTouchEvent && params.touchReleaseOnEdges && !params.loop) {\n      if (swiper.isVertical()) {\n        // Vertical\n        if (\n          (pageY < touches.startY && swiper.translate <= swiper.maxTranslate()) ||\n          (pageY > touches.startY && swiper.translate >= swiper.minTranslate())\n        ) {\n          data.isTouched = false;\n          data.isMoved = false;\n          return;\n        }\n      } else if (\n        (pageX < touches.startX && swiper.translate <= swiper.maxTranslate()) ||\n        (pageX > touches.startX && swiper.translate >= swiper.minTranslate())\n      ) {\n        return;\n      }\n    }\n    if (data.isTouchEvent && doc.activeElement) {\n      if (e.target === doc.activeElement && $(e.target).is(data.formElements)) {\n        data.isMoved = true;\n        swiper.allowClick = false;\n        return;\n      }\n    }\n    if (data.allowTouchCallbacks) {\n      swiper.emit('touchMove', e);\n    }\n    if (e.targetTouches && e.targetTouches.length > 1) { return; }\n\n    touches.currentX = pageX;\n    touches.currentY = pageY;\n\n    var diffX = touches.currentX - touches.startX;\n    var diffY = touches.currentY - touches.startY;\n\n    if (typeof data.isScrolling === 'undefined') {\n      var touchAngle;\n      if ((swiper.isHorizontal() && touches.currentY === touches.startY) || (swiper.isVertical() && touches.currentX === touches.startX)) {\n        data.isScrolling = false;\n      } else {\n        // eslint-disable-next-line\n        if ((diffX * diffX) + (diffY * diffY) >= 25) {\n          touchAngle = (Math.atan2(Math.abs(diffY), Math.abs(diffX)) * 180) / Math.PI;\n          data.isScrolling = swiper.isHorizontal() ? touchAngle > params.touchAngle : (90 - touchAngle > params.touchAngle);\n        }\n      }\n    }\n    if (data.isScrolling) {\n      swiper.emit('touchMoveOpposite', e);\n    }\n    if (typeof startMoving === 'undefined') {\n      if (touches.currentX !== touches.startX || touches.currentY !== touches.startY) {\n        data.startMoving = true;\n      }\n    }\n    if (data.isScrolling) {\n      data.isTouched = false;\n      return;\n    }\n    if (!data.startMoving) {\n      return;\n    }\n    swiper.allowClick = false;\n    e.preventDefault();\n    if (params.touchMoveStopPropagation && !params.nested) {\n      e.stopPropagation();\n    }\n\n    if (!data.isMoved) {\n      if (params.loop) {\n        swiper.loopFix();\n      }\n      data.startTranslate = swiper.getTranslate();\n      swiper.setTransition(0);\n      if (swiper.animating) {\n        swiper.$wrapperEl.trigger('webkitTransitionEnd transitionend');\n      }\n      data.allowMomentumBounce = false;\n      // Grab Cursor\n      if (params.grabCursor && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n        swiper.setGrabCursor(true);\n      }\n      swiper.emit('sliderFirstMove', e);\n    }\n    swiper.emit('sliderMove', e);\n    data.isMoved = true;\n\n    var diff = swiper.isHorizontal() ? diffX : diffY;\n    touches.diff = diff;\n\n    diff *= params.touchRatio;\n    if (rtl) { diff = -diff; }\n\n    swiper.swipeDirection = diff > 0 ? 'prev' : 'next';\n    data.currentTranslate = diff + data.startTranslate;\n\n    var disableParentSwiper = true;\n    var resistanceRatio = params.resistanceRatio;\n    if (params.touchReleaseOnEdges) {\n      resistanceRatio = 0;\n    }\n    if ((diff > 0 && data.currentTranslate > swiper.minTranslate())) {\n      disableParentSwiper = false;\n      if (params.resistance) { data.currentTranslate = (swiper.minTranslate() - 1) + (Math.pow( (-swiper.minTranslate() + data.startTranslate + diff), resistanceRatio )); }\n    } else if (diff < 0 && data.currentTranslate < swiper.maxTranslate()) {\n      disableParentSwiper = false;\n      if (params.resistance) { data.currentTranslate = (swiper.maxTranslate() + 1) - (Math.pow( (swiper.maxTranslate() - data.startTranslate - diff), resistanceRatio )); }\n    }\n\n    if (disableParentSwiper) {\n      e.preventedByNestedSwiper = true;\n    }\n\n    // Directions locks\n    if (!swiper.allowSlideNext && swiper.swipeDirection === 'next' && data.currentTranslate < data.startTranslate) {\n      data.currentTranslate = data.startTranslate;\n    }\n    if (!swiper.allowSlidePrev && swiper.swipeDirection === 'prev' && data.currentTranslate > data.startTranslate) {\n      data.currentTranslate = data.startTranslate;\n    }\n\n\n    // Threshold\n    if (params.threshold > 0) {\n      if (Math.abs(diff) > params.threshold || data.allowThresholdMove) {\n        if (!data.allowThresholdMove) {\n          data.allowThresholdMove = true;\n          touches.startX = touches.currentX;\n          touches.startY = touches.currentY;\n          data.currentTranslate = data.startTranslate;\n          touches.diff = swiper.isHorizontal() ? touches.currentX - touches.startX : touches.currentY - touches.startY;\n          return;\n        }\n      } else {\n        data.currentTranslate = data.startTranslate;\n        return;\n      }\n    }\n\n    if (!params.followFinger) { return; }\n\n    // Update active index in free mode\n    if (params.freeMode || params.watchSlidesProgress || params.watchSlidesVisibility) {\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n    if (params.freeMode) {\n      // Velocity\n      if (data.velocities.length === 0) {\n        data.velocities.push({\n          position: touches[swiper.isHorizontal() ? 'startX' : 'startY'],\n          time: data.touchStartTime,\n        });\n      }\n      data.velocities.push({\n        position: touches[swiper.isHorizontal() ? 'currentX' : 'currentY'],\n        time: Utils.now(),\n      });\n    }\n    // Update progress\n    swiper.updateProgress(data.currentTranslate);\n    // Update translate\n    swiper.setTranslate(data.currentTranslate);\n  }\n\n  function onTouchEnd (event) {\n    var swiper = this;\n    var data = swiper.touchEventsData;\n\n    var params = swiper.params;\n    var touches = swiper.touches;\n    var rtl = swiper.rtlTranslate;\n    var $wrapperEl = swiper.$wrapperEl;\n    var slidesGrid = swiper.slidesGrid;\n    var snapGrid = swiper.snapGrid;\n    var e = event;\n    if (e.originalEvent) { e = e.originalEvent; }\n    if (data.allowTouchCallbacks) {\n      swiper.emit('touchEnd', e);\n    }\n    data.allowTouchCallbacks = false;\n    if (!data.isTouched) {\n      if (data.isMoved && params.grabCursor) {\n        swiper.setGrabCursor(false);\n      }\n      data.isMoved = false;\n      data.startMoving = false;\n      return;\n    }\n    // Return Grab Cursor\n    if (params.grabCursor && data.isMoved && data.isTouched && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n      swiper.setGrabCursor(false);\n    }\n\n    // Time diff\n    var touchEndTime = Utils.now();\n    var timeDiff = touchEndTime - data.touchStartTime;\n\n    // Tap, doubleTap, Click\n    if (swiper.allowClick) {\n      swiper.updateClickedSlide(e);\n      swiper.emit('tap', e);\n      if (timeDiff < 300 && (touchEndTime - data.lastClickTime) > 300) {\n        if (data.clickTimeout) { clearTimeout(data.clickTimeout); }\n        data.clickTimeout = Utils.nextTick(function () {\n          if (!swiper || swiper.destroyed) { return; }\n          swiper.emit('click', e);\n        }, 300);\n      }\n      if (timeDiff < 300 && (touchEndTime - data.lastClickTime) < 300) {\n        if (data.clickTimeout) { clearTimeout(data.clickTimeout); }\n        swiper.emit('doubleTap', e);\n      }\n    }\n\n    data.lastClickTime = Utils.now();\n    Utils.nextTick(function () {\n      if (!swiper.destroyed) { swiper.allowClick = true; }\n    });\n\n    if (!data.isTouched || !data.isMoved || !swiper.swipeDirection || touches.diff === 0 || data.currentTranslate === data.startTranslate) {\n      data.isTouched = false;\n      data.isMoved = false;\n      data.startMoving = false;\n      return;\n    }\n    data.isTouched = false;\n    data.isMoved = false;\n    data.startMoving = false;\n\n    var currentPos;\n    if (params.followFinger) {\n      currentPos = rtl ? swiper.translate : -swiper.translate;\n    } else {\n      currentPos = -data.currentTranslate;\n    }\n\n    if (params.freeMode) {\n      if (currentPos < -swiper.minTranslate()) {\n        swiper.slideTo(swiper.activeIndex);\n        return;\n      } else if (currentPos > -swiper.maxTranslate()) {\n        if (swiper.slides.length < snapGrid.length) {\n          swiper.slideTo(snapGrid.length - 1);\n        } else {\n          swiper.slideTo(swiper.slides.length - 1);\n        }\n        return;\n      }\n\n      if (params.freeModeMomentum) {\n        if (data.velocities.length > 1) {\n          var lastMoveEvent = data.velocities.pop();\n          var velocityEvent = data.velocities.pop();\n\n          var distance = lastMoveEvent.position - velocityEvent.position;\n          var time = lastMoveEvent.time - velocityEvent.time;\n          swiper.velocity = distance / time;\n          swiper.velocity /= 2;\n          if (Math.abs(swiper.velocity) < params.freeModeMinimumVelocity) {\n            swiper.velocity = 0;\n          }\n          // this implies that the user stopped moving a finger then released.\n          // There would be no events with distance zero, so the last event is stale.\n          if (time > 150 || (Utils.now() - lastMoveEvent.time) > 300) {\n            swiper.velocity = 0;\n          }\n        } else {\n          swiper.velocity = 0;\n        }\n        swiper.velocity *= params.freeModeMomentumVelocityRatio;\n\n        data.velocities.length = 0;\n        var momentumDuration = 1000 * params.freeModeMomentumRatio;\n        var momentumDistance = swiper.velocity * momentumDuration;\n\n        var newPosition = swiper.translate + momentumDistance;\n        if (rtl) { newPosition = -newPosition; }\n\n        var doBounce = false;\n        var afterBouncePosition;\n        var bounceAmount = Math.abs(swiper.velocity) * 20 * params.freeModeMomentumBounceRatio;\n        var needsLoopFix;\n        if (newPosition < swiper.maxTranslate()) {\n          if (params.freeModeMomentumBounce) {\n            if (newPosition + swiper.maxTranslate() < -bounceAmount) {\n              newPosition = swiper.maxTranslate() - bounceAmount;\n            }\n            afterBouncePosition = swiper.maxTranslate();\n            doBounce = true;\n            data.allowMomentumBounce = true;\n          } else {\n            newPosition = swiper.maxTranslate();\n          }\n          if (params.loop && params.centeredSlides) { needsLoopFix = true; }\n        } else if (newPosition > swiper.minTranslate()) {\n          if (params.freeModeMomentumBounce) {\n            if (newPosition - swiper.minTranslate() > bounceAmount) {\n              newPosition = swiper.minTranslate() + bounceAmount;\n            }\n            afterBouncePosition = swiper.minTranslate();\n            doBounce = true;\n            data.allowMomentumBounce = true;\n          } else {\n            newPosition = swiper.minTranslate();\n          }\n          if (params.loop && params.centeredSlides) { needsLoopFix = true; }\n        } else if (params.freeModeSticky) {\n          var nextSlide;\n          for (var j = 0; j < snapGrid.length; j += 1) {\n            if (snapGrid[j] > -newPosition) {\n              nextSlide = j;\n              break;\n            }\n          }\n\n          if (Math.abs(snapGrid[nextSlide] - newPosition) < Math.abs(snapGrid[nextSlide - 1] - newPosition) || swiper.swipeDirection === 'next') {\n            newPosition = snapGrid[nextSlide];\n          } else {\n            newPosition = snapGrid[nextSlide - 1];\n          }\n          newPosition = -newPosition;\n        }\n        if (needsLoopFix) {\n          swiper.once('transitionEnd', function () {\n            swiper.loopFix();\n          });\n        }\n        // Fix duration\n        if (swiper.velocity !== 0) {\n          if (rtl) {\n            momentumDuration = Math.abs((-newPosition - swiper.translate) / swiper.velocity);\n          } else {\n            momentumDuration = Math.abs((newPosition - swiper.translate) / swiper.velocity);\n          }\n        } else if (params.freeModeSticky) {\n          swiper.slideToClosest();\n          return;\n        }\n\n        if (params.freeModeMomentumBounce && doBounce) {\n          swiper.updateProgress(afterBouncePosition);\n          swiper.setTransition(momentumDuration);\n          swiper.setTranslate(newPosition);\n          swiper.transitionStart(true, swiper.swipeDirection);\n          swiper.animating = true;\n          $wrapperEl.transitionEnd(function () {\n            if (!swiper || swiper.destroyed || !data.allowMomentumBounce) { return; }\n            swiper.emit('momentumBounce');\n\n            swiper.setTransition(params.speed);\n            swiper.setTranslate(afterBouncePosition);\n            $wrapperEl.transitionEnd(function () {\n              if (!swiper || swiper.destroyed) { return; }\n              swiper.transitionEnd();\n            });\n          });\n        } else if (swiper.velocity) {\n          swiper.updateProgress(newPosition);\n          swiper.setTransition(momentumDuration);\n          swiper.setTranslate(newPosition);\n          swiper.transitionStart(true, swiper.swipeDirection);\n          if (!swiper.animating) {\n            swiper.animating = true;\n            $wrapperEl.transitionEnd(function () {\n              if (!swiper || swiper.destroyed) { return; }\n              swiper.transitionEnd();\n            });\n          }\n        } else {\n          swiper.updateProgress(newPosition);\n        }\n\n        swiper.updateActiveIndex();\n        swiper.updateSlidesClasses();\n      } else if (params.freeModeSticky) {\n        swiper.slideToClosest();\n        return;\n      }\n\n      if (!params.freeModeMomentum || timeDiff >= params.longSwipesMs) {\n        swiper.updateProgress();\n        swiper.updateActiveIndex();\n        swiper.updateSlidesClasses();\n      }\n      return;\n    }\n\n    // Find current slide\n    var stopIndex = 0;\n    var groupSize = swiper.slidesSizesGrid[0];\n    for (var i = 0; i < slidesGrid.length; i += params.slidesPerGroup) {\n      if (typeof slidesGrid[i + params.slidesPerGroup] !== 'undefined') {\n        if (currentPos >= slidesGrid[i] && currentPos < slidesGrid[i + params.slidesPerGroup]) {\n          stopIndex = i;\n          groupSize = slidesGrid[i + params.slidesPerGroup] - slidesGrid[i];\n        }\n      } else if (currentPos >= slidesGrid[i]) {\n        stopIndex = i;\n        groupSize = slidesGrid[slidesGrid.length - 1] - slidesGrid[slidesGrid.length - 2];\n      }\n    }\n\n    // Find current slide size\n    var ratio = (currentPos - slidesGrid[stopIndex]) / groupSize;\n\n    if (timeDiff > params.longSwipesMs) {\n      // Long touches\n      if (!params.longSwipes) {\n        swiper.slideTo(swiper.activeIndex);\n        return;\n      }\n      if (swiper.swipeDirection === 'next') {\n        if (ratio >= params.longSwipesRatio) { swiper.slideTo(stopIndex + params.slidesPerGroup); }\n        else { swiper.slideTo(stopIndex); }\n      }\n      if (swiper.swipeDirection === 'prev') {\n        if (ratio > (1 - params.longSwipesRatio)) { swiper.slideTo(stopIndex + params.slidesPerGroup); }\n        else { swiper.slideTo(stopIndex); }\n      }\n    } else {\n      // Short swipes\n      if (!params.shortSwipes) {\n        swiper.slideTo(swiper.activeIndex);\n        return;\n      }\n      if (swiper.swipeDirection === 'next') {\n        swiper.slideTo(stopIndex + params.slidesPerGroup);\n      }\n      if (swiper.swipeDirection === 'prev') {\n        swiper.slideTo(stopIndex);\n      }\n    }\n  }\n\n  function onResize () {\n    var swiper = this;\n\n    var params = swiper.params;\n    var el = swiper.el;\n\n    if (el && el.offsetWidth === 0) { return; }\n\n    // Breakpoints\n    if (params.breakpoints) {\n      swiper.setBreakpoint();\n    }\n\n    // Save locks\n    var allowSlideNext = swiper.allowSlideNext;\n    var allowSlidePrev = swiper.allowSlidePrev;\n    var snapGrid = swiper.snapGrid;\n\n    // Disable locks on resize\n    swiper.allowSlideNext = true;\n    swiper.allowSlidePrev = true;\n\n    swiper.updateSize();\n    swiper.updateSlides();\n\n    if (params.freeMode) {\n      var newTranslate = Math.min(Math.max(swiper.translate, swiper.maxTranslate()), swiper.minTranslate());\n      swiper.setTranslate(newTranslate);\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n\n      if (params.autoHeight) {\n        swiper.updateAutoHeight();\n      }\n    } else {\n      swiper.updateSlidesClasses();\n      if ((params.slidesPerView === 'auto' || params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {\n        swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n      } else {\n        swiper.slideTo(swiper.activeIndex, 0, false, true);\n      }\n    }\n    // Return locks after resize\n    swiper.allowSlidePrev = allowSlidePrev;\n    swiper.allowSlideNext = allowSlideNext;\n\n    if (swiper.params.watchOverflow && snapGrid !== swiper.snapGrid) {\n      swiper.checkOverflow();\n    }\n  }\n\n  function onClick (e) {\n    var swiper = this;\n    if (!swiper.allowClick) {\n      if (swiper.params.preventClicks) { e.preventDefault(); }\n      if (swiper.params.preventClicksPropagation && swiper.animating) {\n        e.stopPropagation();\n        e.stopImmediatePropagation();\n      }\n    }\n  }\n\n  function attachEvents() {\n    var swiper = this;\n    var params = swiper.params;\n    var touchEvents = swiper.touchEvents;\n    var el = swiper.el;\n    var wrapperEl = swiper.wrapperEl;\n\n    {\n      swiper.onTouchStart = onTouchStart.bind(swiper);\n      swiper.onTouchMove = onTouchMove.bind(swiper);\n      swiper.onTouchEnd = onTouchEnd.bind(swiper);\n    }\n\n    swiper.onClick = onClick.bind(swiper);\n\n    var target = params.touchEventsTarget === 'container' ? el : wrapperEl;\n    var capture = !!params.nested;\n\n    // Touch Events\n    {\n      if (!Support.touch && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n        target.addEventListener(touchEvents.start, swiper.onTouchStart, false);\n        doc.addEventListener(touchEvents.move, swiper.onTouchMove, capture);\n        doc.addEventListener(touchEvents.end, swiper.onTouchEnd, false);\n      } else {\n        if (Support.touch) {\n          var passiveListener = touchEvents.start === 'touchstart' && Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n          target.addEventListener(touchEvents.start, swiper.onTouchStart, passiveListener);\n          target.addEventListener(touchEvents.move, swiper.onTouchMove, Support.passiveListener ? { passive: false, capture: capture } : capture);\n          target.addEventListener(touchEvents.end, swiper.onTouchEnd, passiveListener);\n        }\n        if ((params.simulateTouch && !Device.ios && !Device.android) || (params.simulateTouch && !Support.touch && Device.ios)) {\n          target.addEventListener('mousedown', swiper.onTouchStart, false);\n          doc.addEventListener('mousemove', swiper.onTouchMove, capture);\n          doc.addEventListener('mouseup', swiper.onTouchEnd, false);\n        }\n      }\n      // Prevent Links Clicks\n      if (params.preventClicks || params.preventClicksPropagation) {\n        target.addEventListener('click', swiper.onClick, true);\n      }\n    }\n\n    // Resize handler\n    swiper.on((Device.ios || Device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate'), onResize, true);\n  }\n\n  function detachEvents() {\n    var swiper = this;\n\n    var params = swiper.params;\n    var touchEvents = swiper.touchEvents;\n    var el = swiper.el;\n    var wrapperEl = swiper.wrapperEl;\n\n    var target = params.touchEventsTarget === 'container' ? el : wrapperEl;\n    var capture = !!params.nested;\n\n    // Touch Events\n    {\n      if (!Support.touch && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n        target.removeEventListener(touchEvents.start, swiper.onTouchStart, false);\n        doc.removeEventListener(touchEvents.move, swiper.onTouchMove, capture);\n        doc.removeEventListener(touchEvents.end, swiper.onTouchEnd, false);\n      } else {\n        if (Support.touch) {\n          var passiveListener = touchEvents.start === 'onTouchStart' && Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n          target.removeEventListener(touchEvents.start, swiper.onTouchStart, passiveListener);\n          target.removeEventListener(touchEvents.move, swiper.onTouchMove, capture);\n          target.removeEventListener(touchEvents.end, swiper.onTouchEnd, passiveListener);\n        }\n        if ((params.simulateTouch && !Device.ios && !Device.android) || (params.simulateTouch && !Support.touch && Device.ios)) {\n          target.removeEventListener('mousedown', swiper.onTouchStart, false);\n          doc.removeEventListener('mousemove', swiper.onTouchMove, capture);\n          doc.removeEventListener('mouseup', swiper.onTouchEnd, false);\n        }\n      }\n      // Prevent Links Clicks\n      if (params.preventClicks || params.preventClicksPropagation) {\n        target.removeEventListener('click', swiper.onClick, true);\n      }\n    }\n\n    // Resize handler\n    swiper.off((Device.ios || Device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate'), onResize);\n  }\n\n  var events = {\n    attachEvents: attachEvents,\n    detachEvents: detachEvents,\n  };\n\n  function setBreakpoint () {\n    var swiper = this;\n    var activeIndex = swiper.activeIndex;\n    var initialized = swiper.initialized;\n    var loopedSlides = swiper.loopedSlides; if ( loopedSlides === void 0 ) loopedSlides = 0;\n    var params = swiper.params;\n    var breakpoints = params.breakpoints;\n    if (!breakpoints || (breakpoints && Object.keys(breakpoints).length === 0)) { return; }\n    // Set breakpoint for window width and update parameters\n    var breakpoint = swiper.getBreakpoint(breakpoints);\n    if (breakpoint && swiper.currentBreakpoint !== breakpoint) {\n      var breakPointsParams = breakpoint in breakpoints ? breakpoints[breakpoint] : swiper.originalParams;\n      var needsReLoop = params.loop && (breakPointsParams.slidesPerView !== params.slidesPerView);\n\n      Utils.extend(swiper.params, breakPointsParams);\n\n      Utils.extend(swiper, {\n        allowTouchMove: swiper.params.allowTouchMove,\n        allowSlideNext: swiper.params.allowSlideNext,\n        allowSlidePrev: swiper.params.allowSlidePrev,\n      });\n\n      swiper.currentBreakpoint = breakpoint;\n\n      if (needsReLoop && initialized) {\n        swiper.loopDestroy();\n        swiper.loopCreate();\n        swiper.updateSlides();\n        swiper.slideTo((activeIndex - loopedSlides) + swiper.loopedSlides, 0, false);\n      }\n      swiper.emit('breakpoint', breakPointsParams);\n    }\n  }\n\n  function getBreakpoint (breakpoints) {\n    // Get breakpoint for window width\n    if (!breakpoints) { return undefined; }\n    var breakpoint = false;\n    var points = [];\n    Object.keys(breakpoints).forEach(function (point) {\n      points.push(point);\n    });\n    points.sort(function (a, b) { return parseInt(a, 10) - parseInt(b, 10); });\n    for (var i = 0; i < points.length; i += 1) {\n      var point = points[i];\n      if (point >= win.innerWidth && !breakpoint) {\n        breakpoint = point;\n      }\n    }\n    return breakpoint || 'max';\n  }\n\n  var breakpoints = { setBreakpoint: setBreakpoint, getBreakpoint: getBreakpoint };\n\n  var Browser = (function Browser() {\n    function isSafari() {\n      var ua = win.navigator.userAgent.toLowerCase();\n      return (ua.indexOf('safari') >= 0 && ua.indexOf('chrome') < 0 && ua.indexOf('android') < 0);\n    }\n    return {\n      isIE: !!win.navigator.userAgent.match(/Trident/g) || !!win.navigator.userAgent.match(/MSIE/g),\n      isSafari: isSafari(),\n      isUiWebView: /(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(win.navigator.userAgent),\n    };\n  }());\n\n  function addClasses () {\n    var swiper = this;\n    var classNames = swiper.classNames;\n    var params = swiper.params;\n    var rtl = swiper.rtl;\n    var $el = swiper.$el;\n    var suffixes = [];\n\n    suffixes.push(params.direction);\n\n    if (params.freeMode) {\n      suffixes.push('free-mode');\n    }\n    if (!Support.flexbox) {\n      suffixes.push('no-flexbox');\n    }\n    if (params.autoHeight) {\n      suffixes.push('autoheight');\n    }\n    if (rtl) {\n      suffixes.push('rtl');\n    }\n    if (params.slidesPerColumn > 1) {\n      suffixes.push('multirow');\n    }\n    if (Device.android) {\n      suffixes.push('android');\n    }\n    if (Device.ios) {\n      suffixes.push('ios');\n    }\n    // WP8 Touch Events Fix\n    if (Browser.isIE && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n      suffixes.push((\"wp8-\" + (params.direction)));\n    }\n\n    suffixes.forEach(function (suffix) {\n      classNames.push(params.containerModifierClass + suffix);\n    });\n\n    $el.addClass(classNames.join(' '));\n  }\n\n  function removeClasses () {\n    var swiper = this;\n    var $el = swiper.$el;\n    var classNames = swiper.classNames;\n\n    $el.removeClass(classNames.join(' '));\n  }\n\n  var classes = { addClasses: addClasses, removeClasses: removeClasses };\n\n  function loadImage (imageEl, src, srcset, sizes, checkForComplete, callback) {\n    var image;\n    function onReady() {\n      if (callback) { callback(); }\n    }\n    if (!imageEl.complete || !checkForComplete) {\n      if (src) {\n        image = new win.Image();\n        image.onload = onReady;\n        image.onerror = onReady;\n        if (sizes) {\n          image.sizes = sizes;\n        }\n        if (srcset) {\n          image.srcset = srcset;\n        }\n        if (src) {\n          image.src = src;\n        }\n      } else {\n        onReady();\n      }\n    } else {\n      // image already loaded...\n      onReady();\n    }\n  }\n\n  function preloadImages () {\n    var swiper = this;\n    swiper.imagesToLoad = swiper.$el.find('img');\n    function onReady() {\n      if (typeof swiper === 'undefined' || swiper === null || !swiper || swiper.destroyed) { return; }\n      if (swiper.imagesLoaded !== undefined) { swiper.imagesLoaded += 1; }\n      if (swiper.imagesLoaded === swiper.imagesToLoad.length) {\n        if (swiper.params.updateOnImagesReady) { swiper.update(); }\n        swiper.emit('imagesReady');\n      }\n    }\n    for (var i = 0; i < swiper.imagesToLoad.length; i += 1) {\n      var imageEl = swiper.imagesToLoad[i];\n      swiper.loadImage(\n        imageEl,\n        imageEl.currentSrc || imageEl.getAttribute('src'),\n        imageEl.srcset || imageEl.getAttribute('srcset'),\n        imageEl.sizes || imageEl.getAttribute('sizes'),\n        true,\n        onReady\n      );\n    }\n  }\n\n  var images = {\n    loadImage: loadImage,\n    preloadImages: preloadImages,\n  };\n\n  function checkOverflow() {\n    var swiper = this;\n    var wasLocked = swiper.isLocked;\n\n    swiper.isLocked = swiper.snapGrid.length === 1;\n    swiper.allowSlideNext = !swiper.isLocked;\n    swiper.allowSlidePrev = !swiper.isLocked;\n\n    // events\n    if (wasLocked !== swiper.isLocked) { swiper.emit(swiper.isLocked ? 'lock' : 'unlock'); }\n\n    if (wasLocked && wasLocked !== swiper.isLocked) {\n      swiper.isEnd = false;\n      swiper.navigation.update();\n    }\n  }\n\n  var checkOverflow$1 = { checkOverflow: checkOverflow };\n\n  var defaults = {\n    init: true,\n    direction: 'horizontal',\n    touchEventsTarget: 'container',\n    initialSlide: 0,\n    speed: 300,\n    //\n    preventIntercationOnTransition: false,\n\n    // To support iOS's swipe-to-go-back gesture (when being used in-app, with UIWebView).\n    iOSEdgeSwipeDetection: false,\n    iOSEdgeSwipeThreshold: 20,\n\n    // Free mode\n    freeMode: false,\n    freeModeMomentum: true,\n    freeModeMomentumRatio: 1,\n    freeModeMomentumBounce: true,\n    freeModeMomentumBounceRatio: 1,\n    freeModeMomentumVelocityRatio: 1,\n    freeModeSticky: false,\n    freeModeMinimumVelocity: 0.02,\n\n    // Autoheight\n    autoHeight: false,\n\n    // Set wrapper width\n    setWrapperSize: false,\n\n    // Virtual Translate\n    virtualTranslate: false,\n\n    // Effects\n    effect: 'slide', // 'slide' or 'fade' or 'cube' or 'coverflow' or 'flip'\n\n    // Breakpoints\n    breakpoints: undefined,\n\n    // Slides grid\n    spaceBetween: 0,\n    slidesPerView: 1,\n    slidesPerColumn: 1,\n    slidesPerColumnFill: 'column',\n    slidesPerGroup: 1,\n    centeredSlides: false,\n    slidesOffsetBefore: 0, // in px\n    slidesOffsetAfter: 0, // in px\n    normalizeSlideIndex: true,\n\n    // Disable swiper and hide navigation when container not overflow\n    watchOverflow: false,\n\n    // Round length\n    roundLengths: false,\n\n    // Touches\n    touchRatio: 1,\n    touchAngle: 45,\n    simulateTouch: true,\n    shortSwipes: true,\n    longSwipes: true,\n    longSwipesRatio: 0.5,\n    longSwipesMs: 300,\n    followFinger: true,\n    allowTouchMove: true,\n    threshold: 0,\n    touchMoveStopPropagation: true,\n    touchReleaseOnEdges: false,\n\n    // Unique Navigation Elements\n    uniqueNavElements: true,\n\n    // Resistance\n    resistance: true,\n    resistanceRatio: 0.85,\n\n    // Progress\n    watchSlidesProgress: false,\n    watchSlidesVisibility: false,\n\n    // Cursor\n    grabCursor: false,\n\n    // Clicks\n    preventClicks: true,\n    preventClicksPropagation: true,\n    slideToClickedSlide: false,\n\n    // Images\n    preloadImages: true,\n    updateOnImagesReady: true,\n\n    // loop\n    loop: false,\n    loopAdditionalSlides: 0,\n    loopedSlides: null,\n    loopFillGroupWithBlank: false,\n\n    // Swiping/no swiping\n    allowSlidePrev: true,\n    allowSlideNext: true,\n    swipeHandler: null, // '.swipe-handler',\n    noSwiping: true,\n    noSwipingClass: 'swiper-no-swiping',\n    noSwipingSelector: null,\n\n    // Passive Listeners\n    passiveListeners: true,\n\n    // NS\n    containerModifierClass: 'swiper-container-', // NEW\n    slideClass: 'swiper-slide',\n    slideBlankClass: 'swiper-slide-invisible-blank',\n    slideActiveClass: 'swiper-slide-active',\n    slideDuplicateActiveClass: 'swiper-slide-duplicate-active',\n    slideVisibleClass: 'swiper-slide-visible',\n    slideDuplicateClass: 'swiper-slide-duplicate',\n    slideNextClass: 'swiper-slide-next',\n    slideDuplicateNextClass: 'swiper-slide-duplicate-next',\n    slidePrevClass: 'swiper-slide-prev',\n    slideDuplicatePrevClass: 'swiper-slide-duplicate-prev',\n    wrapperClass: 'swiper-wrapper',\n\n    // Callbacks\n    runCallbacksOnInit: true,\n  };\n\n  var prototypes = {\n    update: update,\n    translate: translate,\n    transition: transition$1,\n    slide: slide,\n    loop: loop,\n    grabCursor: grabCursor,\n    manipulation: manipulation,\n    events: events,\n    breakpoints: breakpoints,\n    checkOverflow: checkOverflow$1,\n    classes: classes,\n    images: images,\n  };\n\n  var extendedDefaults = {};\n\n  var Swiper = (function (SwiperClass$$1) {\n    function Swiper() {\n      var assign;\n\n      var args = [], len = arguments.length;\n      while ( len-- ) args[ len ] = arguments[ len ];\n      var el;\n      var params;\n      if (args.length === 1 && args[0].constructor && args[0].constructor === Object) {\n        params = args[0];\n      } else {\n        (assign = args, el = assign[0], params = assign[1]);\n      }\n      if (!params) { params = {}; }\n\n      params = Utils.extend({}, params);\n      if (el && !params.el) { params.el = el; }\n\n      SwiperClass$$1.call(this, params);\n\n      Object.keys(prototypes).forEach(function (prototypeGroup) {\n        Object.keys(prototypes[prototypeGroup]).forEach(function (protoMethod) {\n          if (!Swiper.prototype[protoMethod]) {\n            Swiper.prototype[protoMethod] = prototypes[prototypeGroup][protoMethod];\n          }\n        });\n      });\n\n      // Swiper Instance\n      var swiper = this;\n      if (typeof swiper.modules === 'undefined') {\n        swiper.modules = {};\n      }\n      Object.keys(swiper.modules).forEach(function (moduleName) {\n        var module = swiper.modules[moduleName];\n        if (module.params) {\n          var moduleParamName = Object.keys(module.params)[0];\n          var moduleParams = module.params[moduleParamName];\n          if (typeof moduleParams !== 'object') { return; }\n          if (!(moduleParamName in params && 'enabled' in moduleParams)) { return; }\n          if (params[moduleParamName] === true) {\n            params[moduleParamName] = { enabled: true };\n          }\n          if (\n            typeof params[moduleParamName] === 'object' &&\n            !('enabled' in params[moduleParamName])\n          ) {\n            params[moduleParamName].enabled = true;\n          }\n          if (!params[moduleParamName]) { params[moduleParamName] = { enabled: false }; }\n        }\n      });\n\n      // Extend defaults with modules params\n      var swiperParams = Utils.extend({}, defaults);\n      swiper.useModulesParams(swiperParams);\n\n      // Extend defaults with passed params\n      swiper.params = Utils.extend({}, swiperParams, extendedDefaults, params);\n      swiper.originalParams = Utils.extend({}, swiper.params);\n      swiper.passedParams = Utils.extend({}, params);\n\n      // Save Dom lib\n      swiper.$ = $;\n\n      // Find el\n      var $el = $(swiper.params.el);\n      el = $el[0];\n\n      if (!el) {\n        return undefined;\n      }\n\n      if ($el.length > 1) {\n        var swipers = [];\n        $el.each(function (index, containerEl) {\n          var newParams = Utils.extend({}, params, { el: containerEl });\n          swipers.push(new Swiper(newParams));\n        });\n        return swipers;\n      }\n\n      el.swiper = swiper;\n      $el.data('swiper', swiper);\n\n      // Find Wrapper\n      var $wrapperEl = $el.children((\".\" + (swiper.params.wrapperClass)));\n\n      // Extend Swiper\n      Utils.extend(swiper, {\n        $el: $el,\n        el: el,\n        $wrapperEl: $wrapperEl,\n        wrapperEl: $wrapperEl[0],\n\n        // Classes\n        classNames: [],\n\n        // Slides\n        slides: $(),\n        slidesGrid: [],\n        snapGrid: [],\n        slidesSizesGrid: [],\n\n        // isDirection\n        isHorizontal: function isHorizontal() {\n          return swiper.params.direction === 'horizontal';\n        },\n        isVertical: function isVertical() {\n          return swiper.params.direction === 'vertical';\n        },\n        // RTL\n        rtl: (el.dir.toLowerCase() === 'rtl' || $el.css('direction') === 'rtl'),\n        rtlTranslate: swiper.params.direction === 'horizontal' && (el.dir.toLowerCase() === 'rtl' || $el.css('direction') === 'rtl'),\n        wrongRTL: $wrapperEl.css('display') === '-webkit-box',\n\n        // Indexes\n        activeIndex: 0,\n        realIndex: 0,\n\n        //\n        isBeginning: true,\n        isEnd: false,\n\n        // Props\n        translate: 0,\n        previousTranslate: 0,\n        progress: 0,\n        velocity: 0,\n        animating: false,\n\n        // Locks\n        allowSlideNext: swiper.params.allowSlideNext,\n        allowSlidePrev: swiper.params.allowSlidePrev,\n\n        // Touch Events\n        touchEvents: (function touchEvents() {\n          var touch = ['touchstart', 'touchmove', 'touchend'];\n          var desktop = ['mousedown', 'mousemove', 'mouseup'];\n          if (Support.pointerEvents) {\n            desktop = ['pointerdown', 'pointermove', 'pointerup'];\n          } else if (Support.prefixedPointerEvents) {\n            desktop = ['MSPointerDown', 'MSPointerMove', 'MSPointerUp'];\n          }\n          swiper.touchEventsTouch = {\n            start: touch[0],\n            move: touch[1],\n            end: touch[2],\n          };\n          swiper.touchEventsDesktop = {\n            start: desktop[0],\n            move: desktop[1],\n            end: desktop[2],\n          };\n          return Support.touch || !swiper.params.simulateTouch ? swiper.touchEventsTouch : swiper.touchEventsDesktop;\n        }()),\n        touchEventsData: {\n          isTouched: undefined,\n          isMoved: undefined,\n          allowTouchCallbacks: undefined,\n          touchStartTime: undefined,\n          isScrolling: undefined,\n          currentTranslate: undefined,\n          startTranslate: undefined,\n          allowThresholdMove: undefined,\n          // Form elements to match\n          formElements: 'input, select, option, textarea, button, video',\n          // Last click time\n          lastClickTime: Utils.now(),\n          clickTimeout: undefined,\n          // Velocities\n          velocities: [],\n          allowMomentumBounce: undefined,\n          isTouchEvent: undefined,\n          startMoving: undefined,\n        },\n\n        // Clicks\n        allowClick: true,\n\n        // Touches\n        allowTouchMove: swiper.params.allowTouchMove,\n\n        touches: {\n          startX: 0,\n          startY: 0,\n          currentX: 0,\n          currentY: 0,\n          diff: 0,\n        },\n\n        // Images\n        imagesToLoad: [],\n        imagesLoaded: 0,\n\n      });\n\n      // Install Modules\n      swiper.useModules();\n\n      // Init\n      if (swiper.params.init) {\n        swiper.init();\n      }\n\n      // Return app instance\n      return swiper;\n    }\n\n    if ( SwiperClass$$1 ) Swiper.__proto__ = SwiperClass$$1;\n    Swiper.prototype = Object.create( SwiperClass$$1 && SwiperClass$$1.prototype );\n    Swiper.prototype.constructor = Swiper;\n\n    var staticAccessors = { extendedDefaults: { configurable: true },defaults: { configurable: true },Class: { configurable: true },$: { configurable: true } };\n    Swiper.prototype.slidesPerViewDynamic = function slidesPerViewDynamic () {\n      var swiper = this;\n      var params = swiper.params;\n      var slides = swiper.slides;\n      var slidesGrid = swiper.slidesGrid;\n      var swiperSize = swiper.size;\n      var activeIndex = swiper.activeIndex;\n      var spv = 1;\n      if (params.centeredSlides) {\n        var slideSize = slides[activeIndex].swiperSlideSize;\n        var breakLoop;\n        for (var i = activeIndex + 1; i < slides.length; i += 1) {\n          if (slides[i] && !breakLoop) {\n            slideSize += slides[i].swiperSlideSize;\n            spv += 1;\n            if (slideSize > swiperSize) { breakLoop = true; }\n          }\n        }\n        for (var i$1 = activeIndex - 1; i$1 >= 0; i$1 -= 1) {\n          if (slides[i$1] && !breakLoop) {\n            slideSize += slides[i$1].swiperSlideSize;\n            spv += 1;\n            if (slideSize > swiperSize) { breakLoop = true; }\n          }\n        }\n      } else {\n        for (var i$2 = activeIndex + 1; i$2 < slides.length; i$2 += 1) {\n          if (slidesGrid[i$2] - slidesGrid[activeIndex] < swiperSize) {\n            spv += 1;\n          }\n        }\n      }\n      return spv;\n    };\n    Swiper.prototype.update = function update$$1 () {\n      var swiper = this;\n      if (!swiper || swiper.destroyed) { return; }\n      var snapGrid = swiper.snapGrid;\n      var params = swiper.params;\n      // Breakpoints\n      if (params.breakpoints) {\n        swiper.setBreakpoint();\n      }\n      swiper.updateSize();\n      swiper.updateSlides();\n      swiper.updateProgress();\n      swiper.updateSlidesClasses();\n\n      function setTranslate() {\n        var translateValue = swiper.rtlTranslate ? swiper.translate * -1 : swiper.translate;\n        var newTranslate = Math.min(Math.max(translateValue, swiper.maxTranslate()), swiper.minTranslate());\n        swiper.setTranslate(newTranslate);\n        swiper.updateActiveIndex();\n        swiper.updateSlidesClasses();\n      }\n      var translated;\n      if (swiper.params.freeMode) {\n        setTranslate();\n        if (swiper.params.autoHeight) {\n          swiper.updateAutoHeight();\n        }\n      } else {\n        if ((swiper.params.slidesPerView === 'auto' || swiper.params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {\n          translated = swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n        } else {\n          translated = swiper.slideTo(swiper.activeIndex, 0, false, true);\n        }\n        if (!translated) {\n          setTranslate();\n        }\n      }\n      if (params.watchOverflow && snapGrid !== swiper.snapGrid) {\n        swiper.checkOverflow();\n      }\n      swiper.emit('update');\n    };\n    Swiper.prototype.init = function init () {\n      var swiper = this;\n      if (swiper.initialized) { return; }\n\n      swiper.emit('beforeInit');\n\n      // Set breakpoint\n      if (swiper.params.breakpoints) {\n        swiper.setBreakpoint();\n      }\n\n      // Add Classes\n      swiper.addClasses();\n\n      // Create loop\n      if (swiper.params.loop) {\n        swiper.loopCreate();\n      }\n\n      // Update size\n      swiper.updateSize();\n\n      // Update slides\n      swiper.updateSlides();\n\n      if (swiper.params.watchOverflow) {\n        swiper.checkOverflow();\n      }\n\n      // Set Grab Cursor\n      if (swiper.params.grabCursor) {\n        swiper.setGrabCursor();\n      }\n\n      if (swiper.params.preloadImages) {\n        swiper.preloadImages();\n      }\n\n      // Slide To Initial Slide\n      if (swiper.params.loop) {\n        swiper.slideTo(swiper.params.initialSlide + swiper.loopedSlides, 0, swiper.params.runCallbacksOnInit);\n      } else {\n        swiper.slideTo(swiper.params.initialSlide, 0, swiper.params.runCallbacksOnInit);\n      }\n\n      // Attach events\n      swiper.attachEvents();\n\n      // Init Flag\n      swiper.initialized = true;\n\n      // Emit\n      swiper.emit('init');\n    };\n    Swiper.prototype.destroy = function destroy (deleteInstance, cleanStyles) {\n      if ( deleteInstance === void 0 ) deleteInstance = true;\n      if ( cleanStyles === void 0 ) cleanStyles = true;\n\n      var swiper = this;\n      var params = swiper.params;\n      var $el = swiper.$el;\n      var $wrapperEl = swiper.$wrapperEl;\n      var slides = swiper.slides;\n\n      if (typeof swiper.params === 'undefined' || swiper.destroyed) {\n        return null;\n      }\n\n      swiper.emit('beforeDestroy');\n\n      // Init Flag\n      swiper.initialized = false;\n\n      // Detach events\n      swiper.detachEvents();\n\n      // Destroy loop\n      if (params.loop) {\n        swiper.loopDestroy();\n      }\n\n      // Cleanup styles\n      if (cleanStyles) {\n        swiper.removeClasses();\n        $el.removeAttr('style');\n        $wrapperEl.removeAttr('style');\n        if (slides && slides.length) {\n          slides\n            .removeClass([\n              params.slideVisibleClass,\n              params.slideActiveClass,\n              params.slideNextClass,\n              params.slidePrevClass ].join(' '))\n            .removeAttr('style')\n            .removeAttr('data-swiper-slide-index')\n            .removeAttr('data-swiper-column')\n            .removeAttr('data-swiper-row');\n        }\n      }\n\n      swiper.emit('destroy');\n\n      // Detach emitter events\n      Object.keys(swiper.eventsListeners).forEach(function (eventName) {\n        swiper.off(eventName);\n      });\n\n      if (deleteInstance !== false) {\n        swiper.$el[0].swiper = null;\n        swiper.$el.data('swiper', null);\n        Utils.deleteProps(swiper);\n      }\n      swiper.destroyed = true;\n\n      return null;\n    };\n    Swiper.extendDefaults = function extendDefaults (newDefaults) {\n      Utils.extend(extendedDefaults, newDefaults);\n    };\n    staticAccessors.extendedDefaults.get = function () {\n      return extendedDefaults;\n    };\n    staticAccessors.defaults.get = function () {\n      return defaults;\n    };\n    staticAccessors.Class.get = function () {\n      return SwiperClass$$1;\n    };\n    staticAccessors.$.get = function () {\n      return $;\n    };\n\n    Object.defineProperties( Swiper, staticAccessors );\n\n    return Swiper;\n  }(SwiperClass));\n\n  var Device$1 = {\n    name: 'device',\n    proto: {\n      device: Device,\n    },\n    static: {\n      device: Device,\n    },\n  };\n\n  var Support$1 = {\n    name: 'support',\n    proto: {\n      support: Support,\n    },\n    static: {\n      support: Support,\n    },\n  };\n\n  var Browser$1 = {\n    name: 'browser',\n    proto: {\n      browser: Browser,\n    },\n    static: {\n      browser: Browser,\n    },\n  };\n\n  var Resize = {\n    name: 'resize',\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        resize: {\n          resizeHandler: function resizeHandler() {\n            if (!swiper || swiper.destroyed || !swiper.initialized) { return; }\n            swiper.emit('beforeResize');\n            swiper.emit('resize');\n          },\n          orientationChangeHandler: function orientationChangeHandler() {\n            if (!swiper || swiper.destroyed || !swiper.initialized) { return; }\n            swiper.emit('orientationchange');\n          },\n        },\n      });\n    },\n    on: {\n      init: function init() {\n        var swiper = this;\n        // Emit resize\n        win.addEventListener('resize', swiper.resize.resizeHandler);\n\n        // Emit orientationchange\n        win.addEventListener('orientationchange', swiper.resize.orientationChangeHandler);\n      },\n      destroy: function destroy() {\n        var swiper = this;\n        win.removeEventListener('resize', swiper.resize.resizeHandler);\n        win.removeEventListener('orientationchange', swiper.resize.orientationChangeHandler);\n      },\n    },\n  };\n\n  var Observer = {\n    func: win.MutationObserver || win.WebkitMutationObserver,\n    attach: function attach(target, options) {\n      if ( options === void 0 ) options = {};\n\n      var swiper = this;\n\n      var ObserverFunc = Observer.func;\n      var observer = new ObserverFunc(function (mutations) {\n        mutations.forEach(function (mutation) {\n          swiper.emit('observerUpdate', mutation);\n        });\n      });\n\n      observer.observe(target, {\n        attributes: typeof options.attributes === 'undefined' ? true : options.attributes,\n        childList: typeof options.childList === 'undefined' ? true : options.childList,\n        characterData: typeof options.characterData === 'undefined' ? true : options.characterData,\n      });\n\n      swiper.observer.observers.push(observer);\n    },\n    init: function init() {\n      var swiper = this;\n      if (!Support.observer || !swiper.params.observer) { return; }\n      if (swiper.params.observeParents) {\n        var containerParents = swiper.$el.parents();\n        for (var i = 0; i < containerParents.length; i += 1) {\n          swiper.observer.attach(containerParents[i]);\n        }\n      }\n      // Observe container\n      swiper.observer.attach(swiper.$el[0], { childList: false });\n\n      // Observe wrapper\n      swiper.observer.attach(swiper.$wrapperEl[0], { attributes: false });\n    },\n    destroy: function destroy() {\n      var swiper = this;\n      swiper.observer.observers.forEach(function (observer) {\n        observer.disconnect();\n      });\n      swiper.observer.observers = [];\n    },\n  };\n\n  var Observer$1 = {\n    name: 'observer',\n    params: {\n      observer: false,\n      observeParents: false,\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        observer: {\n          init: Observer.init.bind(swiper),\n          attach: Observer.attach.bind(swiper),\n          destroy: Observer.destroy.bind(swiper),\n          observers: [],\n        },\n      });\n    },\n    on: {\n      init: function init() {\n        var swiper = this;\n        swiper.observer.init();\n      },\n      destroy: function destroy() {\n        var swiper = this;\n        swiper.observer.destroy();\n      },\n    },\n  };\n\n  var Virtual = {\n    update: function update(force) {\n      var swiper = this;\n      var ref = swiper.params;\n      var slidesPerView = ref.slidesPerView;\n      var slidesPerGroup = ref.slidesPerGroup;\n      var centeredSlides = ref.centeredSlides;\n      var ref$1 = swiper.virtual;\n      var previousFrom = ref$1.from;\n      var previousTo = ref$1.to;\n      var slides = ref$1.slides;\n      var previousSlidesGrid = ref$1.slidesGrid;\n      var renderSlide = ref$1.renderSlide;\n      var previousOffset = ref$1.offset;\n      swiper.updateActiveIndex();\n      var activeIndex = swiper.activeIndex || 0;\n\n      var offsetProp;\n      if (swiper.rtlTranslate) { offsetProp = 'right'; }\n      else { offsetProp = swiper.isHorizontal() ? 'left' : 'top'; }\n\n      var slidesAfter;\n      var slidesBefore;\n      if (centeredSlides) {\n        slidesAfter = Math.floor(slidesPerView / 2) + slidesPerGroup;\n        slidesBefore = Math.floor(slidesPerView / 2) + slidesPerGroup;\n      } else {\n        slidesAfter = slidesPerView + (slidesPerGroup - 1);\n        slidesBefore = slidesPerGroup;\n      }\n      var from = Math.max((activeIndex || 0) - slidesBefore, 0);\n      var to = Math.min((activeIndex || 0) + slidesAfter, slides.length - 1);\n      var offset = (swiper.slidesGrid[from] || 0) - (swiper.slidesGrid[0] || 0);\n\n      Utils.extend(swiper.virtual, {\n        from: from,\n        to: to,\n        offset: offset,\n        slidesGrid: swiper.slidesGrid,\n      });\n\n      function onRendered() {\n        swiper.updateSlides();\n        swiper.updateProgress();\n        swiper.updateSlidesClasses();\n        if (swiper.lazy && swiper.params.lazy.enabled) {\n          swiper.lazy.load();\n        }\n      }\n\n      if (previousFrom === from && previousTo === to && !force) {\n        if (swiper.slidesGrid !== previousSlidesGrid && offset !== previousOffset) {\n          swiper.slides.css(offsetProp, (offset + \"px\"));\n        }\n        swiper.updateProgress();\n        return;\n      }\n      if (swiper.params.virtual.renderExternal) {\n        swiper.params.virtual.renderExternal.call(swiper, {\n          offset: offset,\n          from: from,\n          to: to,\n          slides: (function getSlides() {\n            var slidesToRender = [];\n            for (var i = from; i <= to; i += 1) {\n              slidesToRender.push(slides[i]);\n            }\n            return slidesToRender;\n          }()),\n        });\n        onRendered();\n        return;\n      }\n      var prependIndexes = [];\n      var appendIndexes = [];\n      if (force) {\n        swiper.$wrapperEl.find((\".\" + (swiper.params.slideClass))).remove();\n      } else {\n        for (var i = previousFrom; i <= previousTo; i += 1) {\n          if (i < from || i > to) {\n            swiper.$wrapperEl.find((\".\" + (swiper.params.slideClass) + \"[data-swiper-slide-index=\\\"\" + i + \"\\\"]\")).remove();\n          }\n        }\n      }\n      for (var i$1 = 0; i$1 < slides.length; i$1 += 1) {\n        if (i$1 >= from && i$1 <= to) {\n          if (typeof previousTo === 'undefined' || force) {\n            appendIndexes.push(i$1);\n          } else {\n            if (i$1 > previousTo) { appendIndexes.push(i$1); }\n            if (i$1 < previousFrom) { prependIndexes.push(i$1); }\n          }\n        }\n      }\n      appendIndexes.forEach(function (index) {\n        swiper.$wrapperEl.append(renderSlide(slides[index], index));\n      });\n      prependIndexes.sort(function (a, b) { return a < b; }).forEach(function (index) {\n        swiper.$wrapperEl.prepend(renderSlide(slides[index], index));\n      });\n      swiper.$wrapperEl.children('.swiper-slide').css(offsetProp, (offset + \"px\"));\n      onRendered();\n    },\n    renderSlide: function renderSlide(slide, index) {\n      var swiper = this;\n      var params = swiper.params.virtual;\n      if (params.cache && swiper.virtual.cache[index]) {\n        return swiper.virtual.cache[index];\n      }\n      var $slideEl = params.renderSlide\n        ? $(params.renderSlide.call(swiper, slide, index))\n        : $((\"<div class=\\\"\" + (swiper.params.slideClass) + \"\\\" data-swiper-slide-index=\\\"\" + index + \"\\\">\" + slide + \"</div>\"));\n      if (!$slideEl.attr('data-swiper-slide-index')) { $slideEl.attr('data-swiper-slide-index', index); }\n      if (params.cache) { swiper.virtual.cache[index] = $slideEl; }\n      return $slideEl;\n    },\n    appendSlide: function appendSlide(slide) {\n      var swiper = this;\n      swiper.virtual.slides.push(slide);\n      swiper.virtual.update(true);\n    },\n    prependSlide: function prependSlide(slide) {\n      var swiper = this;\n      swiper.virtual.slides.unshift(slide);\n      if (swiper.params.virtual.cache) {\n        var cache = swiper.virtual.cache;\n        var newCache = {};\n        Object.keys(cache).forEach(function (cachedIndex) {\n          newCache[cachedIndex + 1] = cache[cachedIndex];\n        });\n        swiper.virtual.cache = newCache;\n      }\n      swiper.virtual.update(true);\n      swiper.slideNext(0);\n    },\n  };\n\n  var Virtual$1 = {\n    name: 'virtual',\n    params: {\n      virtual: {\n        enabled: false,\n        slides: [],\n        cache: true,\n        renderSlide: null,\n        renderExternal: null,\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        virtual: {\n          update: Virtual.update.bind(swiper),\n          appendSlide: Virtual.appendSlide.bind(swiper),\n          prependSlide: Virtual.prependSlide.bind(swiper),\n          renderSlide: Virtual.renderSlide.bind(swiper),\n          slides: swiper.params.virtual.slides,\n          cache: {},\n        },\n      });\n    },\n    on: {\n      beforeInit: function beforeInit() {\n        var swiper = this;\n        if (!swiper.params.virtual.enabled) { return; }\n        swiper.classNames.push(((swiper.params.containerModifierClass) + \"virtual\"));\n        var overwriteParams = {\n          watchSlidesProgress: true,\n        };\n        Utils.extend(swiper.params, overwriteParams);\n        Utils.extend(swiper.originalParams, overwriteParams);\n\n        swiper.virtual.update();\n      },\n      setTranslate: function setTranslate() {\n        var swiper = this;\n        if (!swiper.params.virtual.enabled) { return; }\n        swiper.virtual.update();\n      },\n    },\n  };\n\n  var Keyboard = {\n    handle: function handle(event) {\n      var swiper = this;\n      var rtl = swiper.rtlTranslate;\n      var e = event;\n      if (e.originalEvent) { e = e.originalEvent; } // jquery fix\n      var kc = e.keyCode || e.charCode;\n      // Directions locks\n      if (!swiper.allowSlideNext && ((swiper.isHorizontal() && kc === 39) || (swiper.isVertical() && kc === 40))) {\n        return false;\n      }\n      if (!swiper.allowSlidePrev && ((swiper.isHorizontal() && kc === 37) || (swiper.isVertical() && kc === 38))) {\n        return false;\n      }\n      if (e.shiftKey || e.altKey || e.ctrlKey || e.metaKey) {\n        return undefined;\n      }\n      if (doc.activeElement && doc.activeElement.nodeName && (doc.activeElement.nodeName.toLowerCase() === 'input' || doc.activeElement.nodeName.toLowerCase() === 'textarea')) {\n        return undefined;\n      }\n      if (swiper.params.keyboard.onlyInViewport && (kc === 37 || kc === 39 || kc === 38 || kc === 40)) {\n        var inView = false;\n        // Check that swiper should be inside of visible area of window\n        if (swiper.$el.parents((\".\" + (swiper.params.slideClass))).length > 0 && swiper.$el.parents((\".\" + (swiper.params.slideActiveClass))).length === 0) {\n          return undefined;\n        }\n        var windowWidth = win.innerWidth;\n        var windowHeight = win.innerHeight;\n        var swiperOffset = swiper.$el.offset();\n        if (rtl) { swiperOffset.left -= swiper.$el[0].scrollLeft; }\n        var swiperCoord = [\n          [swiperOffset.left, swiperOffset.top],\n          [swiperOffset.left + swiper.width, swiperOffset.top],\n          [swiperOffset.left, swiperOffset.top + swiper.height],\n          [swiperOffset.left + swiper.width, swiperOffset.top + swiper.height] ];\n        for (var i = 0; i < swiperCoord.length; i += 1) {\n          var point = swiperCoord[i];\n          if (\n            point[0] >= 0 && point[0] <= windowWidth &&\n            point[1] >= 0 && point[1] <= windowHeight\n          ) {\n            inView = true;\n          }\n        }\n        if (!inView) { return undefined; }\n      }\n      if (swiper.isHorizontal()) {\n        if (kc === 37 || kc === 39) {\n          if (e.preventDefault) { e.preventDefault(); }\n          else { e.returnValue = false; }\n        }\n        if ((kc === 39 && !rtl) || (kc === 37 && rtl)) { swiper.slideNext(); }\n        if ((kc === 37 && !rtl) || (kc === 39 && rtl)) { swiper.slidePrev(); }\n      } else {\n        if (kc === 38 || kc === 40) {\n          if (e.preventDefault) { e.preventDefault(); }\n          else { e.returnValue = false; }\n        }\n        if (kc === 40) { swiper.slideNext(); }\n        if (kc === 38) { swiper.slidePrev(); }\n      }\n      swiper.emit('keyPress', kc);\n      return undefined;\n    },\n    enable: function enable() {\n      var swiper = this;\n      if (swiper.keyboard.enabled) { return; }\n      $(doc).on('keydown', swiper.keyboard.handle);\n      swiper.keyboard.enabled = true;\n    },\n    disable: function disable() {\n      var swiper = this;\n      if (!swiper.keyboard.enabled) { return; }\n      $(doc).off('keydown', swiper.keyboard.handle);\n      swiper.keyboard.enabled = false;\n    },\n  };\n\n  var Keyboard$1 = {\n    name: 'keyboard',\n    params: {\n      keyboard: {\n        enabled: false,\n        onlyInViewport: true,\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        keyboard: {\n          enabled: false,\n          enable: Keyboard.enable.bind(swiper),\n          disable: Keyboard.disable.bind(swiper),\n          handle: Keyboard.handle.bind(swiper),\n        },\n      });\n    },\n    on: {\n      init: function init() {\n        var swiper = this;\n        if (swiper.params.keyboard.enabled) {\n          swiper.keyboard.enable();\n        }\n      },\n      destroy: function destroy() {\n        var swiper = this;\n        if (swiper.keyboard.enabled) {\n          swiper.keyboard.disable();\n        }\n      },\n    },\n  };\n\n  function isEventSupported() {\n    var eventName = 'onwheel';\n    var isSupported = eventName in doc;\n\n    if (!isSupported) {\n      var element = doc.createElement('div');\n      element.setAttribute(eventName, 'return;');\n      isSupported = typeof element[eventName] === 'function';\n    }\n\n    if (!isSupported &&\n      doc.implementation &&\n      doc.implementation.hasFeature &&\n      // always returns true in newer browsers as per the standard.\n      // @see http://dom.spec.whatwg.org/#dom-domimplementation-hasfeature\n      doc.implementation.hasFeature('', '') !== true\n    ) {\n      // This is the only way to test support for the `wheel` event in IE9+.\n      isSupported = doc.implementation.hasFeature('Events.wheel', '3.0');\n    }\n\n    return isSupported;\n  }\n  var Mousewheel = {\n    lastScrollTime: Utils.now(),\n    event: (function getEvent() {\n      if (win.navigator.userAgent.indexOf('firefox') > -1) { return 'DOMMouseScroll'; }\n      return isEventSupported() ? 'wheel' : 'mousewheel';\n    }()),\n    normalize: function normalize(e) {\n      // Reasonable defaults\n      var PIXEL_STEP = 10;\n      var LINE_HEIGHT = 40;\n      var PAGE_HEIGHT = 800;\n\n      var sX = 0;\n      var sY = 0; // spinX, spinY\n      var pX = 0;\n      var pY = 0; // pixelX, pixelY\n\n      // Legacy\n      if ('detail' in e) {\n        sY = e.detail;\n      }\n      if ('wheelDelta' in e) {\n        sY = -e.wheelDelta / 120;\n      }\n      if ('wheelDeltaY' in e) {\n        sY = -e.wheelDeltaY / 120;\n      }\n      if ('wheelDeltaX' in e) {\n        sX = -e.wheelDeltaX / 120;\n      }\n\n      // side scrolling on FF with DOMMouseScroll\n      if ('axis' in e && e.axis === e.HORIZONTAL_AXIS) {\n        sX = sY;\n        sY = 0;\n      }\n\n      pX = sX * PIXEL_STEP;\n      pY = sY * PIXEL_STEP;\n\n      if ('deltaY' in e) {\n        pY = e.deltaY;\n      }\n      if ('deltaX' in e) {\n        pX = e.deltaX;\n      }\n\n      if ((pX || pY) && e.deltaMode) {\n        if (e.deltaMode === 1) { // delta in LINE units\n          pX *= LINE_HEIGHT;\n          pY *= LINE_HEIGHT;\n        } else { // delta in PAGE units\n          pX *= PAGE_HEIGHT;\n          pY *= PAGE_HEIGHT;\n        }\n      }\n\n      // Fall-back if spin cannot be determined\n      if (pX && !sX) {\n        sX = (pX < 1) ? -1 : 1;\n      }\n      if (pY && !sY) {\n        sY = (pY < 1) ? -1 : 1;\n      }\n\n      return {\n        spinX: sX,\n        spinY: sY,\n        pixelX: pX,\n        pixelY: pY,\n      };\n    },\n    handleMouseEnter: function handleMouseEnter() {\n      var swiper = this;\n      swiper.mouseEntered = true;\n    },\n    handleMouseLeave: function handleMouseLeave() {\n      var swiper = this;\n      swiper.mouseEntered = false;\n    },\n    handle: function handle(event) {\n      var e = event;\n      var swiper = this;\n      var params = swiper.params.mousewheel;\n\n      if (!swiper.mouseEntered && !params.releaseOnEdges) { return true; }\n\n      if (e.originalEvent) { e = e.originalEvent; } // jquery fix\n      var delta = 0;\n      var rtlFactor = swiper.rtlTranslate ? -1 : 1;\n\n      var data = Mousewheel.normalize(e);\n\n      if (params.forceToAxis) {\n        if (swiper.isHorizontal()) {\n          if (Math.abs(data.pixelX) > Math.abs(data.pixelY)) { delta = data.pixelX * rtlFactor; }\n          else { return true; }\n        } else if (Math.abs(data.pixelY) > Math.abs(data.pixelX)) { delta = data.pixelY; }\n        else { return true; }\n      } else {\n        delta = Math.abs(data.pixelX) > Math.abs(data.pixelY) ? -data.pixelX * rtlFactor : -data.pixelY;\n      }\n\n      if (delta === 0) { return true; }\n\n      if (params.invert) { delta = -delta; }\n\n      if (!swiper.params.freeMode) {\n        if (Utils.now() - swiper.mousewheel.lastScrollTime > 60) {\n          if (delta < 0) {\n            if ((!swiper.isEnd || swiper.params.loop) && !swiper.animating) {\n              swiper.slideNext();\n              swiper.emit('scroll', e);\n            } else if (params.releaseOnEdges) { return true; }\n          } else if ((!swiper.isBeginning || swiper.params.loop) && !swiper.animating) {\n            swiper.slidePrev();\n            swiper.emit('scroll', e);\n          } else if (params.releaseOnEdges) { return true; }\n        }\n        swiper.mousewheel.lastScrollTime = (new win.Date()).getTime();\n      } else {\n        // Freemode or scrollContainer:\n        if (swiper.params.loop) {\n          swiper.loopFix();\n        }\n        var position = swiper.getTranslate() + (delta * params.sensitivity);\n        var wasBeginning = swiper.isBeginning;\n        var wasEnd = swiper.isEnd;\n\n        if (position >= swiper.minTranslate()) { position = swiper.minTranslate(); }\n        if (position <= swiper.maxTranslate()) { position = swiper.maxTranslate(); }\n\n        swiper.setTransition(0);\n        swiper.setTranslate(position);\n        swiper.updateProgress();\n        swiper.updateActiveIndex();\n        swiper.updateSlidesClasses();\n\n        if ((!wasBeginning && swiper.isBeginning) || (!wasEnd && swiper.isEnd)) {\n          swiper.updateSlidesClasses();\n        }\n\n        if (swiper.params.freeModeSticky) {\n          clearTimeout(swiper.mousewheel.timeout);\n          swiper.mousewheel.timeout = Utils.nextTick(function () {\n            swiper.slideToClosest();\n          }, 300);\n        }\n        // Emit event\n        swiper.emit('scroll', e);\n\n        // Stop autoplay\n        if (swiper.params.autoplay && swiper.params.autoplayDisableOnInteraction) { swiper.autoplay.stop(); }\n        // Return page scroll on edge positions\n        if (position === swiper.minTranslate() || position === swiper.maxTranslate()) { return true; }\n      }\n\n      if (e.preventDefault) { e.preventDefault(); }\n      else { e.returnValue = false; }\n      return false;\n    },\n    enable: function enable() {\n      var swiper = this;\n      if (!Mousewheel.event) { return false; }\n      if (swiper.mousewheel.enabled) { return false; }\n      var target = swiper.$el;\n      if (swiper.params.mousewheel.eventsTarged !== 'container') {\n        target = $(swiper.params.mousewheel.eventsTarged);\n      }\n      target.on('mouseenter', swiper.mousewheel.handleMouseEnter);\n      target.on('mouseleave', swiper.mousewheel.handleMouseLeave);\n      target.on(Mousewheel.event, swiper.mousewheel.handle);\n      swiper.mousewheel.enabled = true;\n      return true;\n    },\n    disable: function disable() {\n      var swiper = this;\n      if (!Mousewheel.event) { return false; }\n      if (!swiper.mousewheel.enabled) { return false; }\n      var target = swiper.$el;\n      if (swiper.params.mousewheel.eventsTarged !== 'container') {\n        target = $(swiper.params.mousewheel.eventsTarged);\n      }\n      target.off(Mousewheel.event, swiper.mousewheel.handle);\n      swiper.mousewheel.enabled = false;\n      return true;\n    },\n  };\n\n  var Mousewheel$1 = {\n    name: 'mousewheel',\n    params: {\n      mousewheel: {\n        enabled: false,\n        releaseOnEdges: false,\n        invert: false,\n        forceToAxis: false,\n        sensitivity: 1,\n        eventsTarged: 'container',\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        mousewheel: {\n          enabled: false,\n          enable: Mousewheel.enable.bind(swiper),\n          disable: Mousewheel.disable.bind(swiper),\n          handle: Mousewheel.handle.bind(swiper),\n          handleMouseEnter: Mousewheel.handleMouseEnter.bind(swiper),\n          handleMouseLeave: Mousewheel.handleMouseLeave.bind(swiper),\n          lastScrollTime: Utils.now(),\n        },\n      });\n    },\n    on: {\n      init: function init() {\n        var swiper = this;\n        if (swiper.params.mousewheel.enabled) { swiper.mousewheel.enable(); }\n      },\n      destroy: function destroy() {\n        var swiper = this;\n        if (swiper.mousewheel.enabled) { swiper.mousewheel.disable(); }\n      },\n    },\n  };\n\n  var Navigation = {\n    update: function update() {\n      // Update Navigation Buttons\n      var swiper = this;\n      var params = swiper.params.navigation;\n\n      if (swiper.params.loop) { return; }\n      var ref = swiper.navigation;\n      var $nextEl = ref.$nextEl;\n      var $prevEl = ref.$prevEl;\n\n      if ($prevEl && $prevEl.length > 0) {\n        if (swiper.isBeginning) {\n          $prevEl.addClass(params.disabledClass);\n        } else {\n          $prevEl.removeClass(params.disabledClass);\n        }\n        $prevEl[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n      }\n      if ($nextEl && $nextEl.length > 0) {\n        if (swiper.isEnd) {\n          $nextEl.addClass(params.disabledClass);\n        } else {\n          $nextEl.removeClass(params.disabledClass);\n        }\n        $nextEl[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n      }\n    },\n    init: function init() {\n      var swiper = this;\n      var params = swiper.params.navigation;\n      if (!(params.nextEl || params.prevEl)) { return; }\n\n      var $nextEl;\n      var $prevEl;\n      if (params.nextEl) {\n        $nextEl = $(params.nextEl);\n        if (\n          swiper.params.uniqueNavElements &&\n          typeof params.nextEl === 'string' &&\n          $nextEl.length > 1 &&\n          swiper.$el.find(params.nextEl).length === 1\n        ) {\n          $nextEl = swiper.$el.find(params.nextEl);\n        }\n      }\n      if (params.prevEl) {\n        $prevEl = $(params.prevEl);\n        if (\n          swiper.params.uniqueNavElements &&\n          typeof params.prevEl === 'string' &&\n          $prevEl.length > 1 &&\n          swiper.$el.find(params.prevEl).length === 1\n        ) {\n          $prevEl = swiper.$el.find(params.prevEl);\n        }\n      }\n\n      if ($nextEl && $nextEl.length > 0) {\n        $nextEl.on('click', function (e) {\n          e.preventDefault();\n          if (swiper.isEnd && !swiper.params.loop) { return; }\n          swiper.slideNext();\n        });\n      }\n      if ($prevEl && $prevEl.length > 0) {\n        $prevEl.on('click', function (e) {\n          e.preventDefault();\n          if (swiper.isBeginning && !swiper.params.loop) { return; }\n          swiper.slidePrev();\n        });\n      }\n\n      Utils.extend(swiper.navigation, {\n        $nextEl: $nextEl,\n        nextEl: $nextEl && $nextEl[0],\n        $prevEl: $prevEl,\n        prevEl: $prevEl && $prevEl[0],\n      });\n    },\n    destroy: function destroy() {\n      var swiper = this;\n      var ref = swiper.navigation;\n      var $nextEl = ref.$nextEl;\n      var $prevEl = ref.$prevEl;\n      if ($nextEl && $nextEl.length) {\n        $nextEl.off('click');\n        $nextEl.removeClass(swiper.params.navigation.disabledClass);\n      }\n      if ($prevEl && $prevEl.length) {\n        $prevEl.off('click');\n        $prevEl.removeClass(swiper.params.navigation.disabledClass);\n      }\n    },\n  };\n\n  var Navigation$1 = {\n    name: 'navigation',\n    params: {\n      navigation: {\n        nextEl: null,\n        prevEl: null,\n\n        hideOnClick: false,\n        disabledClass: 'swiper-button-disabled',\n        hiddenClass: 'swiper-button-hidden',\n        lockClass: 'swiper-button-lock',\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        navigation: {\n          init: Navigation.init.bind(swiper),\n          update: Navigation.update.bind(swiper),\n          destroy: Navigation.destroy.bind(swiper),\n        },\n      });\n    },\n    on: {\n      init: function init() {\n        var swiper = this;\n        swiper.navigation.init();\n        swiper.navigation.update();\n      },\n      toEdge: function toEdge() {\n        var swiper = this;\n        swiper.navigation.update();\n      },\n      fromEdge: function fromEdge() {\n        var swiper = this;\n        swiper.navigation.update();\n      },\n      destroy: function destroy() {\n        var swiper = this;\n        swiper.navigation.destroy();\n      },\n      click: function click(e) {\n        var swiper = this;\n        var ref = swiper.navigation;\n        var $nextEl = ref.$nextEl;\n        var $prevEl = ref.$prevEl;\n        if (\n          swiper.params.navigation.hideOnClick &&\n          !$(e.target).is($prevEl) &&\n          !$(e.target).is($nextEl)\n        ) {\n          if ($nextEl) { $nextEl.toggleClass(swiper.params.navigation.hiddenClass); }\n          if ($prevEl) { $prevEl.toggleClass(swiper.params.navigation.hiddenClass); }\n        }\n      },\n    },\n  };\n\n  var Pagination = {\n    update: function update() {\n      // Render || Update Pagination bullets/items\n      var swiper = this;\n      var rtl = swiper.rtl;\n      var params = swiper.params.pagination;\n      if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) { return; }\n      var slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n      var $el = swiper.pagination.$el;\n      // Current/Total\n      var current;\n      var total = swiper.params.loop ? Math.ceil((slidesLength - (swiper.loopedSlides * 2)) / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n      if (swiper.params.loop) {\n        current = Math.ceil((swiper.activeIndex - swiper.loopedSlides) / swiper.params.slidesPerGroup);\n        if (current > slidesLength - 1 - (swiper.loopedSlides * 2)) {\n          current -= (slidesLength - (swiper.loopedSlides * 2));\n        }\n        if (current > total - 1) { current -= total; }\n        if (current < 0 && swiper.params.paginationType !== 'bullets') { current = total + current; }\n      } else if (typeof swiper.snapIndex !== 'undefined') {\n        current = swiper.snapIndex;\n      } else {\n        current = swiper.activeIndex || 0;\n      }\n      // Types\n      if (params.type === 'bullets' && swiper.pagination.bullets && swiper.pagination.bullets.length > 0) {\n        var bullets = swiper.pagination.bullets;\n        var firstIndex;\n        var lastIndex;\n        var midIndex;\n        if (params.dynamicBullets) {\n          swiper.pagination.bulletSize = bullets.eq(0)[swiper.isHorizontal() ? 'outerWidth' : 'outerHeight'](true);\n          $el.css(swiper.isHorizontal() ? 'width' : 'height', ((swiper.pagination.bulletSize * (params.dynamicMainBullets + 4)) + \"px\"));\n          if (params.dynamicMainBullets > 1 && swiper.previousIndex !== undefined) {\n            swiper.pagination.dynamicBulletIndex += (current - swiper.previousIndex);\n            if (swiper.pagination.dynamicBulletIndex > (params.dynamicMainBullets - 1)) {\n              swiper.pagination.dynamicBulletIndex = params.dynamicMainBullets - 1;\n            } else if (swiper.pagination.dynamicBulletIndex < 0) {\n              swiper.pagination.dynamicBulletIndex = 0;\n            }\n          }\n          firstIndex = current - swiper.pagination.dynamicBulletIndex;\n          lastIndex = firstIndex + (Math.min(bullets.length, params.dynamicMainBullets) - 1);\n          midIndex = (lastIndex + firstIndex) / 2;\n        }\n        bullets.removeClass(((params.bulletActiveClass) + \" \" + (params.bulletActiveClass) + \"-next \" + (params.bulletActiveClass) + \"-next-next \" + (params.bulletActiveClass) + \"-prev \" + (params.bulletActiveClass) + \"-prev-prev \" + (params.bulletActiveClass) + \"-main\"));\n        if ($el.length > 1) {\n          bullets.each(function (index, bullet) {\n            var $bullet = $(bullet);\n            var bulletIndex = $bullet.index();\n            if (bulletIndex === current) {\n              $bullet.addClass(params.bulletActiveClass);\n            }\n            if (params.dynamicBullets) {\n              if (bulletIndex >= firstIndex && bulletIndex <= lastIndex) {\n                $bullet.addClass(((params.bulletActiveClass) + \"-main\"));\n              }\n              if (bulletIndex === firstIndex) {\n                $bullet\n                  .prev()\n                  .addClass(((params.bulletActiveClass) + \"-prev\"))\n                  .prev()\n                  .addClass(((params.bulletActiveClass) + \"-prev-prev\"));\n              }\n              if (bulletIndex === lastIndex) {\n                $bullet\n                  .next()\n                  .addClass(((params.bulletActiveClass) + \"-next\"))\n                  .next()\n                  .addClass(((params.bulletActiveClass) + \"-next-next\"));\n              }\n            }\n          });\n        } else {\n          var $bullet = bullets.eq(current);\n          $bullet.addClass(params.bulletActiveClass);\n          if (params.dynamicBullets) {\n            var $firstDisplayedBullet = bullets.eq(firstIndex);\n            var $lastDisplayedBullet = bullets.eq(lastIndex);\n            for (var i = firstIndex; i <= lastIndex; i += 1) {\n              bullets.eq(i).addClass(((params.bulletActiveClass) + \"-main\"));\n            }\n            $firstDisplayedBullet\n              .prev()\n              .addClass(((params.bulletActiveClass) + \"-prev\"))\n              .prev()\n              .addClass(((params.bulletActiveClass) + \"-prev-prev\"));\n            $lastDisplayedBullet\n              .next()\n              .addClass(((params.bulletActiveClass) + \"-next\"))\n              .next()\n              .addClass(((params.bulletActiveClass) + \"-next-next\"));\n          }\n        }\n        if (params.dynamicBullets) {\n          var dynamicBulletsLength = Math.min(bullets.length, params.dynamicMainBullets + 4);\n          var bulletsOffset = (((swiper.pagination.bulletSize * dynamicBulletsLength) - (swiper.pagination.bulletSize)) / 2) - (midIndex * swiper.pagination.bulletSize);\n          var offsetProp = rtl ? 'right' : 'left';\n          bullets.css(swiper.isHorizontal() ? offsetProp : 'top', (bulletsOffset + \"px\"));\n        }\n      }\n      if (params.type === 'fraction') {\n        $el.find((\".\" + (params.currentClass))).text(params.formatFractionCurrent(current + 1));\n        $el.find((\".\" + (params.totalClass))).text(params.formatFractionTotal(total));\n      }\n      if (params.type === 'progressbar') {\n        var progressbarDirection;\n        if (params.progressbarOpposite) {\n          progressbarDirection = swiper.isHorizontal() ? 'vertical' : 'horizontal';\n        } else {\n          progressbarDirection = swiper.isHorizontal() ? 'horizontal' : 'vertical';\n        }\n        var scale = (current + 1) / total;\n        var scaleX = 1;\n        var scaleY = 1;\n        if (progressbarDirection === 'horizontal') {\n          scaleX = scale;\n        } else {\n          scaleY = scale;\n        }\n        $el.find((\".\" + (params.progressbarFillClass))).transform((\"translate3d(0,0,0) scaleX(\" + scaleX + \") scaleY(\" + scaleY + \")\")).transition(swiper.params.speed);\n      }\n      if (params.type === 'custom' && params.renderCustom) {\n        $el.html(params.renderCustom(swiper, current + 1, total));\n        swiper.emit('paginationRender', swiper, $el[0]);\n      } else {\n        swiper.emit('paginationUpdate', swiper, $el[0]);\n      }\n      $el[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n    },\n    render: function render() {\n      // Render Container\n      var swiper = this;\n      var params = swiper.params.pagination;\n      if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) { return; }\n      var slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n\n      var $el = swiper.pagination.$el;\n      var paginationHTML = '';\n      if (params.type === 'bullets') {\n        var numberOfBullets = swiper.params.loop ? Math.ceil((slidesLength - (swiper.loopedSlides * 2)) / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n        for (var i = 0; i < numberOfBullets; i += 1) {\n          if (params.renderBullet) {\n            paginationHTML += params.renderBullet.call(swiper, i, params.bulletClass);\n          } else {\n            paginationHTML += \"<\" + (params.bulletElement) + \" class=\\\"\" + (params.bulletClass) + \"\\\"></\" + (params.bulletElement) + \">\";\n          }\n        }\n        $el.html(paginationHTML);\n        swiper.pagination.bullets = $el.find((\".\" + (params.bulletClass)));\n      }\n      if (params.type === 'fraction') {\n        if (params.renderFraction) {\n          paginationHTML = params.renderFraction.call(swiper, params.currentClass, params.totalClass);\n        } else {\n          paginationHTML =\n          \"<span class=\\\"\" + (params.currentClass) + \"\\\"></span>\" +\n          ' / ' +\n          \"<span class=\\\"\" + (params.totalClass) + \"\\\"></span>\";\n        }\n        $el.html(paginationHTML);\n      }\n      if (params.type === 'progressbar') {\n        if (params.renderProgressbar) {\n          paginationHTML = params.renderProgressbar.call(swiper, params.progressbarFillClass);\n        } else {\n          paginationHTML = \"<span class=\\\"\" + (params.progressbarFillClass) + \"\\\"></span>\";\n        }\n        $el.html(paginationHTML);\n      }\n      if (params.type !== 'custom') {\n        swiper.emit('paginationRender', swiper.pagination.$el[0]);\n      }\n    },\n    init: function init() {\n      var swiper = this;\n      var params = swiper.params.pagination;\n      if (!params.el) { return; }\n\n      var $el = $(params.el);\n      if ($el.length === 0) { return; }\n\n      if (\n        swiper.params.uniqueNavElements &&\n        typeof params.el === 'string' &&\n        $el.length > 1 &&\n        swiper.$el.find(params.el).length === 1\n      ) {\n        $el = swiper.$el.find(params.el);\n      }\n\n      if (params.type === 'bullets' && params.clickable) {\n        $el.addClass(params.clickableClass);\n      }\n\n      $el.addClass(params.modifierClass + params.type);\n\n      if (params.type === 'bullets' && params.dynamicBullets) {\n        $el.addClass((\"\" + (params.modifierClass) + (params.type) + \"-dynamic\"));\n        swiper.pagination.dynamicBulletIndex = 0;\n        if (params.dynamicMainBullets < 1) {\n          params.dynamicMainBullets = 1;\n        }\n      }\n      if (params.type === 'progressbar' && params.progressbarOpposite) {\n        $el.addClass(params.progressbarOppositeClass);\n      }\n\n      if (params.clickable) {\n        $el.on('click', (\".\" + (params.bulletClass)), function onClick(e) {\n          e.preventDefault();\n          var index = $(this).index() * swiper.params.slidesPerGroup;\n          if (swiper.params.loop) { index += swiper.loopedSlides; }\n          swiper.slideTo(index);\n        });\n      }\n\n      Utils.extend(swiper.pagination, {\n        $el: $el,\n        el: $el[0],\n      });\n    },\n    destroy: function destroy() {\n      var swiper = this;\n      var params = swiper.params.pagination;\n      if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) { return; }\n      var $el = swiper.pagination.$el;\n\n      $el.removeClass(params.hiddenClass);\n      $el.removeClass(params.modifierClass + params.type);\n      if (swiper.pagination.bullets) { swiper.pagination.bullets.removeClass(params.bulletActiveClass); }\n      if (params.clickable) {\n        $el.off('click', (\".\" + (params.bulletClass)));\n      }\n    },\n  };\n\n  var Pagination$1 = {\n    name: 'pagination',\n    params: {\n      pagination: {\n        el: null,\n        bulletElement: 'span',\n        clickable: false,\n        hideOnClick: false,\n        renderBullet: null,\n        renderProgressbar: null,\n        renderFraction: null,\n        renderCustom: null,\n        progressbarOpposite: false,\n        type: 'bullets', // 'bullets' or 'progressbar' or 'fraction' or 'custom'\n        dynamicBullets: false,\n        dynamicMainBullets: 1,\n        formatFractionCurrent: function (number) { return number; },\n        formatFractionTotal: function (number) { return number; },\n        bulletClass: 'swiper-pagination-bullet',\n        bulletActiveClass: 'swiper-pagination-bullet-active',\n        modifierClass: 'swiper-pagination-', // NEW\n        currentClass: 'swiper-pagination-current',\n        totalClass: 'swiper-pagination-total',\n        hiddenClass: 'swiper-pagination-hidden',\n        progressbarFillClass: 'swiper-pagination-progressbar-fill',\n        progressbarOppositeClass: 'swiper-pagination-progressbar-opposite',\n        clickableClass: 'swiper-pagination-clickable', // NEW\n        lockClass: 'swiper-pagination-lock',\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        pagination: {\n          init: Pagination.init.bind(swiper),\n          render: Pagination.render.bind(swiper),\n          update: Pagination.update.bind(swiper),\n          destroy: Pagination.destroy.bind(swiper),\n          dynamicBulletIndex: 0,\n        },\n      });\n    },\n    on: {\n      init: function init() {\n        var swiper = this;\n        swiper.pagination.init();\n        swiper.pagination.render();\n        swiper.pagination.update();\n      },\n      activeIndexChange: function activeIndexChange() {\n        var swiper = this;\n        if (swiper.params.loop) {\n          swiper.pagination.update();\n        } else if (typeof swiper.snapIndex === 'undefined') {\n          swiper.pagination.update();\n        }\n      },\n      snapIndexChange: function snapIndexChange() {\n        var swiper = this;\n        if (!swiper.params.loop) {\n          swiper.pagination.update();\n        }\n      },\n      slidesLengthChange: function slidesLengthChange() {\n        var swiper = this;\n        if (swiper.params.loop) {\n          swiper.pagination.render();\n          swiper.pagination.update();\n        }\n      },\n      snapGridLengthChange: function snapGridLengthChange() {\n        var swiper = this;\n        if (!swiper.params.loop) {\n          swiper.pagination.render();\n          swiper.pagination.update();\n        }\n      },\n      destroy: function destroy() {\n        var swiper = this;\n        swiper.pagination.destroy();\n      },\n      click: function click(e) {\n        var swiper = this;\n        if (\n          swiper.params.pagination.el &&\n          swiper.params.pagination.hideOnClick &&\n          swiper.pagination.$el.length > 0 &&\n          !$(e.target).hasClass(swiper.params.pagination.bulletClass)\n        ) {\n          swiper.pagination.$el.toggleClass(swiper.params.pagination.hiddenClass);\n        }\n      },\n    },\n  };\n\n  var Scrollbar = {\n    setTranslate: function setTranslate() {\n      var swiper = this;\n      if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) { return; }\n      var scrollbar = swiper.scrollbar;\n      var rtl = swiper.rtlTranslate;\n      var progress = swiper.progress;\n      var dragSize = scrollbar.dragSize;\n      var trackSize = scrollbar.trackSize;\n      var $dragEl = scrollbar.$dragEl;\n      var $el = scrollbar.$el;\n      var params = swiper.params.scrollbar;\n\n      var newSize = dragSize;\n      var newPos = (trackSize - dragSize) * progress;\n      if (rtl) {\n        newPos = -newPos;\n        if (newPos > 0) {\n          newSize = dragSize - newPos;\n          newPos = 0;\n        } else if (-newPos + dragSize > trackSize) {\n          newSize = trackSize + newPos;\n        }\n      } else if (newPos < 0) {\n        newSize = dragSize + newPos;\n        newPos = 0;\n      } else if (newPos + dragSize > trackSize) {\n        newSize = trackSize - newPos;\n      }\n      if (swiper.isHorizontal()) {\n        if (Support.transforms3d) {\n          $dragEl.transform((\"translate3d(\" + newPos + \"px, 0, 0)\"));\n        } else {\n          $dragEl.transform((\"translateX(\" + newPos + \"px)\"));\n        }\n        $dragEl[0].style.width = newSize + \"px\";\n      } else {\n        if (Support.transforms3d) {\n          $dragEl.transform((\"translate3d(0px, \" + newPos + \"px, 0)\"));\n        } else {\n          $dragEl.transform((\"translateY(\" + newPos + \"px)\"));\n        }\n        $dragEl[0].style.height = newSize + \"px\";\n      }\n      if (params.hide) {\n        clearTimeout(swiper.scrollbar.timeout);\n        $el[0].style.opacity = 1;\n        swiper.scrollbar.timeout = setTimeout(function () {\n          $el[0].style.opacity = 0;\n          $el.transition(400);\n        }, 1000);\n      }\n    },\n    setTransition: function setTransition(duration) {\n      var swiper = this;\n      if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) { return; }\n      swiper.scrollbar.$dragEl.transition(duration);\n    },\n    updateSize: function updateSize() {\n      var swiper = this;\n      if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) { return; }\n\n      var scrollbar = swiper.scrollbar;\n      var $dragEl = scrollbar.$dragEl;\n      var $el = scrollbar.$el;\n\n      $dragEl[0].style.width = '';\n      $dragEl[0].style.height = '';\n      var trackSize = swiper.isHorizontal() ? $el[0].offsetWidth : $el[0].offsetHeight;\n\n      var divider = swiper.size / swiper.virtualSize;\n      var moveDivider = divider * (trackSize / swiper.size);\n      var dragSize;\n      if (swiper.params.scrollbar.dragSize === 'auto') {\n        dragSize = trackSize * divider;\n      } else {\n        dragSize = parseInt(swiper.params.scrollbar.dragSize, 10);\n      }\n\n      if (swiper.isHorizontal()) {\n        $dragEl[0].style.width = dragSize + \"px\";\n      } else {\n        $dragEl[0].style.height = dragSize + \"px\";\n      }\n\n      if (divider >= 1) {\n        $el[0].style.display = 'none';\n      } else {\n        $el[0].style.display = '';\n      }\n      if (swiper.params.scrollbarHide) {\n        $el[0].style.opacity = 0;\n      }\n      Utils.extend(scrollbar, {\n        trackSize: trackSize,\n        divider: divider,\n        moveDivider: moveDivider,\n        dragSize: dragSize,\n      });\n      scrollbar.$el[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](swiper.params.scrollbar.lockClass);\n    },\n    setDragPosition: function setDragPosition(e) {\n      var swiper = this;\n      var scrollbar = swiper.scrollbar;\n      var rtl = swiper.rtlTranslate;\n      var $el = scrollbar.$el;\n      var dragSize = scrollbar.dragSize;\n      var trackSize = scrollbar.trackSize;\n\n      var pointerPosition;\n      if (swiper.isHorizontal()) {\n        pointerPosition = ((e.type === 'touchstart' || e.type === 'touchmove') ? e.targetTouches[0].pageX : e.pageX || e.clientX);\n      } else {\n        pointerPosition = ((e.type === 'touchstart' || e.type === 'touchmove') ? e.targetTouches[0].pageY : e.pageY || e.clientY);\n      }\n      var positionRatio;\n      positionRatio = ((pointerPosition) - $el.offset()[swiper.isHorizontal() ? 'left' : 'top'] - (dragSize / 2)) / (trackSize - dragSize);\n      positionRatio = Math.max(Math.min(positionRatio, 1), 0);\n      if (rtl) {\n        positionRatio = 1 - positionRatio;\n      }\n\n      var position = swiper.minTranslate() + ((swiper.maxTranslate() - swiper.minTranslate()) * positionRatio);\n\n      swiper.updateProgress(position);\n      swiper.setTranslate(position);\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    },\n    onDragStart: function onDragStart(e) {\n      var swiper = this;\n      var params = swiper.params.scrollbar;\n      var scrollbar = swiper.scrollbar;\n      var $wrapperEl = swiper.$wrapperEl;\n      var $el = scrollbar.$el;\n      var $dragEl = scrollbar.$dragEl;\n      swiper.scrollbar.isTouched = true;\n      e.preventDefault();\n      e.stopPropagation();\n\n      $wrapperEl.transition(100);\n      $dragEl.transition(100);\n      scrollbar.setDragPosition(e);\n\n      clearTimeout(swiper.scrollbar.dragTimeout);\n\n      $el.transition(0);\n      if (params.hide) {\n        $el.css('opacity', 1);\n      }\n      swiper.emit('scrollbarDragStart', e);\n    },\n    onDragMove: function onDragMove(e) {\n      var swiper = this;\n      var scrollbar = swiper.scrollbar;\n      var $wrapperEl = swiper.$wrapperEl;\n      var $el = scrollbar.$el;\n      var $dragEl = scrollbar.$dragEl;\n\n      if (!swiper.scrollbar.isTouched) { return; }\n      if (e.preventDefault) { e.preventDefault(); }\n      else { e.returnValue = false; }\n      scrollbar.setDragPosition(e);\n      $wrapperEl.transition(0);\n      $el.transition(0);\n      $dragEl.transition(0);\n      swiper.emit('scrollbarDragMove', e);\n    },\n    onDragEnd: function onDragEnd(e) {\n      var swiper = this;\n\n      var params = swiper.params.scrollbar;\n      var scrollbar = swiper.scrollbar;\n      var $el = scrollbar.$el;\n\n      if (!swiper.scrollbar.isTouched) { return; }\n      swiper.scrollbar.isTouched = false;\n      if (params.hide) {\n        clearTimeout(swiper.scrollbar.dragTimeout);\n        swiper.scrollbar.dragTimeout = Utils.nextTick(function () {\n          $el.css('opacity', 0);\n          $el.transition(400);\n        }, 1000);\n      }\n      swiper.emit('scrollbarDragEnd', e);\n      if (params.snapOnRelease) {\n        swiper.slideToClosest();\n      }\n    },\n    enableDraggable: function enableDraggable() {\n      var swiper = this;\n      if (!swiper.params.scrollbar.el) { return; }\n      var scrollbar = swiper.scrollbar;\n      var touchEvents = swiper.touchEvents;\n      var touchEventsDesktop = swiper.touchEventsDesktop;\n      var params = swiper.params;\n      var $el = scrollbar.$el;\n      var target = $el[0];\n      var activeListener = Support.passiveListener && params.passiveListener ? { passive: false, capture: false } : false;\n      var passiveListener = Support.passiveListener && params.passiveListener ? { passive: true, capture: false } : false;\n      if (!Support.touch && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n        target.addEventListener(touchEventsDesktop.start, swiper.scrollbar.onDragStart, activeListener);\n        doc.addEventListener(touchEventsDesktop.move, swiper.scrollbar.onDragMove, activeListener);\n        doc.addEventListener(touchEventsDesktop.end, swiper.scrollbar.onDragEnd, passiveListener);\n      } else {\n        if (Support.touch) {\n          target.addEventListener(touchEvents.start, swiper.scrollbar.onDragStart, activeListener);\n          target.addEventListener(touchEvents.move, swiper.scrollbar.onDragMove, activeListener);\n          target.addEventListener(touchEvents.end, swiper.scrollbar.onDragEnd, passiveListener);\n        }\n        if ((params.simulateTouch && !Device.ios && !Device.android) || (params.simulateTouch && !Support.touch && Device.ios)) {\n          target.addEventListener('mousedown', swiper.scrollbar.onDragStart, activeListener);\n          doc.addEventListener('mousemove', swiper.scrollbar.onDragMove, activeListener);\n          doc.addEventListener('mouseup', swiper.scrollbar.onDragEnd, passiveListener);\n        }\n      }\n    },\n    disableDraggable: function disableDraggable() {\n      var swiper = this;\n      if (!swiper.params.scrollbar.el) { return; }\n      var scrollbar = swiper.scrollbar;\n      var touchEvents = swiper.touchEvents;\n      var touchEventsDesktop = swiper.touchEventsDesktop;\n      var params = swiper.params;\n      var $el = scrollbar.$el;\n      var target = $el[0];\n      var activeListener = Support.passiveListener && params.passiveListener ? { passive: false, capture: false } : false;\n      var passiveListener = Support.passiveListener && params.passiveListener ? { passive: true, capture: false } : false;\n      if (!Support.touch && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n        target.removeEventListener(touchEventsDesktop.start, swiper.scrollbar.onDragStart, activeListener);\n        doc.removeEventListener(touchEventsDesktop.move, swiper.scrollbar.onDragMove, activeListener);\n        doc.removeEventListener(touchEventsDesktop.end, swiper.scrollbar.onDragEnd, passiveListener);\n      } else {\n        if (Support.touch) {\n          target.removeEventListener(touchEvents.start, swiper.scrollbar.onDragStart, activeListener);\n          target.removeEventListener(touchEvents.move, swiper.scrollbar.onDragMove, activeListener);\n          target.removeEventListener(touchEvents.end, swiper.scrollbar.onDragEnd, passiveListener);\n        }\n        if ((params.simulateTouch && !Device.ios && !Device.android) || (params.simulateTouch && !Support.touch && Device.ios)) {\n          target.removeEventListener('mousedown', swiper.scrollbar.onDragStart, activeListener);\n          doc.removeEventListener('mousemove', swiper.scrollbar.onDragMove, activeListener);\n          doc.removeEventListener('mouseup', swiper.scrollbar.onDragEnd, passiveListener);\n        }\n      }\n    },\n    init: function init() {\n      var swiper = this;\n      if (!swiper.params.scrollbar.el) { return; }\n      var scrollbar = swiper.scrollbar;\n      var $swiperEl = swiper.$el;\n      var params = swiper.params.scrollbar;\n\n      var $el = $(params.el);\n      if (swiper.params.uniqueNavElements && typeof params.el === 'string' && $el.length > 1 && $swiperEl.find(params.el).length === 1) {\n        $el = $swiperEl.find(params.el);\n      }\n\n      var $dragEl = $el.find((\".\" + (swiper.params.scrollbar.dragClass)));\n      if ($dragEl.length === 0) {\n        $dragEl = $((\"<div class=\\\"\" + (swiper.params.scrollbar.dragClass) + \"\\\"></div>\"));\n        $el.append($dragEl);\n      }\n\n      Utils.extend(scrollbar, {\n        $el: $el,\n        el: $el[0],\n        $dragEl: $dragEl,\n        dragEl: $dragEl[0],\n      });\n\n      if (params.draggable) {\n        scrollbar.enableDraggable();\n      }\n    },\n    destroy: function destroy() {\n      var swiper = this;\n      swiper.scrollbar.disableDraggable();\n    },\n  };\n\n  var Scrollbar$1 = {\n    name: 'scrollbar',\n    params: {\n      scrollbar: {\n        el: null,\n        dragSize: 'auto',\n        hide: false,\n        draggable: false,\n        snapOnRelease: true,\n        lockClass: 'swiper-scrollbar-lock',\n        dragClass: 'swiper-scrollbar-drag',\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        scrollbar: {\n          init: Scrollbar.init.bind(swiper),\n          destroy: Scrollbar.destroy.bind(swiper),\n          updateSize: Scrollbar.updateSize.bind(swiper),\n          setTranslate: Scrollbar.setTranslate.bind(swiper),\n          setTransition: Scrollbar.setTransition.bind(swiper),\n          enableDraggable: Scrollbar.enableDraggable.bind(swiper),\n          disableDraggable: Scrollbar.disableDraggable.bind(swiper),\n          setDragPosition: Scrollbar.setDragPosition.bind(swiper),\n          onDragStart: Scrollbar.onDragStart.bind(swiper),\n          onDragMove: Scrollbar.onDragMove.bind(swiper),\n          onDragEnd: Scrollbar.onDragEnd.bind(swiper),\n          isTouched: false,\n          timeout: null,\n          dragTimeout: null,\n        },\n      });\n    },\n    on: {\n      init: function init() {\n        var swiper = this;\n        swiper.scrollbar.init();\n        swiper.scrollbar.updateSize();\n        swiper.scrollbar.setTranslate();\n      },\n      update: function update() {\n        var swiper = this;\n        swiper.scrollbar.updateSize();\n      },\n      resize: function resize() {\n        var swiper = this;\n        swiper.scrollbar.updateSize();\n      },\n      observerUpdate: function observerUpdate() {\n        var swiper = this;\n        swiper.scrollbar.updateSize();\n      },\n      setTranslate: function setTranslate() {\n        var swiper = this;\n        swiper.scrollbar.setTranslate();\n      },\n      setTransition: function setTransition(duration) {\n        var swiper = this;\n        swiper.scrollbar.setTransition(duration);\n      },\n      destroy: function destroy() {\n        var swiper = this;\n        swiper.scrollbar.destroy();\n      },\n    },\n  };\n\n  var Parallax = {\n    setTransform: function setTransform(el, progress) {\n      var swiper = this;\n      var rtl = swiper.rtl;\n\n      var $el = $(el);\n      var rtlFactor = rtl ? -1 : 1;\n\n      var p = $el.attr('data-swiper-parallax') || '0';\n      var x = $el.attr('data-swiper-parallax-x');\n      var y = $el.attr('data-swiper-parallax-y');\n      var scale = $el.attr('data-swiper-parallax-scale');\n      var opacity = $el.attr('data-swiper-parallax-opacity');\n\n      if (x || y) {\n        x = x || '0';\n        y = y || '0';\n      } else if (swiper.isHorizontal()) {\n        x = p;\n        y = '0';\n      } else {\n        y = p;\n        x = '0';\n      }\n\n      if ((x).indexOf('%') >= 0) {\n        x = (parseInt(x, 10) * progress * rtlFactor) + \"%\";\n      } else {\n        x = (x * progress * rtlFactor) + \"px\";\n      }\n      if ((y).indexOf('%') >= 0) {\n        y = (parseInt(y, 10) * progress) + \"%\";\n      } else {\n        y = (y * progress) + \"px\";\n      }\n\n      if (typeof opacity !== 'undefined' && opacity !== null) {\n        var currentOpacity = opacity - ((opacity - 1) * (1 - Math.abs(progress)));\n        $el[0].style.opacity = currentOpacity;\n      }\n      if (typeof scale === 'undefined' || scale === null) {\n        $el.transform((\"translate3d(\" + x + \", \" + y + \", 0px)\"));\n      } else {\n        var currentScale = scale - ((scale - 1) * (1 - Math.abs(progress)));\n        $el.transform((\"translate3d(\" + x + \", \" + y + \", 0px) scale(\" + currentScale + \")\"));\n      }\n    },\n    setTranslate: function setTranslate() {\n      var swiper = this;\n      var $el = swiper.$el;\n      var slides = swiper.slides;\n      var progress = swiper.progress;\n      var snapGrid = swiper.snapGrid;\n      $el.children('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]')\n        .each(function (index, el) {\n          swiper.parallax.setTransform(el, progress);\n        });\n      slides.each(function (slideIndex, slideEl) {\n        var slideProgress = slideEl.progress;\n        if (swiper.params.slidesPerGroup > 1 && swiper.params.slidesPerView !== 'auto') {\n          slideProgress += Math.ceil(slideIndex / 2) - (progress * (snapGrid.length - 1));\n        }\n        slideProgress = Math.min(Math.max(slideProgress, -1), 1);\n        $(slideEl).find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]')\n          .each(function (index, el) {\n            swiper.parallax.setTransform(el, slideProgress);\n          });\n      });\n    },\n    setTransition: function setTransition(duration) {\n      if ( duration === void 0 ) duration = this.params.speed;\n\n      var swiper = this;\n      var $el = swiper.$el;\n      $el.find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]')\n        .each(function (index, parallaxEl) {\n          var $parallaxEl = $(parallaxEl);\n          var parallaxDuration = parseInt($parallaxEl.attr('data-swiper-parallax-duration'), 10) || duration;\n          if (duration === 0) { parallaxDuration = 0; }\n          $parallaxEl.transition(parallaxDuration);\n        });\n    },\n  };\n\n  var Parallax$1 = {\n    name: 'parallax',\n    params: {\n      parallax: {\n        enabled: false,\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        parallax: {\n          setTransform: Parallax.setTransform.bind(swiper),\n          setTranslate: Parallax.setTranslate.bind(swiper),\n          setTransition: Parallax.setTransition.bind(swiper),\n        },\n      });\n    },\n    on: {\n      beforeInit: function beforeInit() {\n        var swiper = this;\n        if (!swiper.params.parallax.enabled) { return; }\n        swiper.params.watchSlidesProgress = true;\n      },\n      init: function init() {\n        var swiper = this;\n        if (!swiper.params.parallax) { return; }\n        swiper.parallax.setTranslate();\n      },\n      setTranslate: function setTranslate() {\n        var swiper = this;\n        if (!swiper.params.parallax) { return; }\n        swiper.parallax.setTranslate();\n      },\n      setTransition: function setTransition(duration) {\n        var swiper = this;\n        if (!swiper.params.parallax) { return; }\n        swiper.parallax.setTransition(duration);\n      },\n    },\n  };\n\n  var Zoom = {\n    // Calc Scale From Multi-touches\n    getDistanceBetweenTouches: function getDistanceBetweenTouches(e) {\n      if (e.targetTouches.length < 2) { return 1; }\n      var x1 = e.targetTouches[0].pageX;\n      var y1 = e.targetTouches[0].pageY;\n      var x2 = e.targetTouches[1].pageX;\n      var y2 = e.targetTouches[1].pageY;\n      var distance = Math.sqrt((Math.pow( (x2 - x1), 2 )) + (Math.pow( (y2 - y1), 2 )));\n      return distance;\n    },\n    // Events\n    onGestureStart: function onGestureStart(e) {\n      var swiper = this;\n      var params = swiper.params.zoom;\n      var zoom = swiper.zoom;\n      var gesture = zoom.gesture;\n      zoom.fakeGestureTouched = false;\n      zoom.fakeGestureMoved = false;\n      if (!Support.gestures) {\n        if (e.type !== 'touchstart' || (e.type === 'touchstart' && e.targetTouches.length < 2)) {\n          return;\n        }\n        zoom.fakeGestureTouched = true;\n        gesture.scaleStart = Zoom.getDistanceBetweenTouches(e);\n      }\n      if (!gesture.$slideEl || !gesture.$slideEl.length) {\n        gesture.$slideEl = $(e.target).closest('.swiper-slide');\n        if (gesture.$slideEl.length === 0) { gesture.$slideEl = swiper.slides.eq(swiper.activeIndex); }\n        gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');\n        gesture.$imageWrapEl = gesture.$imageEl.parent((\".\" + (params.containerClass)));\n        gesture.maxRatio = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n        if (gesture.$imageWrapEl.length === 0) {\n          gesture.$imageEl = undefined;\n          return;\n        }\n      }\n      gesture.$imageEl.transition(0);\n      swiper.zoom.isScaling = true;\n    },\n    onGestureChange: function onGestureChange(e) {\n      var swiper = this;\n      var params = swiper.params.zoom;\n      var zoom = swiper.zoom;\n      var gesture = zoom.gesture;\n      if (!Support.gestures) {\n        if (e.type !== 'touchmove' || (e.type === 'touchmove' && e.targetTouches.length < 2)) {\n          return;\n        }\n        zoom.fakeGestureMoved = true;\n        gesture.scaleMove = Zoom.getDistanceBetweenTouches(e);\n      }\n      if (!gesture.$imageEl || gesture.$imageEl.length === 0) { return; }\n      if (Support.gestures) {\n        swiper.zoom.scale = e.scale * zoom.currentScale;\n      } else {\n        zoom.scale = (gesture.scaleMove / gesture.scaleStart) * zoom.currentScale;\n      }\n      if (zoom.scale > gesture.maxRatio) {\n        zoom.scale = (gesture.maxRatio - 1) + (Math.pow( ((zoom.scale - gesture.maxRatio) + 1), 0.5 ));\n      }\n      if (zoom.scale < params.minRatio) {\n        zoom.scale = (params.minRatio + 1) - (Math.pow( ((params.minRatio - zoom.scale) + 1), 0.5 ));\n      }\n      gesture.$imageEl.transform((\"translate3d(0,0,0) scale(\" + (zoom.scale) + \")\"));\n    },\n    onGestureEnd: function onGestureEnd(e) {\n      var swiper = this;\n      var params = swiper.params.zoom;\n      var zoom = swiper.zoom;\n      var gesture = zoom.gesture;\n      if (!Support.gestures) {\n        if (!zoom.fakeGestureTouched || !zoom.fakeGestureMoved) {\n          return;\n        }\n        if (e.type !== 'touchend' || (e.type === 'touchend' && e.changedTouches.length < 2 && !Device.android)) {\n          return;\n        }\n        zoom.fakeGestureTouched = false;\n        zoom.fakeGestureMoved = false;\n      }\n      if (!gesture.$imageEl || gesture.$imageEl.length === 0) { return; }\n      zoom.scale = Math.max(Math.min(zoom.scale, gesture.maxRatio), params.minRatio);\n      gesture.$imageEl.transition(swiper.params.speed).transform((\"translate3d(0,0,0) scale(\" + (zoom.scale) + \")\"));\n      zoom.currentScale = zoom.scale;\n      zoom.isScaling = false;\n      if (zoom.scale === 1) { gesture.$slideEl = undefined; }\n    },\n    onTouchStart: function onTouchStart(e) {\n      var swiper = this;\n      var zoom = swiper.zoom;\n      var gesture = zoom.gesture;\n      var image = zoom.image;\n      if (!gesture.$imageEl || gesture.$imageEl.length === 0) { return; }\n      if (image.isTouched) { return; }\n      if (Device.android) { e.preventDefault(); }\n      image.isTouched = true;\n      image.touchesStart.x = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n      image.touchesStart.y = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n    },\n    onTouchMove: function onTouchMove(e) {\n      var swiper = this;\n      var zoom = swiper.zoom;\n      var gesture = zoom.gesture;\n      var image = zoom.image;\n      var velocity = zoom.velocity;\n      if (!gesture.$imageEl || gesture.$imageEl.length === 0) { return; }\n      swiper.allowClick = false;\n      if (!image.isTouched || !gesture.$slideEl) { return; }\n\n      if (!image.isMoved) {\n        image.width = gesture.$imageEl[0].offsetWidth;\n        image.height = gesture.$imageEl[0].offsetHeight;\n        image.startX = Utils.getTranslate(gesture.$imageWrapEl[0], 'x') || 0;\n        image.startY = Utils.getTranslate(gesture.$imageWrapEl[0], 'y') || 0;\n        gesture.slideWidth = gesture.$slideEl[0].offsetWidth;\n        gesture.slideHeight = gesture.$slideEl[0].offsetHeight;\n        gesture.$imageWrapEl.transition(0);\n        if (swiper.rtl) {\n          image.startX = -image.startX;\n          image.startY = -image.startY;\n        }\n      }\n      // Define if we need image drag\n      var scaledWidth = image.width * zoom.scale;\n      var scaledHeight = image.height * zoom.scale;\n\n      if (scaledWidth < gesture.slideWidth && scaledHeight < gesture.slideHeight) { return; }\n\n      image.minX = Math.min(((gesture.slideWidth / 2) - (scaledWidth / 2)), 0);\n      image.maxX = -image.minX;\n      image.minY = Math.min(((gesture.slideHeight / 2) - (scaledHeight / 2)), 0);\n      image.maxY = -image.minY;\n\n      image.touchesCurrent.x = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;\n      image.touchesCurrent.y = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;\n\n      if (!image.isMoved && !zoom.isScaling) {\n        if (\n          swiper.isHorizontal() &&\n          (\n            (Math.floor(image.minX) === Math.floor(image.startX) && image.touchesCurrent.x < image.touchesStart.x) ||\n            (Math.floor(image.maxX) === Math.floor(image.startX) && image.touchesCurrent.x > image.touchesStart.x)\n          )\n        ) {\n          image.isTouched = false;\n          return;\n        } else if (\n          !swiper.isHorizontal() &&\n          (\n            (Math.floor(image.minY) === Math.floor(image.startY) && image.touchesCurrent.y < image.touchesStart.y) ||\n            (Math.floor(image.maxY) === Math.floor(image.startY) && image.touchesCurrent.y > image.touchesStart.y)\n          )\n        ) {\n          image.isTouched = false;\n          return;\n        }\n      }\n      e.preventDefault();\n      e.stopPropagation();\n\n      image.isMoved = true;\n      image.currentX = (image.touchesCurrent.x - image.touchesStart.x) + image.startX;\n      image.currentY = (image.touchesCurrent.y - image.touchesStart.y) + image.startY;\n\n      if (image.currentX < image.minX) {\n        image.currentX = (image.minX + 1) - (Math.pow( ((image.minX - image.currentX) + 1), 0.8 ));\n      }\n      if (image.currentX > image.maxX) {\n        image.currentX = (image.maxX - 1) + (Math.pow( ((image.currentX - image.maxX) + 1), 0.8 ));\n      }\n\n      if (image.currentY < image.minY) {\n        image.currentY = (image.minY + 1) - (Math.pow( ((image.minY - image.currentY) + 1), 0.8 ));\n      }\n      if (image.currentY > image.maxY) {\n        image.currentY = (image.maxY - 1) + (Math.pow( ((image.currentY - image.maxY) + 1), 0.8 ));\n      }\n\n      // Velocity\n      if (!velocity.prevPositionX) { velocity.prevPositionX = image.touchesCurrent.x; }\n      if (!velocity.prevPositionY) { velocity.prevPositionY = image.touchesCurrent.y; }\n      if (!velocity.prevTime) { velocity.prevTime = Date.now(); }\n      velocity.x = (image.touchesCurrent.x - velocity.prevPositionX) / (Date.now() - velocity.prevTime) / 2;\n      velocity.y = (image.touchesCurrent.y - velocity.prevPositionY) / (Date.now() - velocity.prevTime) / 2;\n      if (Math.abs(image.touchesCurrent.x - velocity.prevPositionX) < 2) { velocity.x = 0; }\n      if (Math.abs(image.touchesCurrent.y - velocity.prevPositionY) < 2) { velocity.y = 0; }\n      velocity.prevPositionX = image.touchesCurrent.x;\n      velocity.prevPositionY = image.touchesCurrent.y;\n      velocity.prevTime = Date.now();\n\n      gesture.$imageWrapEl.transform((\"translate3d(\" + (image.currentX) + \"px, \" + (image.currentY) + \"px,0)\"));\n    },\n    onTouchEnd: function onTouchEnd() {\n      var swiper = this;\n      var zoom = swiper.zoom;\n      var gesture = zoom.gesture;\n      var image = zoom.image;\n      var velocity = zoom.velocity;\n      if (!gesture.$imageEl || gesture.$imageEl.length === 0) { return; }\n      if (!image.isTouched || !image.isMoved) {\n        image.isTouched = false;\n        image.isMoved = false;\n        return;\n      }\n      image.isTouched = false;\n      image.isMoved = false;\n      var momentumDurationX = 300;\n      var momentumDurationY = 300;\n      var momentumDistanceX = velocity.x * momentumDurationX;\n      var newPositionX = image.currentX + momentumDistanceX;\n      var momentumDistanceY = velocity.y * momentumDurationY;\n      var newPositionY = image.currentY + momentumDistanceY;\n\n      // Fix duration\n      if (velocity.x !== 0) { momentumDurationX = Math.abs((newPositionX - image.currentX) / velocity.x); }\n      if (velocity.y !== 0) { momentumDurationY = Math.abs((newPositionY - image.currentY) / velocity.y); }\n      var momentumDuration = Math.max(momentumDurationX, momentumDurationY);\n\n      image.currentX = newPositionX;\n      image.currentY = newPositionY;\n\n      // Define if we need image drag\n      var scaledWidth = image.width * zoom.scale;\n      var scaledHeight = image.height * zoom.scale;\n      image.minX = Math.min(((gesture.slideWidth / 2) - (scaledWidth / 2)), 0);\n      image.maxX = -image.minX;\n      image.minY = Math.min(((gesture.slideHeight / 2) - (scaledHeight / 2)), 0);\n      image.maxY = -image.minY;\n      image.currentX = Math.max(Math.min(image.currentX, image.maxX), image.minX);\n      image.currentY = Math.max(Math.min(image.currentY, image.maxY), image.minY);\n\n      gesture.$imageWrapEl.transition(momentumDuration).transform((\"translate3d(\" + (image.currentX) + \"px, \" + (image.currentY) + \"px,0)\"));\n    },\n    onTransitionEnd: function onTransitionEnd() {\n      var swiper = this;\n      var zoom = swiper.zoom;\n      var gesture = zoom.gesture;\n      if (gesture.$slideEl && swiper.previousIndex !== swiper.activeIndex) {\n        gesture.$imageEl.transform('translate3d(0,0,0) scale(1)');\n        gesture.$imageWrapEl.transform('translate3d(0,0,0)');\n        gesture.$slideEl = undefined;\n        gesture.$imageEl = undefined;\n        gesture.$imageWrapEl = undefined;\n\n        zoom.scale = 1;\n        zoom.currentScale = 1;\n      }\n    },\n    // Toggle Zoom\n    toggle: function toggle(e) {\n      var swiper = this;\n      var zoom = swiper.zoom;\n\n      if (zoom.scale && zoom.scale !== 1) {\n        // Zoom Out\n        zoom.out();\n      } else {\n        // Zoom In\n        zoom.in(e);\n      }\n    },\n    in: function in$1(e) {\n      var swiper = this;\n\n      var zoom = swiper.zoom;\n      var params = swiper.params.zoom;\n      var gesture = zoom.gesture;\n      var image = zoom.image;\n\n      if (!gesture.$slideEl) {\n        gesture.$slideEl = swiper.clickedSlide ? $(swiper.clickedSlide) : swiper.slides.eq(swiper.activeIndex);\n        gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');\n        gesture.$imageWrapEl = gesture.$imageEl.parent((\".\" + (params.containerClass)));\n      }\n      if (!gesture.$imageEl || gesture.$imageEl.length === 0) { return; }\n\n      gesture.$slideEl.addClass((\"\" + (params.zoomedSlideClass)));\n\n      var touchX;\n      var touchY;\n      var offsetX;\n      var offsetY;\n      var diffX;\n      var diffY;\n      var translateX;\n      var translateY;\n      var imageWidth;\n      var imageHeight;\n      var scaledWidth;\n      var scaledHeight;\n      var translateMinX;\n      var translateMinY;\n      var translateMaxX;\n      var translateMaxY;\n      var slideWidth;\n      var slideHeight;\n\n      if (typeof image.touchesStart.x === 'undefined' && e) {\n        touchX = e.type === 'touchend' ? e.changedTouches[0].pageX : e.pageX;\n        touchY = e.type === 'touchend' ? e.changedTouches[0].pageY : e.pageY;\n      } else {\n        touchX = image.touchesStart.x;\n        touchY = image.touchesStart.y;\n      }\n\n      zoom.scale = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n      zoom.currentScale = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n      if (e) {\n        slideWidth = gesture.$slideEl[0].offsetWidth;\n        slideHeight = gesture.$slideEl[0].offsetHeight;\n        offsetX = gesture.$slideEl.offset().left;\n        offsetY = gesture.$slideEl.offset().top;\n        diffX = (offsetX + (slideWidth / 2)) - touchX;\n        diffY = (offsetY + (slideHeight / 2)) - touchY;\n\n        imageWidth = gesture.$imageEl[0].offsetWidth;\n        imageHeight = gesture.$imageEl[0].offsetHeight;\n        scaledWidth = imageWidth * zoom.scale;\n        scaledHeight = imageHeight * zoom.scale;\n\n        translateMinX = Math.min(((slideWidth / 2) - (scaledWidth / 2)), 0);\n        translateMinY = Math.min(((slideHeight / 2) - (scaledHeight / 2)), 0);\n        translateMaxX = -translateMinX;\n        translateMaxY = -translateMinY;\n\n        translateX = diffX * zoom.scale;\n        translateY = diffY * zoom.scale;\n\n        if (translateX < translateMinX) {\n          translateX = translateMinX;\n        }\n        if (translateX > translateMaxX) {\n          translateX = translateMaxX;\n        }\n\n        if (translateY < translateMinY) {\n          translateY = translateMinY;\n        }\n        if (translateY > translateMaxY) {\n          translateY = translateMaxY;\n        }\n      } else {\n        translateX = 0;\n        translateY = 0;\n      }\n      gesture.$imageWrapEl.transition(300).transform((\"translate3d(\" + translateX + \"px, \" + translateY + \"px,0)\"));\n      gesture.$imageEl.transition(300).transform((\"translate3d(0,0,0) scale(\" + (zoom.scale) + \")\"));\n    },\n    out: function out() {\n      var swiper = this;\n\n      var zoom = swiper.zoom;\n      var params = swiper.params.zoom;\n      var gesture = zoom.gesture;\n\n      if (!gesture.$slideEl) {\n        gesture.$slideEl = swiper.clickedSlide ? $(swiper.clickedSlide) : swiper.slides.eq(swiper.activeIndex);\n        gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');\n        gesture.$imageWrapEl = gesture.$imageEl.parent((\".\" + (params.containerClass)));\n      }\n      if (!gesture.$imageEl || gesture.$imageEl.length === 0) { return; }\n\n      zoom.scale = 1;\n      zoom.currentScale = 1;\n      gesture.$imageWrapEl.transition(300).transform('translate3d(0,0,0)');\n      gesture.$imageEl.transition(300).transform('translate3d(0,0,0) scale(1)');\n      gesture.$slideEl.removeClass((\"\" + (params.zoomedSlideClass)));\n      gesture.$slideEl = undefined;\n    },\n    // Attach/Detach Events\n    enable: function enable() {\n      var swiper = this;\n      var zoom = swiper.zoom;\n      if (zoom.enabled) { return; }\n      zoom.enabled = true;\n\n      var passiveListener = swiper.touchEvents.start === 'touchstart' && Support.passiveListener && swiper.params.passiveListeners ? { passive: true, capture: false } : false;\n\n      // Scale image\n      if (Support.gestures) {\n        swiper.$wrapperEl.on('gesturestart', '.swiper-slide', zoom.onGestureStart, passiveListener);\n        swiper.$wrapperEl.on('gesturechange', '.swiper-slide', zoom.onGestureChange, passiveListener);\n        swiper.$wrapperEl.on('gestureend', '.swiper-slide', zoom.onGestureEnd, passiveListener);\n      } else if (swiper.touchEvents.start === 'touchstart') {\n        swiper.$wrapperEl.on(swiper.touchEvents.start, '.swiper-slide', zoom.onGestureStart, passiveListener);\n        swiper.$wrapperEl.on(swiper.touchEvents.move, '.swiper-slide', zoom.onGestureChange, passiveListener);\n        swiper.$wrapperEl.on(swiper.touchEvents.end, '.swiper-slide', zoom.onGestureEnd, passiveListener);\n      }\n\n      // Move image\n      swiper.$wrapperEl.on(swiper.touchEvents.move, (\".\" + (swiper.params.zoom.containerClass)), zoom.onTouchMove);\n    },\n    disable: function disable() {\n      var swiper = this;\n      var zoom = swiper.zoom;\n      if (!zoom.enabled) { return; }\n\n      swiper.zoom.enabled = false;\n\n      var passiveListener = swiper.touchEvents.start === 'touchstart' && Support.passiveListener && swiper.params.passiveListeners ? { passive: true, capture: false } : false;\n\n      // Scale image\n      if (Support.gestures) {\n        swiper.$wrapperEl.off('gesturestart', '.swiper-slide', zoom.onGestureStart, passiveListener);\n        swiper.$wrapperEl.off('gesturechange', '.swiper-slide', zoom.onGestureChange, passiveListener);\n        swiper.$wrapperEl.off('gestureend', '.swiper-slide', zoom.onGestureEnd, passiveListener);\n      } else if (swiper.touchEvents.start === 'touchstart') {\n        swiper.$wrapperEl.off(swiper.touchEvents.start, '.swiper-slide', zoom.onGestureStart, passiveListener);\n        swiper.$wrapperEl.off(swiper.touchEvents.move, '.swiper-slide', zoom.onGestureChange, passiveListener);\n        swiper.$wrapperEl.off(swiper.touchEvents.end, '.swiper-slide', zoom.onGestureEnd, passiveListener);\n      }\n\n      // Move image\n      swiper.$wrapperEl.off(swiper.touchEvents.move, (\".\" + (swiper.params.zoom.containerClass)), zoom.onTouchMove);\n    },\n  };\n\n  var Zoom$1 = {\n    name: 'zoom',\n    params: {\n      zoom: {\n        enabled: false,\n        maxRatio: 3,\n        minRatio: 1,\n        toggle: true,\n        containerClass: 'swiper-zoom-container',\n        zoomedSlideClass: 'swiper-slide-zoomed',\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      var zoom = {\n        enabled: false,\n        scale: 1,\n        currentScale: 1,\n        isScaling: false,\n        gesture: {\n          $slideEl: undefined,\n          slideWidth: undefined,\n          slideHeight: undefined,\n          $imageEl: undefined,\n          $imageWrapEl: undefined,\n          maxRatio: 3,\n        },\n        image: {\n          isTouched: undefined,\n          isMoved: undefined,\n          currentX: undefined,\n          currentY: undefined,\n          minX: undefined,\n          minY: undefined,\n          maxX: undefined,\n          maxY: undefined,\n          width: undefined,\n          height: undefined,\n          startX: undefined,\n          startY: undefined,\n          touchesStart: {},\n          touchesCurrent: {},\n        },\n        velocity: {\n          x: undefined,\n          y: undefined,\n          prevPositionX: undefined,\n          prevPositionY: undefined,\n          prevTime: undefined,\n        },\n      };\n      ('onGestureStart onGestureChange onGestureEnd onTouchStart onTouchMove onTouchEnd onTransitionEnd toggle enable disable in out').split(' ').forEach(function (methodName) {\n        zoom[methodName] = Zoom[methodName].bind(swiper);\n      });\n      Utils.extend(swiper, {\n        zoom: zoom,\n      });\n    },\n    on: {\n      init: function init() {\n        var swiper = this;\n        if (swiper.params.zoom.enabled) {\n          swiper.zoom.enable();\n        }\n      },\n      destroy: function destroy() {\n        var swiper = this;\n        swiper.zoom.disable();\n      },\n      touchStart: function touchStart(e) {\n        var swiper = this;\n        if (!swiper.zoom.enabled) { return; }\n        swiper.zoom.onTouchStart(e);\n      },\n      touchEnd: function touchEnd(e) {\n        var swiper = this;\n        if (!swiper.zoom.enabled) { return; }\n        swiper.zoom.onTouchEnd(e);\n      },\n      doubleTap: function doubleTap(e) {\n        var swiper = this;\n        if (swiper.params.zoom.enabled && swiper.zoom.enabled && swiper.params.zoom.toggle) {\n          swiper.zoom.toggle(e);\n        }\n      },\n      transitionEnd: function transitionEnd() {\n        var swiper = this;\n        if (swiper.zoom.enabled && swiper.params.zoom.enabled) {\n          swiper.zoom.onTransitionEnd();\n        }\n      },\n    },\n  };\n\n  var Lazy = {\n    loadInSlide: function loadInSlide(index, loadInDuplicate) {\n      if ( loadInDuplicate === void 0 ) loadInDuplicate = true;\n\n      var swiper = this;\n      var params = swiper.params.lazy;\n      if (typeof index === 'undefined') { return; }\n      if (swiper.slides.length === 0) { return; }\n      var isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n\n      var $slideEl = isVirtual\n        ? swiper.$wrapperEl.children((\".\" + (swiper.params.slideClass) + \"[data-swiper-slide-index=\\\"\" + index + \"\\\"]\"))\n        : swiper.slides.eq(index);\n\n      var $images = $slideEl.find((\".\" + (params.elementClass) + \":not(.\" + (params.loadedClass) + \"):not(.\" + (params.loadingClass) + \")\"));\n      if ($slideEl.hasClass(params.elementClass) && !$slideEl.hasClass(params.loadedClass) && !$slideEl.hasClass(params.loadingClass)) {\n        $images = $images.add($slideEl[0]);\n      }\n      if ($images.length === 0) { return; }\n\n      $images.each(function (imageIndex, imageEl) {\n        var $imageEl = $(imageEl);\n        $imageEl.addClass(params.loadingClass);\n\n        var background = $imageEl.attr('data-background');\n        var src = $imageEl.attr('data-src');\n        var srcset = $imageEl.attr('data-srcset');\n        var sizes = $imageEl.attr('data-sizes');\n\n        swiper.loadImage($imageEl[0], (src || background), srcset, sizes, false, function () {\n          if (typeof swiper === 'undefined' || swiper === null || !swiper || (swiper && !swiper.params) || swiper.destroyed) { return; }\n          if (background) {\n            $imageEl.css('background-image', (\"url(\\\"\" + background + \"\\\")\"));\n            $imageEl.removeAttr('data-background');\n          } else {\n            if (srcset) {\n              $imageEl.attr('srcset', srcset);\n              $imageEl.removeAttr('data-srcset');\n            }\n            if (sizes) {\n              $imageEl.attr('sizes', sizes);\n              $imageEl.removeAttr('data-sizes');\n            }\n            if (src) {\n              $imageEl.attr('src', src);\n              $imageEl.removeAttr('data-src');\n            }\n          }\n\n          $imageEl.addClass(params.loadedClass).removeClass(params.loadingClass);\n          $slideEl.find((\".\" + (params.preloaderClass))).remove();\n          if (swiper.params.loop && loadInDuplicate) {\n            var slideOriginalIndex = $slideEl.attr('data-swiper-slide-index');\n            if ($slideEl.hasClass(swiper.params.slideDuplicateClass)) {\n              var originalSlide = swiper.$wrapperEl.children((\"[data-swiper-slide-index=\\\"\" + slideOriginalIndex + \"\\\"]:not(.\" + (swiper.params.slideDuplicateClass) + \")\"));\n              swiper.lazy.loadInSlide(originalSlide.index(), false);\n            } else {\n              var duplicatedSlide = swiper.$wrapperEl.children((\".\" + (swiper.params.slideDuplicateClass) + \"[data-swiper-slide-index=\\\"\" + slideOriginalIndex + \"\\\"]\"));\n              swiper.lazy.loadInSlide(duplicatedSlide.index(), false);\n            }\n          }\n          swiper.emit('lazyImageReady', $slideEl[0], $imageEl[0]);\n        });\n\n        swiper.emit('lazyImageLoad', $slideEl[0], $imageEl[0]);\n      });\n    },\n    load: function load() {\n      var swiper = this;\n      var $wrapperEl = swiper.$wrapperEl;\n      var swiperParams = swiper.params;\n      var slides = swiper.slides;\n      var activeIndex = swiper.activeIndex;\n      var isVirtual = swiper.virtual && swiperParams.virtual.enabled;\n      var params = swiperParams.lazy;\n\n      var slidesPerView = swiperParams.slidesPerView;\n      if (slidesPerView === 'auto') {\n        slidesPerView = 0;\n      }\n\n      function slideExist(index) {\n        if (isVirtual) {\n          if ($wrapperEl.children((\".\" + (swiperParams.slideClass) + \"[data-swiper-slide-index=\\\"\" + index + \"\\\"]\")).length) {\n            return true;\n          }\n        } else if (slides[index]) { return true; }\n        return false;\n      }\n      function slideIndex(slideEl) {\n        if (isVirtual) {\n          return $(slideEl).attr('data-swiper-slide-index');\n        }\n        return $(slideEl).index();\n      }\n\n      if (!swiper.lazy.initialImageLoaded) { swiper.lazy.initialImageLoaded = true; }\n      if (swiper.params.watchSlidesVisibility) {\n        $wrapperEl.children((\".\" + (swiperParams.slideVisibleClass))).each(function (elIndex, slideEl) {\n          var index = isVirtual ? $(slideEl).attr('data-swiper-slide-index') : $(slideEl).index();\n          swiper.lazy.loadInSlide(index);\n        });\n      } else if (slidesPerView > 1) {\n        for (var i = activeIndex; i < activeIndex + slidesPerView; i += 1) {\n          if (slideExist(i)) { swiper.lazy.loadInSlide(i); }\n        }\n      } else {\n        swiper.lazy.loadInSlide(activeIndex);\n      }\n      if (params.loadPrevNext) {\n        if (slidesPerView > 1 || (params.loadPrevNextAmount && params.loadPrevNextAmount > 1)) {\n          var amount = params.loadPrevNextAmount;\n          var spv = slidesPerView;\n          var maxIndex = Math.min(activeIndex + spv + Math.max(amount, spv), slides.length);\n          var minIndex = Math.max(activeIndex - Math.max(spv, amount), 0);\n          // Next Slides\n          for (var i$1 = activeIndex + slidesPerView; i$1 < maxIndex; i$1 += 1) {\n            if (slideExist(i$1)) { swiper.lazy.loadInSlide(i$1); }\n          }\n          // Prev Slides\n          for (var i$2 = minIndex; i$2 < activeIndex; i$2 += 1) {\n            if (slideExist(i$2)) { swiper.lazy.loadInSlide(i$2); }\n          }\n        } else {\n          var nextSlide = $wrapperEl.children((\".\" + (swiperParams.slideNextClass)));\n          if (nextSlide.length > 0) { swiper.lazy.loadInSlide(slideIndex(nextSlide)); }\n\n          var prevSlide = $wrapperEl.children((\".\" + (swiperParams.slidePrevClass)));\n          if (prevSlide.length > 0) { swiper.lazy.loadInSlide(slideIndex(prevSlide)); }\n        }\n      }\n    },\n  };\n\n  var Lazy$1 = {\n    name: 'lazy',\n    params: {\n      lazy: {\n        enabled: false,\n        loadPrevNext: false,\n        loadPrevNextAmount: 1,\n        loadOnTransitionStart: false,\n\n        elementClass: 'swiper-lazy',\n        loadingClass: 'swiper-lazy-loading',\n        loadedClass: 'swiper-lazy-loaded',\n        preloaderClass: 'swiper-lazy-preloader',\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        lazy: {\n          initialImageLoaded: false,\n          load: Lazy.load.bind(swiper),\n          loadInSlide: Lazy.loadInSlide.bind(swiper),\n        },\n      });\n    },\n    on: {\n      beforeInit: function beforeInit() {\n        var swiper = this;\n        if (swiper.params.lazy.enabled && swiper.params.preloadImages) {\n          swiper.params.preloadImages = false;\n        }\n      },\n      init: function init() {\n        var swiper = this;\n        if (swiper.params.lazy.enabled && !swiper.params.loop && swiper.params.initialSlide === 0) {\n          swiper.lazy.load();\n        }\n      },\n      scroll: function scroll() {\n        var swiper = this;\n        if (swiper.params.freeMode && !swiper.params.freeModeSticky) {\n          swiper.lazy.load();\n        }\n      },\n      resize: function resize() {\n        var swiper = this;\n        if (swiper.params.lazy.enabled) {\n          swiper.lazy.load();\n        }\n      },\n      scrollbarDragMove: function scrollbarDragMove() {\n        var swiper = this;\n        if (swiper.params.lazy.enabled) {\n          swiper.lazy.load();\n        }\n      },\n      transitionStart: function transitionStart() {\n        var swiper = this;\n        if (swiper.params.lazy.enabled) {\n          if (swiper.params.lazy.loadOnTransitionStart || (!swiper.params.lazy.loadOnTransitionStart && !swiper.lazy.initialImageLoaded)) {\n            swiper.lazy.load();\n          }\n        }\n      },\n      transitionEnd: function transitionEnd() {\n        var swiper = this;\n        if (swiper.params.lazy.enabled && !swiper.params.lazy.loadOnTransitionStart) {\n          swiper.lazy.load();\n        }\n      },\n    },\n  };\n\n  /* eslint no-bitwise: [\"error\", { \"allow\": [\">>\"] }] */\n\n  var Controller = {\n    LinearSpline: function LinearSpline(x, y) {\n      var binarySearch = (function search() {\n        var maxIndex;\n        var minIndex;\n        var guess;\n        return function (array, val) {\n          minIndex = -1;\n          maxIndex = array.length;\n          while (maxIndex - minIndex > 1) {\n            guess = maxIndex + minIndex >> 1;\n            if (array[guess] <= val) {\n              minIndex = guess;\n            } else {\n              maxIndex = guess;\n            }\n          }\n          return maxIndex;\n        };\n      }());\n      this.x = x;\n      this.y = y;\n      this.lastIndex = x.length - 1;\n      // Given an x value (x2), return the expected y2 value:\n      // (x1,y1) is the known point before given value,\n      // (x3,y3) is the known point after given value.\n      var i1;\n      var i3;\n\n      this.interpolate = function interpolate(x2) {\n        if (!x2) { return 0; }\n\n        // Get the indexes of x1 and x3 (the array indexes before and after given x2):\n        i3 = binarySearch(this.x, x2);\n        i1 = i3 - 1;\n\n        // We have our indexes i1 & i3, so we can calculate already:\n        // y2 := ((x2−x1) × (y3−y1)) ÷ (x3−x1) + y1\n        return (((x2 - this.x[i1]) * (this.y[i3] - this.y[i1])) / (this.x[i3] - this.x[i1])) + this.y[i1];\n      };\n      return this;\n    },\n    // xxx: for now i will just save one spline function to to\n    getInterpolateFunction: function getInterpolateFunction(c) {\n      var swiper = this;\n      if (!swiper.controller.spline) {\n        swiper.controller.spline = swiper.params.loop ?\n          new Controller.LinearSpline(swiper.slidesGrid, c.slidesGrid) :\n          new Controller.LinearSpline(swiper.snapGrid, c.snapGrid);\n      }\n    },\n    setTranslate: function setTranslate(setTranslate$1, byController) {\n      var swiper = this;\n      var controlled = swiper.controller.control;\n      var multiplier;\n      var controlledTranslate;\n      function setControlledTranslate(c) {\n        // this will create an Interpolate function based on the snapGrids\n        // x is the Grid of the scrolled scroller and y will be the controlled scroller\n        // it makes sense to create this only once and recall it for the interpolation\n        // the function does a lot of value caching for performance\n        var translate = swiper.rtlTranslate ? -swiper.translate : swiper.translate;\n        if (swiper.params.controller.by === 'slide') {\n          swiper.controller.getInterpolateFunction(c);\n          // i am not sure why the values have to be multiplicated this way, tried to invert the snapGrid\n          // but it did not work out\n          controlledTranslate = -swiper.controller.spline.interpolate(-translate);\n        }\n\n        if (!controlledTranslate || swiper.params.controller.by === 'container') {\n          multiplier = (c.maxTranslate() - c.minTranslate()) / (swiper.maxTranslate() - swiper.minTranslate());\n          controlledTranslate = ((translate - swiper.minTranslate()) * multiplier) + c.minTranslate();\n        }\n\n        if (swiper.params.controller.inverse) {\n          controlledTranslate = c.maxTranslate() - controlledTranslate;\n        }\n        c.updateProgress(controlledTranslate);\n        c.setTranslate(controlledTranslate, swiper);\n        c.updateActiveIndex();\n        c.updateSlidesClasses();\n      }\n      if (Array.isArray(controlled)) {\n        for (var i = 0; i < controlled.length; i += 1) {\n          if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n            setControlledTranslate(controlled[i]);\n          }\n        }\n      } else if (controlled instanceof Swiper && byController !== controlled) {\n        setControlledTranslate(controlled);\n      }\n    },\n    setTransition: function setTransition(duration, byController) {\n      var swiper = this;\n      var controlled = swiper.controller.control;\n      var i;\n      function setControlledTransition(c) {\n        c.setTransition(duration, swiper);\n        if (duration !== 0) {\n          c.transitionStart();\n          c.$wrapperEl.transitionEnd(function () {\n            if (!controlled) { return; }\n            if (c.params.loop && swiper.params.controller.by === 'slide') {\n              c.loopFix();\n            }\n            c.transitionEnd();\n          });\n        }\n      }\n      if (Array.isArray(controlled)) {\n        for (i = 0; i < controlled.length; i += 1) {\n          if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n            setControlledTransition(controlled[i]);\n          }\n        }\n      } else if (controlled instanceof Swiper && byController !== controlled) {\n        setControlledTransition(controlled);\n      }\n    },\n  };\n  var Controller$1 = {\n    name: 'controller',\n    params: {\n      controller: {\n        control: undefined,\n        inverse: false,\n        by: 'slide', // or 'container'\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        controller: {\n          control: swiper.params.controller.control,\n          getInterpolateFunction: Controller.getInterpolateFunction.bind(swiper),\n          setTranslate: Controller.setTranslate.bind(swiper),\n          setTransition: Controller.setTransition.bind(swiper),\n        },\n      });\n    },\n    on: {\n      update: function update() {\n        var swiper = this;\n        if (!swiper.controller.control) { return; }\n        if (swiper.controller.spline) {\n          swiper.controller.spline = undefined;\n          delete swiper.controller.spline;\n        }\n      },\n      resize: function resize() {\n        var swiper = this;\n        if (!swiper.controller.control) { return; }\n        if (swiper.controller.spline) {\n          swiper.controller.spline = undefined;\n          delete swiper.controller.spline;\n        }\n      },\n      observerUpdate: function observerUpdate() {\n        var swiper = this;\n        if (!swiper.controller.control) { return; }\n        if (swiper.controller.spline) {\n          swiper.controller.spline = undefined;\n          delete swiper.controller.spline;\n        }\n      },\n      setTranslate: function setTranslate(translate, byController) {\n        var swiper = this;\n        if (!swiper.controller.control) { return; }\n        swiper.controller.setTranslate(translate, byController);\n      },\n      setTransition: function setTransition(duration, byController) {\n        var swiper = this;\n        if (!swiper.controller.control) { return; }\n        swiper.controller.setTransition(duration, byController);\n      },\n    },\n  };\n\n  var a11y = {\n    makeElFocusable: function makeElFocusable($el) {\n      $el.attr('tabIndex', '0');\n      return $el;\n    },\n    addElRole: function addElRole($el, role) {\n      $el.attr('role', role);\n      return $el;\n    },\n    addElLabel: function addElLabel($el, label) {\n      $el.attr('aria-label', label);\n      return $el;\n    },\n    disableEl: function disableEl($el) {\n      $el.attr('aria-disabled', true);\n      return $el;\n    },\n    enableEl: function enableEl($el) {\n      $el.attr('aria-disabled', false);\n      return $el;\n    },\n    onEnterKey: function onEnterKey(e) {\n      var swiper = this;\n      var params = swiper.params.a11y;\n      if (e.keyCode !== 13) { return; }\n      var $targetEl = $(e.target);\n      if (swiper.navigation && swiper.navigation.$nextEl && $targetEl.is(swiper.navigation.$nextEl)) {\n        if (!(swiper.isEnd && !swiper.params.loop)) {\n          swiper.slideNext();\n        }\n        if (swiper.isEnd) {\n          swiper.a11y.notify(params.lastSlideMessage);\n        } else {\n          swiper.a11y.notify(params.nextSlideMessage);\n        }\n      }\n      if (swiper.navigation && swiper.navigation.$prevEl && $targetEl.is(swiper.navigation.$prevEl)) {\n        if (!(swiper.isBeginning && !swiper.params.loop)) {\n          swiper.slidePrev();\n        }\n        if (swiper.isBeginning) {\n          swiper.a11y.notify(params.firstSlideMessage);\n        } else {\n          swiper.a11y.notify(params.prevSlideMessage);\n        }\n      }\n      if (swiper.pagination && $targetEl.is((\".\" + (swiper.params.pagination.bulletClass)))) {\n        $targetEl[0].click();\n      }\n    },\n    notify: function notify(message) {\n      var swiper = this;\n      var notification = swiper.a11y.liveRegion;\n      if (notification.length === 0) { return; }\n      notification.html('');\n      notification.html(message);\n    },\n    updateNavigation: function updateNavigation() {\n      var swiper = this;\n\n      if (swiper.params.loop) { return; }\n      var ref = swiper.navigation;\n      var $nextEl = ref.$nextEl;\n      var $prevEl = ref.$prevEl;\n\n      if ($prevEl && $prevEl.length > 0) {\n        if (swiper.isBeginning) {\n          swiper.a11y.disableEl($prevEl);\n        } else {\n          swiper.a11y.enableEl($prevEl);\n        }\n      }\n      if ($nextEl && $nextEl.length > 0) {\n        if (swiper.isEnd) {\n          swiper.a11y.disableEl($nextEl);\n        } else {\n          swiper.a11y.enableEl($nextEl);\n        }\n      }\n    },\n    updatePagination: function updatePagination() {\n      var swiper = this;\n      var params = swiper.params.a11y;\n      if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n        swiper.pagination.bullets.each(function (bulletIndex, bulletEl) {\n          var $bulletEl = $(bulletEl);\n          swiper.a11y.makeElFocusable($bulletEl);\n          swiper.a11y.addElRole($bulletEl, 'button');\n          swiper.a11y.addElLabel($bulletEl, params.paginationBulletMessage.replace(/{{index}}/, $bulletEl.index() + 1));\n        });\n      }\n    },\n    init: function init() {\n      var swiper = this;\n\n      swiper.$el.append(swiper.a11y.liveRegion);\n\n      // Navigation\n      var params = swiper.params.a11y;\n      var $nextEl;\n      var $prevEl;\n      if (swiper.navigation && swiper.navigation.$nextEl) {\n        $nextEl = swiper.navigation.$nextEl;\n      }\n      if (swiper.navigation && swiper.navigation.$prevEl) {\n        $prevEl = swiper.navigation.$prevEl;\n      }\n      if ($nextEl) {\n        swiper.a11y.makeElFocusable($nextEl);\n        swiper.a11y.addElRole($nextEl, 'button');\n        swiper.a11y.addElLabel($nextEl, params.nextSlideMessage);\n        $nextEl.on('keydown', swiper.a11y.onEnterKey);\n      }\n      if ($prevEl) {\n        swiper.a11y.makeElFocusable($prevEl);\n        swiper.a11y.addElRole($prevEl, 'button');\n        swiper.a11y.addElLabel($prevEl, params.prevSlideMessage);\n        $prevEl.on('keydown', swiper.a11y.onEnterKey);\n      }\n\n      // Pagination\n      if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n        swiper.pagination.$el.on('keydown', (\".\" + (swiper.params.pagination.bulletClass)), swiper.a11y.onEnterKey);\n      }\n    },\n    destroy: function destroy() {\n      var swiper = this;\n      if (swiper.a11y.liveRegion && swiper.a11y.liveRegion.length > 0) { swiper.a11y.liveRegion.remove(); }\n\n      var $nextEl;\n      var $prevEl;\n      if (swiper.navigation && swiper.navigation.$nextEl) {\n        $nextEl = swiper.navigation.$nextEl;\n      }\n      if (swiper.navigation && swiper.navigation.$prevEl) {\n        $prevEl = swiper.navigation.$prevEl;\n      }\n      if ($nextEl) {\n        $nextEl.off('keydown', swiper.a11y.onEnterKey);\n      }\n      if ($prevEl) {\n        $prevEl.off('keydown', swiper.a11y.onEnterKey);\n      }\n\n      // Pagination\n      if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n        swiper.pagination.$el.off('keydown', (\".\" + (swiper.params.pagination.bulletClass)), swiper.a11y.onEnterKey);\n      }\n    },\n  };\n  var A11y = {\n    name: 'a11y',\n    params: {\n      a11y: {\n        enabled: true,\n        notificationClass: 'swiper-notification',\n        prevSlideMessage: 'Previous slide',\n        nextSlideMessage: 'Next slide',\n        firstSlideMessage: 'This is the first slide',\n        lastSlideMessage: 'This is the last slide',\n        paginationBulletMessage: 'Go to slide {{index}}',\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        a11y: {\n          liveRegion: $((\"<span class=\\\"\" + (swiper.params.a11y.notificationClass) + \"\\\" aria-live=\\\"assertive\\\" aria-atomic=\\\"true\\\"></span>\")),\n        },\n      });\n      Object.keys(a11y).forEach(function (methodName) {\n        swiper.a11y[methodName] = a11y[methodName].bind(swiper);\n      });\n    },\n    on: {\n      init: function init() {\n        var swiper = this;\n        if (!swiper.params.a11y.enabled) { return; }\n        swiper.a11y.init();\n        swiper.a11y.updateNavigation();\n      },\n      toEdge: function toEdge() {\n        var swiper = this;\n        if (!swiper.params.a11y.enabled) { return; }\n        swiper.a11y.updateNavigation();\n      },\n      fromEdge: function fromEdge() {\n        var swiper = this;\n        if (!swiper.params.a11y.enabled) { return; }\n        swiper.a11y.updateNavigation();\n      },\n      paginationUpdate: function paginationUpdate() {\n        var swiper = this;\n        if (!swiper.params.a11y.enabled) { return; }\n        swiper.a11y.updatePagination();\n      },\n      destroy: function destroy() {\n        var swiper = this;\n        if (!swiper.params.a11y.enabled) { return; }\n        swiper.a11y.destroy();\n      },\n    },\n  };\n\n  var History = {\n    init: function init() {\n      var swiper = this;\n      if (!swiper.params.history) { return; }\n      if (!win.history || !win.history.pushState) {\n        swiper.params.history.enabled = false;\n        swiper.params.hashNavigation.enabled = true;\n        return;\n      }\n      var history = swiper.history;\n      history.initialized = true;\n      history.paths = History.getPathValues();\n      if (!history.paths.key && !history.paths.value) { return; }\n      history.scrollToSlide(0, history.paths.value, swiper.params.runCallbacksOnInit);\n      if (!swiper.params.history.replaceState) {\n        win.addEventListener('popstate', swiper.history.setHistoryPopState);\n      }\n    },\n    destroy: function destroy() {\n      var swiper = this;\n      if (!swiper.params.history.replaceState) {\n        win.removeEventListener('popstate', swiper.history.setHistoryPopState);\n      }\n    },\n    setHistoryPopState: function setHistoryPopState() {\n      var swiper = this;\n      swiper.history.paths = History.getPathValues();\n      swiper.history.scrollToSlide(swiper.params.speed, swiper.history.paths.value, false);\n    },\n    getPathValues: function getPathValues() {\n      var pathArray = win.location.pathname.slice(1).split('/').filter(function (part) { return part !== ''; });\n      var total = pathArray.length;\n      var key = pathArray[total - 2];\n      var value = pathArray[total - 1];\n      return { key: key, value: value };\n    },\n    setHistory: function setHistory(key, index) {\n      var swiper = this;\n      if (!swiper.history.initialized || !swiper.params.history.enabled) { return; }\n      var slide = swiper.slides.eq(index);\n      var value = History.slugify(slide.attr('data-history'));\n      if (!win.location.pathname.includes(key)) {\n        value = key + \"/\" + value;\n      }\n      var currentState = win.history.state;\n      if (currentState && currentState.value === value) {\n        return;\n      }\n      if (swiper.params.history.replaceState) {\n        win.history.replaceState({ value: value }, null, value);\n      } else {\n        win.history.pushState({ value: value }, null, value);\n      }\n    },\n    slugify: function slugify(text) {\n      return text.toString().toLowerCase()\n        .replace(/\\s+/g, '-')\n        .replace(/[^\\w-]+/g, '')\n        .replace(/--+/g, '-')\n        .replace(/^-+/, '')\n        .replace(/-+$/, '');\n    },\n    scrollToSlide: function scrollToSlide(speed, value, runCallbacks) {\n      var swiper = this;\n      if (value) {\n        for (var i = 0, length = swiper.slides.length; i < length; i += 1) {\n          var slide = swiper.slides.eq(i);\n          var slideHistory = History.slugify(slide.attr('data-history'));\n          if (slideHistory === value && !slide.hasClass(swiper.params.slideDuplicateClass)) {\n            var index = slide.index();\n            swiper.slideTo(index, speed, runCallbacks);\n          }\n        }\n      } else {\n        swiper.slideTo(0, speed, runCallbacks);\n      }\n    },\n  };\n\n  var History$1 = {\n    name: 'history',\n    params: {\n      history: {\n        enabled: false,\n        replaceState: false,\n        key: 'slides',\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        history: {\n          init: History.init.bind(swiper),\n          setHistory: History.setHistory.bind(swiper),\n          setHistoryPopState: History.setHistoryPopState.bind(swiper),\n          scrollToSlide: History.scrollToSlide.bind(swiper),\n          destroy: History.destroy.bind(swiper),\n        },\n      });\n    },\n    on: {\n      init: function init() {\n        var swiper = this;\n        if (swiper.params.history.enabled) {\n          swiper.history.init();\n        }\n      },\n      destroy: function destroy() {\n        var swiper = this;\n        if (swiper.params.history.enabled) {\n          swiper.history.destroy();\n        }\n      },\n      transitionEnd: function transitionEnd() {\n        var swiper = this;\n        if (swiper.history.initialized) {\n          swiper.history.setHistory(swiper.params.history.key, swiper.activeIndex);\n        }\n      },\n    },\n  };\n\n  var HashNavigation = {\n    onHashCange: function onHashCange() {\n      var swiper = this;\n      var newHash = doc.location.hash.replace('#', '');\n      var activeSlideHash = swiper.slides.eq(swiper.activeIndex).attr('data-hash');\n      if (newHash !== activeSlideHash) {\n        swiper.slideTo(swiper.$wrapperEl.children((\".\" + (swiper.params.slideClass) + \"[data-hash=\\\"\" + newHash + \"\\\"]\")).index());\n      }\n    },\n    setHash: function setHash() {\n      var swiper = this;\n      if (!swiper.hashNavigation.initialized || !swiper.params.hashNavigation.enabled) { return; }\n      if (swiper.params.hashNavigation.replaceState && win.history && win.history.replaceState) {\n        win.history.replaceState(null, null, ((\"#\" + (swiper.slides.eq(swiper.activeIndex).attr('data-hash'))) || ''));\n      } else {\n        var slide = swiper.slides.eq(swiper.activeIndex);\n        var hash = slide.attr('data-hash') || slide.attr('data-history');\n        doc.location.hash = hash || '';\n      }\n    },\n    init: function init() {\n      var swiper = this;\n      if (!swiper.params.hashNavigation.enabled || (swiper.params.history && swiper.params.history.enabled)) { return; }\n      swiper.hashNavigation.initialized = true;\n      var hash = doc.location.hash.replace('#', '');\n      if (hash) {\n        var speed = 0;\n        for (var i = 0, length = swiper.slides.length; i < length; i += 1) {\n          var slide = swiper.slides.eq(i);\n          var slideHash = slide.attr('data-hash') || slide.attr('data-history');\n          if (slideHash === hash && !slide.hasClass(swiper.params.slideDuplicateClass)) {\n            var index = slide.index();\n            swiper.slideTo(index, speed, swiper.params.runCallbacksOnInit, true);\n          }\n        }\n      }\n      if (swiper.params.hashNavigation.watchState) {\n        $(win).on('hashchange', swiper.hashNavigation.onHashCange);\n      }\n    },\n    destroy: function destroy() {\n      var swiper = this;\n      if (swiper.params.hashNavigation.watchState) {\n        $(win).off('hashchange', swiper.hashNavigation.onHashCange);\n      }\n    },\n  };\n  var HashNavigation$1 = {\n    name: 'hash-navigation',\n    params: {\n      hashNavigation: {\n        enabled: false,\n        replaceState: false,\n        watchState: false,\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        hashNavigation: {\n          initialized: false,\n          init: HashNavigation.init.bind(swiper),\n          destroy: HashNavigation.destroy.bind(swiper),\n          setHash: HashNavigation.setHash.bind(swiper),\n          onHashCange: HashNavigation.onHashCange.bind(swiper),\n        },\n      });\n    },\n    on: {\n      init: function init() {\n        var swiper = this;\n        if (swiper.params.hashNavigation.enabled) {\n          swiper.hashNavigation.init();\n        }\n      },\n      destroy: function destroy() {\n        var swiper = this;\n        if (swiper.params.hashNavigation.enabled) {\n          swiper.hashNavigation.destroy();\n        }\n      },\n      transitionEnd: function transitionEnd() {\n        var swiper = this;\n        if (swiper.hashNavigation.initialized) {\n          swiper.hashNavigation.setHash();\n        }\n      },\n    },\n  };\n\n  /* eslint no-underscore-dangle: \"off\" */\n\n  var Autoplay = {\n    run: function run() {\n      var swiper = this;\n      var $activeSlideEl = swiper.slides.eq(swiper.activeIndex);\n      var delay = swiper.params.autoplay.delay;\n      if ($activeSlideEl.attr('data-swiper-autoplay')) {\n        delay = $activeSlideEl.attr('data-swiper-autoplay') || swiper.params.autoplay.delay;\n      }\n      swiper.autoplay.timeout = Utils.nextTick(function () {\n        if (swiper.params.autoplay.reverseDirection) {\n          if (swiper.params.loop) {\n            swiper.loopFix();\n            swiper.slidePrev(swiper.params.speed, true, true);\n            swiper.emit('autoplay');\n          } else if (!swiper.isBeginning) {\n            swiper.slidePrev(swiper.params.speed, true, true);\n            swiper.emit('autoplay');\n          } else if (!swiper.params.autoplay.stopOnLastSlide) {\n            swiper.slideTo(swiper.slides.length - 1, swiper.params.speed, true, true);\n            swiper.emit('autoplay');\n          } else {\n            swiper.autoplay.stop();\n          }\n        } else if (swiper.params.loop) {\n          swiper.loopFix();\n          swiper.slideNext(swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else if (!swiper.isEnd) {\n          swiper.slideNext(swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else if (!swiper.params.autoplay.stopOnLastSlide) {\n          swiper.slideTo(0, swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else {\n          swiper.autoplay.stop();\n        }\n      }, delay);\n    },\n    start: function start() {\n      var swiper = this;\n      if (typeof swiper.autoplay.timeout !== 'undefined') { return false; }\n      if (swiper.autoplay.running) { return false; }\n      swiper.autoplay.running = true;\n      swiper.emit('autoplayStart');\n      swiper.autoplay.run();\n      return true;\n    },\n    stop: function stop() {\n      var swiper = this;\n      if (!swiper.autoplay.running) { return false; }\n      if (typeof swiper.autoplay.timeout === 'undefined') { return false; }\n\n      if (swiper.autoplay.timeout) {\n        clearTimeout(swiper.autoplay.timeout);\n        swiper.autoplay.timeout = undefined;\n      }\n      swiper.autoplay.running = false;\n      swiper.emit('autoplayStop');\n      return true;\n    },\n    pause: function pause(speed) {\n      var swiper = this;\n      if (!swiper.autoplay.running) { return; }\n      if (swiper.autoplay.paused) { return; }\n      if (swiper.autoplay.timeout) { clearTimeout(swiper.autoplay.timeout); }\n      swiper.autoplay.paused = true;\n      if (speed === 0 || !swiper.params.autoplay.waitForTransition) {\n        swiper.autoplay.paused = false;\n        swiper.autoplay.run();\n      } else {\n        swiper.$wrapperEl[0].addEventListener('transitionend', swiper.autoplay.onTransitionEnd);\n        swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.autoplay.onTransitionEnd);\n      }\n    },\n  };\n\n  var Autoplay$1 = {\n    name: 'autoplay',\n    params: {\n      autoplay: {\n        enabled: false,\n        delay: 3000,\n        waitForTransition: true,\n        disableOnInteraction: true,\n        stopOnLastSlide: false,\n        reverseDirection: false,\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        autoplay: {\n          running: false,\n          paused: false,\n          run: Autoplay.run.bind(swiper),\n          start: Autoplay.start.bind(swiper),\n          stop: Autoplay.stop.bind(swiper),\n          pause: Autoplay.pause.bind(swiper),\n          onTransitionEnd: function onTransitionEnd(e) {\n            if (!swiper || swiper.destroyed || !swiper.$wrapperEl) { return; }\n            if (e.target !== this) { return; }\n            swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.autoplay.onTransitionEnd);\n            swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.autoplay.onTransitionEnd);\n            swiper.autoplay.paused = false;\n            if (!swiper.autoplay.running) {\n              swiper.autoplay.stop();\n            } else {\n              swiper.autoplay.run();\n            }\n          },\n        },\n      });\n    },\n    on: {\n      init: function init() {\n        var swiper = this;\n        if (swiper.params.autoplay.enabled) {\n          swiper.autoplay.start();\n        }\n      },\n      beforeTransitionStart: function beforeTransitionStart(speed, internal) {\n        var swiper = this;\n        if (swiper.autoplay.running) {\n          if (internal || !swiper.params.autoplay.disableOnInteraction) {\n            swiper.autoplay.pause(speed);\n          } else {\n            swiper.autoplay.stop();\n          }\n        }\n      },\n      sliderFirstMove: function sliderFirstMove() {\n        var swiper = this;\n        if (swiper.autoplay.running) {\n          if (swiper.params.autoplay.disableOnInteraction) {\n            swiper.autoplay.stop();\n          } else {\n            swiper.autoplay.pause();\n          }\n        }\n      },\n      destroy: function destroy() {\n        var swiper = this;\n        if (swiper.autoplay.running) {\n          swiper.autoplay.stop();\n        }\n      },\n    },\n  };\n\n  var Fade = {\n    setTranslate: function setTranslate() {\n      var swiper = this;\n      var slides = swiper.slides;\n      for (var i = 0; i < slides.length; i += 1) {\n        var $slideEl = swiper.slides.eq(i);\n        var offset = $slideEl[0].swiperSlideOffset;\n        var tx = -offset;\n        if (!swiper.params.virtualTranslate) { tx -= swiper.translate; }\n        var ty = 0;\n        if (!swiper.isHorizontal()) {\n          ty = tx;\n          tx = 0;\n        }\n        var slideOpacity = swiper.params.fadeEffect.crossFade ?\n          Math.max(1 - Math.abs($slideEl[0].progress), 0) :\n          1 + Math.min(Math.max($slideEl[0].progress, -1), 0);\n        $slideEl\n          .css({\n            opacity: slideOpacity,\n          })\n          .transform((\"translate3d(\" + tx + \"px, \" + ty + \"px, 0px)\"));\n      }\n    },\n    setTransition: function setTransition(duration) {\n      var swiper = this;\n      var slides = swiper.slides;\n      var $wrapperEl = swiper.$wrapperEl;\n      slides.transition(duration);\n      if (swiper.params.virtualTranslate && duration !== 0) {\n        var eventTriggered = false;\n        slides.transitionEnd(function () {\n          if (eventTriggered) { return; }\n          if (!swiper || swiper.destroyed) { return; }\n          eventTriggered = true;\n          swiper.animating = false;\n          var triggerEvents = ['webkitTransitionEnd', 'transitionend'];\n          for (var i = 0; i < triggerEvents.length; i += 1) {\n            $wrapperEl.trigger(triggerEvents[i]);\n          }\n        });\n      }\n    },\n  };\n\n  var EffectFade = {\n    name: 'effect-fade',\n    params: {\n      fadeEffect: {\n        crossFade: false,\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        fadeEffect: {\n          setTranslate: Fade.setTranslate.bind(swiper),\n          setTransition: Fade.setTransition.bind(swiper),\n        },\n      });\n    },\n    on: {\n      beforeInit: function beforeInit() {\n        var swiper = this;\n        if (swiper.params.effect !== 'fade') { return; }\n        swiper.classNames.push(((swiper.params.containerModifierClass) + \"fade\"));\n        var overwriteParams = {\n          slidesPerView: 1,\n          slidesPerColumn: 1,\n          slidesPerGroup: 1,\n          watchSlidesProgress: true,\n          spaceBetween: 0,\n          virtualTranslate: true,\n        };\n        Utils.extend(swiper.params, overwriteParams);\n        Utils.extend(swiper.originalParams, overwriteParams);\n      },\n      setTranslate: function setTranslate() {\n        var swiper = this;\n        if (swiper.params.effect !== 'fade') { return; }\n        swiper.fadeEffect.setTranslate();\n      },\n      setTransition: function setTransition(duration) {\n        var swiper = this;\n        if (swiper.params.effect !== 'fade') { return; }\n        swiper.fadeEffect.setTransition(duration);\n      },\n    },\n  };\n\n  var Cube = {\n    setTranslate: function setTranslate() {\n      var swiper = this;\n      var $el = swiper.$el;\n      var $wrapperEl = swiper.$wrapperEl;\n      var slides = swiper.slides;\n      var swiperWidth = swiper.width;\n      var swiperHeight = swiper.height;\n      var rtl = swiper.rtlTranslate;\n      var swiperSize = swiper.size;\n      var params = swiper.params.cubeEffect;\n      var isHorizontal = swiper.isHorizontal();\n      var isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n      var wrapperRotate = 0;\n      var $cubeShadowEl;\n      if (params.shadow) {\n        if (isHorizontal) {\n          $cubeShadowEl = $wrapperEl.find('.swiper-cube-shadow');\n          if ($cubeShadowEl.length === 0) {\n            $cubeShadowEl = $('<div class=\"swiper-cube-shadow\"></div>');\n            $wrapperEl.append($cubeShadowEl);\n          }\n          $cubeShadowEl.css({ height: (swiperWidth + \"px\") });\n        } else {\n          $cubeShadowEl = $el.find('.swiper-cube-shadow');\n          if ($cubeShadowEl.length === 0) {\n            $cubeShadowEl = $('<div class=\"swiper-cube-shadow\"></div>');\n            $el.append($cubeShadowEl);\n          }\n        }\n      }\n      for (var i = 0; i < slides.length; i += 1) {\n        var $slideEl = slides.eq(i);\n        var slideIndex = i;\n        if (isVirtual) {\n          slideIndex = parseInt($slideEl.attr('data-swiper-slide-index'), 10);\n        }\n        var slideAngle = slideIndex * 90;\n        var round = Math.floor(slideAngle / 360);\n        if (rtl) {\n          slideAngle = -slideAngle;\n          round = Math.floor(-slideAngle / 360);\n        }\n        var progress = Math.max(Math.min($slideEl[0].progress, 1), -1);\n        var tx = 0;\n        var ty = 0;\n        var tz = 0;\n        if (slideIndex % 4 === 0) {\n          tx = -round * 4 * swiperSize;\n          tz = 0;\n        } else if ((slideIndex - 1) % 4 === 0) {\n          tx = 0;\n          tz = -round * 4 * swiperSize;\n        } else if ((slideIndex - 2) % 4 === 0) {\n          tx = swiperSize + (round * 4 * swiperSize);\n          tz = swiperSize;\n        } else if ((slideIndex - 3) % 4 === 0) {\n          tx = -swiperSize;\n          tz = (3 * swiperSize) + (swiperSize * 4 * round);\n        }\n        if (rtl) {\n          tx = -tx;\n        }\n\n        if (!isHorizontal) {\n          ty = tx;\n          tx = 0;\n        }\n\n        var transform = \"rotateX(\" + (isHorizontal ? 0 : -slideAngle) + \"deg) rotateY(\" + (isHorizontal ? slideAngle : 0) + \"deg) translate3d(\" + tx + \"px, \" + ty + \"px, \" + tz + \"px)\";\n        if (progress <= 1 && progress > -1) {\n          wrapperRotate = (slideIndex * 90) + (progress * 90);\n          if (rtl) { wrapperRotate = (-slideIndex * 90) - (progress * 90); }\n        }\n        $slideEl.transform(transform);\n        if (params.slideShadows) {\n          // Set shadows\n          var shadowBefore = isHorizontal ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n          var shadowAfter = isHorizontal ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n          if (shadowBefore.length === 0) {\n            shadowBefore = $((\"<div class=\\\"swiper-slide-shadow-\" + (isHorizontal ? 'left' : 'top') + \"\\\"></div>\"));\n            $slideEl.append(shadowBefore);\n          }\n          if (shadowAfter.length === 0) {\n            shadowAfter = $((\"<div class=\\\"swiper-slide-shadow-\" + (isHorizontal ? 'right' : 'bottom') + \"\\\"></div>\"));\n            $slideEl.append(shadowAfter);\n          }\n          if (shadowBefore.length) { shadowBefore[0].style.opacity = Math.max(-progress, 0); }\n          if (shadowAfter.length) { shadowAfter[0].style.opacity = Math.max(progress, 0); }\n        }\n      }\n      $wrapperEl.css({\n        '-webkit-transform-origin': (\"50% 50% -\" + (swiperSize / 2) + \"px\"),\n        '-moz-transform-origin': (\"50% 50% -\" + (swiperSize / 2) + \"px\"),\n        '-ms-transform-origin': (\"50% 50% -\" + (swiperSize / 2) + \"px\"),\n        'transform-origin': (\"50% 50% -\" + (swiperSize / 2) + \"px\"),\n      });\n\n      if (params.shadow) {\n        if (isHorizontal) {\n          $cubeShadowEl.transform((\"translate3d(0px, \" + ((swiperWidth / 2) + params.shadowOffset) + \"px, \" + (-swiperWidth / 2) + \"px) rotateX(90deg) rotateZ(0deg) scale(\" + (params.shadowScale) + \")\"));\n        } else {\n          var shadowAngle = Math.abs(wrapperRotate) - (Math.floor(Math.abs(wrapperRotate) / 90) * 90);\n          var multiplier = 1.5 - (\n            (Math.sin((shadowAngle * 2 * Math.PI) / 360) / 2) +\n            (Math.cos((shadowAngle * 2 * Math.PI) / 360) / 2)\n          );\n          var scale1 = params.shadowScale;\n          var scale2 = params.shadowScale / multiplier;\n          var offset = params.shadowOffset;\n          $cubeShadowEl.transform((\"scale3d(\" + scale1 + \", 1, \" + scale2 + \") translate3d(0px, \" + ((swiperHeight / 2) + offset) + \"px, \" + (-swiperHeight / 2 / scale2) + \"px) rotateX(-90deg)\"));\n        }\n      }\n      var zFactor = (Browser.isSafari || Browser.isUiWebView) ? (-swiperSize / 2) : 0;\n      $wrapperEl\n        .transform((\"translate3d(0px,0,\" + zFactor + \"px) rotateX(\" + (swiper.isHorizontal() ? 0 : wrapperRotate) + \"deg) rotateY(\" + (swiper.isHorizontal() ? -wrapperRotate : 0) + \"deg)\"));\n    },\n    setTransition: function setTransition(duration) {\n      var swiper = this;\n      var $el = swiper.$el;\n      var slides = swiper.slides;\n      slides\n        .transition(duration)\n        .find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left')\n        .transition(duration);\n      if (swiper.params.cubeEffect.shadow && !swiper.isHorizontal()) {\n        $el.find('.swiper-cube-shadow').transition(duration);\n      }\n    },\n  };\n\n  var EffectCube = {\n    name: 'effect-cube',\n    params: {\n      cubeEffect: {\n        slideShadows: true,\n        shadow: true,\n        shadowOffset: 20,\n        shadowScale: 0.94,\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        cubeEffect: {\n          setTranslate: Cube.setTranslate.bind(swiper),\n          setTransition: Cube.setTransition.bind(swiper),\n        },\n      });\n    },\n    on: {\n      beforeInit: function beforeInit() {\n        var swiper = this;\n        if (swiper.params.effect !== 'cube') { return; }\n        swiper.classNames.push(((swiper.params.containerModifierClass) + \"cube\"));\n        swiper.classNames.push(((swiper.params.containerModifierClass) + \"3d\"));\n        var overwriteParams = {\n          slidesPerView: 1,\n          slidesPerColumn: 1,\n          slidesPerGroup: 1,\n          watchSlidesProgress: true,\n          resistanceRatio: 0,\n          spaceBetween: 0,\n          centeredSlides: false,\n          virtualTranslate: true,\n        };\n        Utils.extend(swiper.params, overwriteParams);\n        Utils.extend(swiper.originalParams, overwriteParams);\n      },\n      setTranslate: function setTranslate() {\n        var swiper = this;\n        if (swiper.params.effect !== 'cube') { return; }\n        swiper.cubeEffect.setTranslate();\n      },\n      setTransition: function setTransition(duration) {\n        var swiper = this;\n        if (swiper.params.effect !== 'cube') { return; }\n        swiper.cubeEffect.setTransition(duration);\n      },\n    },\n  };\n\n  var Flip = {\n    setTranslate: function setTranslate() {\n      var swiper = this;\n      var slides = swiper.slides;\n      var rtl = swiper.rtlTranslate;\n      for (var i = 0; i < slides.length; i += 1) {\n        var $slideEl = slides.eq(i);\n        var progress = $slideEl[0].progress;\n        if (swiper.params.flipEffect.limitRotation) {\n          progress = Math.max(Math.min($slideEl[0].progress, 1), -1);\n        }\n        var offset = $slideEl[0].swiperSlideOffset;\n        var rotate = -180 * progress;\n        var rotateY = rotate;\n        var rotateX = 0;\n        var tx = -offset;\n        var ty = 0;\n        if (!swiper.isHorizontal()) {\n          ty = tx;\n          tx = 0;\n          rotateX = -rotateY;\n          rotateY = 0;\n        } else if (rtl) {\n          rotateY = -rotateY;\n        }\n\n        $slideEl[0].style.zIndex = -Math.abs(Math.round(progress)) + slides.length;\n\n        if (swiper.params.flipEffect.slideShadows) {\n          // Set shadows\n          var shadowBefore = swiper.isHorizontal() ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n          var shadowAfter = swiper.isHorizontal() ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n          if (shadowBefore.length === 0) {\n            shadowBefore = $((\"<div class=\\\"swiper-slide-shadow-\" + (swiper.isHorizontal() ? 'left' : 'top') + \"\\\"></div>\"));\n            $slideEl.append(shadowBefore);\n          }\n          if (shadowAfter.length === 0) {\n            shadowAfter = $((\"<div class=\\\"swiper-slide-shadow-\" + (swiper.isHorizontal() ? 'right' : 'bottom') + \"\\\"></div>\"));\n            $slideEl.append(shadowAfter);\n          }\n          if (shadowBefore.length) { shadowBefore[0].style.opacity = Math.max(-progress, 0); }\n          if (shadowAfter.length) { shadowAfter[0].style.opacity = Math.max(progress, 0); }\n        }\n        $slideEl\n          .transform((\"translate3d(\" + tx + \"px, \" + ty + \"px, 0px) rotateX(\" + rotateX + \"deg) rotateY(\" + rotateY + \"deg)\"));\n      }\n    },\n    setTransition: function setTransition(duration) {\n      var swiper = this;\n      var slides = swiper.slides;\n      var activeIndex = swiper.activeIndex;\n      var $wrapperEl = swiper.$wrapperEl;\n      slides\n        .transition(duration)\n        .find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left')\n        .transition(duration);\n      if (swiper.params.virtualTranslate && duration !== 0) {\n        var eventTriggered = false;\n        // eslint-disable-next-line\n        slides.eq(activeIndex).transitionEnd(function onTransitionEnd() {\n          if (eventTriggered) { return; }\n          if (!swiper || swiper.destroyed) { return; }\n          // if (!$(this).hasClass(swiper.params.slideActiveClass)) return;\n          eventTriggered = true;\n          swiper.animating = false;\n          var triggerEvents = ['webkitTransitionEnd', 'transitionend'];\n          for (var i = 0; i < triggerEvents.length; i += 1) {\n            $wrapperEl.trigger(triggerEvents[i]);\n          }\n        });\n      }\n    },\n  };\n\n  var EffectFlip = {\n    name: 'effect-flip',\n    params: {\n      flipEffect: {\n        slideShadows: true,\n        limitRotation: true,\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        flipEffect: {\n          setTranslate: Flip.setTranslate.bind(swiper),\n          setTransition: Flip.setTransition.bind(swiper),\n        },\n      });\n    },\n    on: {\n      beforeInit: function beforeInit() {\n        var swiper = this;\n        if (swiper.params.effect !== 'flip') { return; }\n        swiper.classNames.push(((swiper.params.containerModifierClass) + \"flip\"));\n        swiper.classNames.push(((swiper.params.containerModifierClass) + \"3d\"));\n        var overwriteParams = {\n          slidesPerView: 1,\n          slidesPerColumn: 1,\n          slidesPerGroup: 1,\n          watchSlidesProgress: true,\n          spaceBetween: 0,\n          virtualTranslate: true,\n        };\n        Utils.extend(swiper.params, overwriteParams);\n        Utils.extend(swiper.originalParams, overwriteParams);\n      },\n      setTranslate: function setTranslate() {\n        var swiper = this;\n        if (swiper.params.effect !== 'flip') { return; }\n        swiper.flipEffect.setTranslate();\n      },\n      setTransition: function setTransition(duration) {\n        var swiper = this;\n        if (swiper.params.effect !== 'flip') { return; }\n        swiper.flipEffect.setTransition(duration);\n      },\n    },\n  };\n\n  var Coverflow = {\n    setTranslate: function setTranslate() {\n      var swiper = this;\n      var swiperWidth = swiper.width;\n      var swiperHeight = swiper.height;\n      var slides = swiper.slides;\n      var $wrapperEl = swiper.$wrapperEl;\n      var slidesSizesGrid = swiper.slidesSizesGrid;\n      var params = swiper.params.coverflowEffect;\n      var isHorizontal = swiper.isHorizontal();\n      var transform = swiper.translate;\n      var center = isHorizontal ? -transform + (swiperWidth / 2) : -transform + (swiperHeight / 2);\n      var rotate = isHorizontal ? params.rotate : -params.rotate;\n      var translate = params.depth;\n      // Each slide offset from center\n      for (var i = 0, length = slides.length; i < length; i += 1) {\n        var $slideEl = slides.eq(i);\n        var slideSize = slidesSizesGrid[i];\n        var slideOffset = $slideEl[0].swiperSlideOffset;\n        var offsetMultiplier = ((center - slideOffset - (slideSize / 2)) / slideSize) * params.modifier;\n\n        var rotateY = isHorizontal ? rotate * offsetMultiplier : 0;\n        var rotateX = isHorizontal ? 0 : rotate * offsetMultiplier;\n        // var rotateZ = 0\n        var translateZ = -translate * Math.abs(offsetMultiplier);\n\n        var translateY = isHorizontal ? 0 : params.stretch * (offsetMultiplier);\n        var translateX = isHorizontal ? params.stretch * (offsetMultiplier) : 0;\n\n        // Fix for ultra small values\n        if (Math.abs(translateX) < 0.001) { translateX = 0; }\n        if (Math.abs(translateY) < 0.001) { translateY = 0; }\n        if (Math.abs(translateZ) < 0.001) { translateZ = 0; }\n        if (Math.abs(rotateY) < 0.001) { rotateY = 0; }\n        if (Math.abs(rotateX) < 0.001) { rotateX = 0; }\n\n        var slideTransform = \"translate3d(\" + translateX + \"px,\" + translateY + \"px,\" + translateZ + \"px)  rotateX(\" + rotateX + \"deg) rotateY(\" + rotateY + \"deg)\";\n\n        $slideEl.transform(slideTransform);\n        $slideEl[0].style.zIndex = -Math.abs(Math.round(offsetMultiplier)) + 1;\n        if (params.slideShadows) {\n          // Set shadows\n          var $shadowBeforeEl = isHorizontal ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n          var $shadowAfterEl = isHorizontal ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n          if ($shadowBeforeEl.length === 0) {\n            $shadowBeforeEl = $((\"<div class=\\\"swiper-slide-shadow-\" + (isHorizontal ? 'left' : 'top') + \"\\\"></div>\"));\n            $slideEl.append($shadowBeforeEl);\n          }\n          if ($shadowAfterEl.length === 0) {\n            $shadowAfterEl = $((\"<div class=\\\"swiper-slide-shadow-\" + (isHorizontal ? 'right' : 'bottom') + \"\\\"></div>\"));\n            $slideEl.append($shadowAfterEl);\n          }\n          if ($shadowBeforeEl.length) { $shadowBeforeEl[0].style.opacity = offsetMultiplier > 0 ? offsetMultiplier : 0; }\n          if ($shadowAfterEl.length) { $shadowAfterEl[0].style.opacity = (-offsetMultiplier) > 0 ? -offsetMultiplier : 0; }\n        }\n      }\n\n      // Set correct perspective for IE10\n      if (Support.pointerEvents || Support.prefixedPointerEvents) {\n        var ws = $wrapperEl[0].style;\n        ws.perspectiveOrigin = center + \"px 50%\";\n      }\n    },\n    setTransition: function setTransition(duration) {\n      var swiper = this;\n      swiper.slides\n        .transition(duration)\n        .find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left')\n        .transition(duration);\n    },\n  };\n\n  var EffectCoverflow = {\n    name: 'effect-coverflow',\n    params: {\n      coverflowEffect: {\n        rotate: 50,\n        stretch: 0,\n        depth: 100,\n        modifier: 1,\n        slideShadows: true,\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        coverflowEffect: {\n          setTranslate: Coverflow.setTranslate.bind(swiper),\n          setTransition: Coverflow.setTransition.bind(swiper),\n        },\n      });\n    },\n    on: {\n      beforeInit: function beforeInit() {\n        var swiper = this;\n        if (swiper.params.effect !== 'coverflow') { return; }\n\n        swiper.classNames.push(((swiper.params.containerModifierClass) + \"coverflow\"));\n        swiper.classNames.push(((swiper.params.containerModifierClass) + \"3d\"));\n\n        swiper.params.watchSlidesProgress = true;\n        swiper.originalParams.watchSlidesProgress = true;\n      },\n      setTranslate: function setTranslate() {\n        var swiper = this;\n        if (swiper.params.effect !== 'coverflow') { return; }\n        swiper.coverflowEffect.setTranslate();\n      },\n      setTransition: function setTransition(duration) {\n        var swiper = this;\n        if (swiper.params.effect !== 'coverflow') { return; }\n        swiper.coverflowEffect.setTransition(duration);\n      },\n    },\n  };\n\n  // Swiper Class\n\n  var components = [\n    Device$1,\n    Support$1,\n    Browser$1,\n    Resize,\n    Observer$1,\n    Virtual$1,\n    Keyboard$1,\n    Mousewheel$1,\n    Navigation$1,\n    Pagination$1,\n    Scrollbar$1,\n    Parallax$1,\n    Zoom$1,\n    Lazy$1,\n    Controller$1,\n    A11y,\n    History$1,\n    HashNavigation$1,\n    Autoplay$1,\n    EffectFade,\n    EffectCube,\n    EffectFlip,\n    EffectCoverflow\n  ];\n\n  if (typeof Swiper.use === 'undefined') {\n    Swiper.use = Swiper.Class.use;\n    Swiper.installModule = Swiper.Class.installModule;\n  }\n\n  Swiper.use(components);\n\n  return Swiper;\n\n})));\n","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js!../../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/lib/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/lib/loader.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./swipe.vue?vue&type=style&index=0&id=68929526&lang=scss&scoped=true\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js!../../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/lib/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/lib/loader.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./swipe.vue?vue&type=style&index=0&id=68929526&lang=scss&scoped=true\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"swiper-container\"},[_c('div',{staticClass:\"swiper-wrapper\"},_vm._l((_vm.items),function(item,index){return _c('div',{key:index,staticClass:\"swiper-slide\"},[_c('img',{attrs:{\"src\":item.url,\"alt\":\"\"}})])}))])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","/**\n * SSR Window 1.0.0\n * Better handling for window object in SSR environment\n * https://github.com/nolimits4web/ssr-window\n *\n * Copyright 2018, Vladimir Kharlampidi\n *\n * Licensed under MIT\n *\n * Released on: February 10, 2018\n */\nvar d;\nif (typeof document === 'undefined') {\n  d = {\n    body: {},\n    addEventListener: function addEventListener() {},\n    removeEventListener: function removeEventListener() {},\n    activeElement: {\n      blur: function blur() {},\n      nodeName: '',\n    },\n    querySelector: function querySelector() {\n      return null;\n    },\n    querySelectorAll: function querySelectorAll() {\n      return [];\n    },\n    getElementById: function getElementById() {\n      return null;\n    },\n    createEvent: function createEvent() {\n      return {\n        initEvent: function initEvent() {},\n      };\n    },\n    createElement: function createElement() {\n      return {\n        children: [],\n        childNodes: [],\n        style: {},\n        setAttribute: function setAttribute() {},\n        getElementsByTagName: function getElementsByTagName() {\n          return [];\n        },\n      };\n    },\n    location: { hash: '' },\n  };\n} else {\n  // eslint-disable-next-line\n  d = document;\n}\n\nvar doc = d;\n\nvar w;\nif (typeof window === 'undefined') {\n  w = {\n    document: doc,\n    navigator: {\n      userAgent: '',\n    },\n    location: {},\n    history: {},\n    CustomEvent: function CustomEvent() {\n      return this;\n    },\n    addEventListener: function addEventListener() {},\n    removeEventListener: function removeEventListener() {},\n    getComputedStyle: function getComputedStyle() {\n      return {\n        getPropertyValue: function getPropertyValue() {\n          return '';\n        },\n      };\n    },\n    Image: function Image() {},\n    Date: function Date() {},\n    screen: {},\n    setTimeout: function setTimeout() {},\n    clearTimeout: function clearTimeout() {},\n  };\n} else {\n  // eslint-disable-next-line\n  w = window;\n}\n\nvar win = w;\n\nexport { win as window, doc as document };\n","/**\n * Dom7 2.0.6\n * Minimalistic JavaScript library for DOM manipulation, with a jQuery-compatible API\n * http://framework7.io/docs/dom.html\n *\n * Copyright 2018, Vladimir Kharlampidi\n * The iDangero.us\n * http://www.idangero.us/\n *\n * Licensed under MIT\n *\n * Released on: May 27, 2018\n */\nimport { document, window } from 'ssr-window';\n\nclass Dom7 {\n  constructor(arr) {\n    const self = this;\n    // Create array-like object\n    for (let i = 0; i < arr.length; i += 1) {\n      self[i] = arr[i];\n    }\n    self.length = arr.length;\n    // Return collection with methods\n    return this;\n  }\n}\n\nfunction $(selector, context) {\n  const arr = [];\n  let i = 0;\n  if (selector && !context) {\n    if (selector instanceof Dom7) {\n      return selector;\n    }\n  }\n  if (selector) {\n      // String\n    if (typeof selector === 'string') {\n      let els;\n      let tempParent;\n      const html = selector.trim();\n      if (html.indexOf('<') >= 0 && html.indexOf('>') >= 0) {\n        let toCreate = 'div';\n        if (html.indexOf('<li') === 0) toCreate = 'ul';\n        if (html.indexOf('<tr') === 0) toCreate = 'tbody';\n        if (html.indexOf('<td') === 0 || html.indexOf('<th') === 0) toCreate = 'tr';\n        if (html.indexOf('<tbody') === 0) toCreate = 'table';\n        if (html.indexOf('<option') === 0) toCreate = 'select';\n        tempParent = document.createElement(toCreate);\n        tempParent.innerHTML = html;\n        for (i = 0; i < tempParent.childNodes.length; i += 1) {\n          arr.push(tempParent.childNodes[i]);\n        }\n      } else {\n        if (!context && selector[0] === '#' && !selector.match(/[ .<>:~]/)) {\n          // Pure ID selector\n          els = [document.getElementById(selector.trim().split('#')[1])];\n        } else {\n          // Other selectors\n          els = (context || document).querySelectorAll(selector.trim());\n        }\n        for (i = 0; i < els.length; i += 1) {\n          if (els[i]) arr.push(els[i]);\n        }\n      }\n    } else if (selector.nodeType || selector === window || selector === document) {\n      // Node/element\n      arr.push(selector);\n    } else if (selector.length > 0 && selector[0].nodeType) {\n      // Array of elements or instance of Dom\n      for (i = 0; i < selector.length; i += 1) {\n        arr.push(selector[i]);\n      }\n    }\n  }\n  return new Dom7(arr);\n}\n\n$.fn = Dom7.prototype;\n$.Class = Dom7;\n$.Dom7 = Dom7;\n\nfunction unique(arr) {\n  const uniqueArray = [];\n  for (let i = 0; i < arr.length; i += 1) {\n    if (uniqueArray.indexOf(arr[i]) === -1) uniqueArray.push(arr[i]);\n  }\n  return uniqueArray;\n}\nfunction toCamelCase(string) {\n  return string.toLowerCase().replace(/-(.)/g, (match, group1) => group1.toUpperCase());\n}\n\nfunction requestAnimationFrame(callback) {\n  if (window.requestAnimationFrame) return window.requestAnimationFrame(callback);\n  else if (window.webkitRequestAnimationFrame) return window.webkitRequestAnimationFrame(callback);\n  return window.setTimeout(callback, 1000 / 60);\n}\nfunction cancelAnimationFrame(id) {\n  if (window.cancelAnimationFrame) return window.cancelAnimationFrame(id);\n  else if (window.webkitCancelAnimationFrame) return window.webkitCancelAnimationFrame(id);\n  return window.clearTimeout(id);\n}\n\n// Classes and attributes\nfunction addClass(className) {\n  if (typeof className === 'undefined') {\n    return this;\n  }\n  const classes = className.split(' ');\n  for (let i = 0; i < classes.length; i += 1) {\n    for (let j = 0; j < this.length; j += 1) {\n      if (typeof this[j].classList !== 'undefined') this[j].classList.add(classes[i]);\n    }\n  }\n  return this;\n}\nfunction removeClass(className) {\n  const classes = className.split(' ');\n  for (let i = 0; i < classes.length; i += 1) {\n    for (let j = 0; j < this.length; j += 1) {\n      if (typeof this[j].classList !== 'undefined') this[j].classList.remove(classes[i]);\n    }\n  }\n  return this;\n}\nfunction hasClass(className) {\n  if (!this[0]) return false;\n  return this[0].classList.contains(className);\n}\nfunction toggleClass(className) {\n  const classes = className.split(' ');\n  for (let i = 0; i < classes.length; i += 1) {\n    for (let j = 0; j < this.length; j += 1) {\n      if (typeof this[j].classList !== 'undefined') this[j].classList.toggle(classes[i]);\n    }\n  }\n  return this;\n}\nfunction attr(attrs, value) {\n  if (arguments.length === 1 && typeof attrs === 'string') {\n    // Get attr\n    if (this[0]) return this[0].getAttribute(attrs);\n    return undefined;\n  }\n\n  // Set attrs\n  for (let i = 0; i < this.length; i += 1) {\n    if (arguments.length === 2) {\n      // String\n      this[i].setAttribute(attrs, value);\n    } else {\n      // Object\n      // eslint-disable-next-line\n      for (const attrName in attrs) {\n        this[i][attrName] = attrs[attrName];\n        this[i].setAttribute(attrName, attrs[attrName]);\n      }\n    }\n  }\n  return this;\n}\n// eslint-disable-next-line\nfunction removeAttr(attr) {\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].removeAttribute(attr);\n  }\n  return this;\n}\n// eslint-disable-next-line\nfunction prop(props, value) {\n  if (arguments.length === 1 && typeof props === 'string') {\n    // Get prop\n    if (this[0]) return this[0][props];\n  } else {\n    // Set props\n    for (let i = 0; i < this.length; i += 1) {\n      if (arguments.length === 2) {\n        // String\n        this[i][props] = value;\n      } else {\n        // Object\n        // eslint-disable-next-line\n        for (const propName in props) {\n          this[i][propName] = props[propName];\n        }\n      }\n    }\n    return this;\n  }\n}\nfunction data(key, value) {\n  let el;\n  if (typeof value === 'undefined') {\n    el = this[0];\n    // Get value\n    if (el) {\n      if (el.dom7ElementDataStorage && (key in el.dom7ElementDataStorage)) {\n        return el.dom7ElementDataStorage[key];\n      }\n\n      const dataKey = el.getAttribute(`data-${key}`);\n      if (dataKey) {\n        return dataKey;\n      }\n      return undefined;\n    }\n    return undefined;\n  }\n\n  // Set value\n  for (let i = 0; i < this.length; i += 1) {\n    el = this[i];\n    if (!el.dom7ElementDataStorage) el.dom7ElementDataStorage = {};\n    el.dom7ElementDataStorage[key] = value;\n  }\n  return this;\n}\nfunction removeData(key) {\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (el.dom7ElementDataStorage && el.dom7ElementDataStorage[key]) {\n      el.dom7ElementDataStorage[key] = null;\n      delete el.dom7ElementDataStorage[key];\n    }\n  }\n}\nfunction dataset() {\n  const el = this[0];\n  if (!el) return undefined;\n  const dataset = {}; // eslint-disable-line\n  if (el.dataset) {\n    // eslint-disable-next-line\n    for (const dataKey in el.dataset) {\n      dataset[dataKey] = el.dataset[dataKey];\n    }\n  } else {\n    for (let i = 0; i < el.attributes.length; i += 1) {\n      // eslint-disable-next-line\n      const attr = el.attributes[i];\n      if (attr.name.indexOf('data-') >= 0) {\n        dataset[toCamelCase(attr.name.split('data-')[1])] = attr.value;\n      }\n    }\n  }\n  // eslint-disable-next-line\n  for (const key in dataset) {\n    if (dataset[key] === 'false') dataset[key] = false;\n    else if (dataset[key] === 'true') dataset[key] = true;\n    else if (parseFloat(dataset[key]) === dataset[key] * 1) dataset[key] *= 1;\n  }\n  return dataset;\n}\nfunction val(value) {\n  const dom = this;\n  if (typeof value === 'undefined') {\n    if (dom[0]) {\n      if (dom[0].multiple && dom[0].nodeName.toLowerCase() === 'select') {\n        const values = [];\n        for (let i = 0; i < dom[0].selectedOptions.length; i += 1) {\n          values.push(dom[0].selectedOptions[i].value);\n        }\n        return values;\n      }\n      return dom[0].value;\n    }\n    return undefined;\n  }\n\n  for (let i = 0; i < dom.length; i += 1) {\n    const el = dom[i];\n    if (Array.isArray(value) && el.multiple && el.nodeName.toLowerCase() === 'select') {\n      for (let j = 0; j < el.options.length; j += 1) {\n        el.options[j].selected = value.indexOf(el.options[j].value) >= 0;\n      }\n    } else {\n      el.value = value;\n    }\n  }\n  return dom;\n}\n// Transforms\n// eslint-disable-next-line\nfunction transform(transform) {\n  for (let i = 0; i < this.length; i += 1) {\n    const elStyle = this[i].style;\n    elStyle.webkitTransform = transform;\n    elStyle.transform = transform;\n  }\n  return this;\n}\nfunction transition(duration) {\n  if (typeof duration !== 'string') {\n    duration = `${duration}ms`; // eslint-disable-line\n  }\n  for (let i = 0; i < this.length; i += 1) {\n    const elStyle = this[i].style;\n    elStyle.webkitTransitionDuration = duration;\n    elStyle.transitionDuration = duration;\n  }\n  return this;\n}\n// Events\nfunction on(...args) {\n  let [eventType, targetSelector, listener, capture] = args;\n  if (typeof args[1] === 'function') {\n    [eventType, listener, capture] = args;\n    targetSelector = undefined;\n  }\n  if (!capture) capture = false;\n\n  function handleLiveEvent(e) {\n    const target = e.target;\n    if (!target) return;\n    const eventData = e.target.dom7EventData || [];\n    if (eventData.indexOf(e) < 0) {\n      eventData.unshift(e);\n    }\n    if ($(target).is(targetSelector)) listener.apply(target, eventData);\n    else {\n      const parents = $(target).parents(); // eslint-disable-line\n      for (let k = 0; k < parents.length; k += 1) {\n        if ($(parents[k]).is(targetSelector)) listener.apply(parents[k], eventData);\n      }\n    }\n  }\n  function handleEvent(e) {\n    const eventData = e && e.target ? e.target.dom7EventData || [] : [];\n    if (eventData.indexOf(e) < 0) {\n      eventData.unshift(e);\n    }\n    listener.apply(this, eventData);\n  }\n  const events = eventType.split(' ');\n  let j;\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (!targetSelector) {\n      for (j = 0; j < events.length; j += 1) {\n        const event = events[j];\n        if (!el.dom7Listeners) el.dom7Listeners = {};\n        if (!el.dom7Listeners[event]) el.dom7Listeners[event] = [];\n        el.dom7Listeners[event].push({\n          listener,\n          proxyListener: handleEvent,\n        });\n        el.addEventListener(event, handleEvent, capture);\n      }\n    } else {\n      // Live events\n      for (j = 0; j < events.length; j += 1) {\n        const event = events[j];\n        if (!el.dom7LiveListeners) el.dom7LiveListeners = {};\n        if (!el.dom7LiveListeners[event]) el.dom7LiveListeners[event] = [];\n        el.dom7LiveListeners[event].push({\n          listener,\n          proxyListener: handleLiveEvent,\n        });\n        el.addEventListener(event, handleLiveEvent, capture);\n      }\n    }\n  }\n  return this;\n}\nfunction off(...args) {\n  let [eventType, targetSelector, listener, capture] = args;\n  if (typeof args[1] === 'function') {\n    [eventType, listener, capture] = args;\n    targetSelector = undefined;\n  }\n  if (!capture) capture = false;\n\n  const events = eventType.split(' ');\n  for (let i = 0; i < events.length; i += 1) {\n    const event = events[i];\n    for (let j = 0; j < this.length; j += 1) {\n      const el = this[j];\n      let handlers;\n      if (!targetSelector && el.dom7Listeners) {\n        handlers = el.dom7Listeners[event];\n      } else if (targetSelector && el.dom7LiveListeners) {\n        handlers = el.dom7LiveListeners[event];\n      }\n      if (handlers && handlers.length) {\n        for (let k = handlers.length - 1; k >= 0; k -= 1) {\n          const handler = handlers[k];\n          if (listener && handler.listener === listener) {\n            el.removeEventListener(event, handler.proxyListener, capture);\n            handlers.splice(k, 1);\n          } else if (!listener) {\n            el.removeEventListener(event, handler.proxyListener, capture);\n            handlers.splice(k, 1);\n          }\n        }\n      }\n    }\n  }\n  return this;\n}\nfunction once(...args) {\n  const dom = this;\n  let [eventName, targetSelector, listener, capture] = args;\n  if (typeof args[1] === 'function') {\n    [eventName, listener, capture] = args;\n    targetSelector = undefined;\n  }\n  function proxy(...eventArgs) {\n    listener.apply(this, eventArgs);\n    dom.off(eventName, targetSelector, proxy, capture);\n  }\n  return dom.on(eventName, targetSelector, proxy, capture);\n}\nfunction trigger(...args) {\n  const events = args[0].split(' ');\n  const eventData = args[1];\n  for (let i = 0; i < events.length; i += 1) {\n    const event = events[i];\n    for (let j = 0; j < this.length; j += 1) {\n      const el = this[j];\n      let evt;\n      try {\n        evt = new window.CustomEvent(event, {\n          detail: eventData,\n          bubbles: true,\n          cancelable: true,\n        });\n      } catch (e) {\n        evt = document.createEvent('Event');\n        evt.initEvent(event, true, true);\n        evt.detail = eventData;\n      }\n      // eslint-disable-next-line\n      el.dom7EventData = args.filter((data, dataIndex) => dataIndex > 0);\n      el.dispatchEvent(evt);\n      el.dom7EventData = [];\n      delete el.dom7EventData;\n    }\n  }\n  return this;\n}\nfunction transitionEnd(callback) {\n  const events = ['webkitTransitionEnd', 'transitionend'];\n  const dom = this;\n  let i;\n  function fireCallBack(e) {\n    /* jshint validthis:true */\n    if (e.target !== this) return;\n    callback.call(this, e);\n    for (i = 0; i < events.length; i += 1) {\n      dom.off(events[i], fireCallBack);\n    }\n  }\n  if (callback) {\n    for (i = 0; i < events.length; i += 1) {\n      dom.on(events[i], fireCallBack);\n    }\n  }\n  return this;\n}\nfunction animationEnd(callback) {\n  const events = ['webkitAnimationEnd', 'animationend'];\n  const dom = this;\n  let i;\n  function fireCallBack(e) {\n    if (e.target !== this) return;\n    callback.call(this, e);\n    for (i = 0; i < events.length; i += 1) {\n      dom.off(events[i], fireCallBack);\n    }\n  }\n  if (callback) {\n    for (i = 0; i < events.length; i += 1) {\n      dom.on(events[i], fireCallBack);\n    }\n  }\n  return this;\n}\n// Sizing/Styles\nfunction width() {\n  if (this[0] === window) {\n    return window.innerWidth;\n  }\n\n  if (this.length > 0) {\n    return parseFloat(this.css('width'));\n  }\n\n  return null;\n}\nfunction outerWidth(includeMargins) {\n  if (this.length > 0) {\n    if (includeMargins) {\n      // eslint-disable-next-line\n      const styles = this.styles();\n      return this[0].offsetWidth + parseFloat(styles.getPropertyValue('margin-right')) + parseFloat(styles.getPropertyValue('margin-left'));\n    }\n    return this[0].offsetWidth;\n  }\n  return null;\n}\nfunction height() {\n  if (this[0] === window) {\n    return window.innerHeight;\n  }\n\n  if (this.length > 0) {\n    return parseFloat(this.css('height'));\n  }\n\n  return null;\n}\nfunction outerHeight(includeMargins) {\n  if (this.length > 0) {\n    if (includeMargins) {\n      // eslint-disable-next-line\n      const styles = this.styles();\n      return this[0].offsetHeight + parseFloat(styles.getPropertyValue('margin-top')) + parseFloat(styles.getPropertyValue('margin-bottom'));\n    }\n    return this[0].offsetHeight;\n  }\n  return null;\n}\nfunction offset() {\n  if (this.length > 0) {\n    const el = this[0];\n    const box = el.getBoundingClientRect();\n    const body = document.body;\n    const clientTop = el.clientTop || body.clientTop || 0;\n    const clientLeft = el.clientLeft || body.clientLeft || 0;\n    const scrollTop = el === window ? window.scrollY : el.scrollTop;\n    const scrollLeft = el === window ? window.scrollX : el.scrollLeft;\n    return {\n      top: (box.top + scrollTop) - clientTop,\n      left: (box.left + scrollLeft) - clientLeft,\n    };\n  }\n\n  return null;\n}\nfunction hide() {\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].style.display = 'none';\n  }\n  return this;\n}\nfunction show() {\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (el.style.display === 'none') {\n      el.style.display = '';\n    }\n    if (window.getComputedStyle(el, null).getPropertyValue('display') === 'none') {\n      // Still not visible\n      el.style.display = 'block';\n    }\n  }\n  return this;\n}\nfunction styles() {\n  if (this[0]) return window.getComputedStyle(this[0], null);\n  return {};\n}\nfunction css(props, value) {\n  let i;\n  if (arguments.length === 1) {\n    if (typeof props === 'string') {\n      if (this[0]) return window.getComputedStyle(this[0], null).getPropertyValue(props);\n    } else {\n      for (i = 0; i < this.length; i += 1) {\n        // eslint-disable-next-line\n        for (let prop in props) {\n          this[i].style[prop] = props[prop];\n        }\n      }\n      return this;\n    }\n  }\n  if (arguments.length === 2 && typeof props === 'string') {\n    for (i = 0; i < this.length; i += 1) {\n      this[i].style[props] = value;\n    }\n    return this;\n  }\n  return this;\n}\n\n// Dom manipulation\nfunction toArray() {\n  const arr = [];\n  for (let i = 0; i < this.length; i += 1) {\n    arr.push(this[i]);\n  }\n  return arr;\n}\n// Iterate over the collection passing elements to `callback`\nfunction each(callback) {\n  // Don't bother continuing without a callback\n  if (!callback) return this;\n  // Iterate over the current collection\n  for (let i = 0; i < this.length; i += 1) {\n    // If the callback returns false\n    if (callback.call(this[i], i, this[i]) === false) {\n      // End the loop early\n      return this;\n    }\n  }\n  // Return `this` to allow chained DOM operations\n  return this;\n}\nfunction forEach(callback) {\n  // Don't bother continuing without a callback\n  if (!callback) return this;\n  // Iterate over the current collection\n  for (let i = 0; i < this.length; i += 1) {\n    // If the callback returns false\n    if (callback.call(this[i], this[i], i) === false) {\n      // End the loop early\n      return this;\n    }\n  }\n  // Return `this` to allow chained DOM operations\n  return this;\n}\nfunction filter(callback) {\n  const matchedItems = [];\n  const dom = this;\n  for (let i = 0; i < dom.length; i += 1) {\n    if (callback.call(dom[i], i, dom[i])) matchedItems.push(dom[i]);\n  }\n  return new Dom7(matchedItems);\n}\nfunction map(callback) {\n  const modifiedItems = [];\n  const dom = this;\n  for (let i = 0; i < dom.length; i += 1) {\n    modifiedItems.push(callback.call(dom[i], i, dom[i]));\n  }\n  return new Dom7(modifiedItems);\n}\n// eslint-disable-next-line\nfunction html(html) {\n  if (typeof html === 'undefined') {\n    return this[0] ? this[0].innerHTML : undefined;\n  }\n\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].innerHTML = html;\n  }\n  return this;\n}\n// eslint-disable-next-line\nfunction text(text) {\n  if (typeof text === 'undefined') {\n    if (this[0]) {\n      return this[0].textContent.trim();\n    }\n    return null;\n  }\n\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].textContent = text;\n  }\n  return this;\n}\nfunction is(selector) {\n  const el = this[0];\n  let compareWith;\n  let i;\n  if (!el || typeof selector === 'undefined') return false;\n  if (typeof selector === 'string') {\n    if (el.matches) return el.matches(selector);\n    else if (el.webkitMatchesSelector) return el.webkitMatchesSelector(selector);\n    else if (el.msMatchesSelector) return el.msMatchesSelector(selector);\n\n    compareWith = $(selector);\n    for (i = 0; i < compareWith.length; i += 1) {\n      if (compareWith[i] === el) return true;\n    }\n    return false;\n  } else if (selector === document) return el === document;\n  else if (selector === window) return el === window;\n\n  if (selector.nodeType || selector instanceof Dom7) {\n    compareWith = selector.nodeType ? [selector] : selector;\n    for (i = 0; i < compareWith.length; i += 1) {\n      if (compareWith[i] === el) return true;\n    }\n    return false;\n  }\n  return false;\n}\nfunction indexOf(el) {\n  for (let i = 0; i < this.length; i += 1) {\n    if (this[i] === el) return i;\n  }\n  return -1;\n}\nfunction index() {\n  let child = this[0];\n  let i;\n  if (child) {\n    i = 0;\n    // eslint-disable-next-line\n    while ((child = child.previousSibling) !== null) {\n      if (child.nodeType === 1) i += 1;\n    }\n    return i;\n  }\n  return undefined;\n}\n// eslint-disable-next-line\nfunction eq(index) {\n  if (typeof index === 'undefined') return this;\n  const length = this.length;\n  let returnIndex;\n  if (index > length - 1) {\n    return new Dom7([]);\n  }\n  if (index < 0) {\n    returnIndex = length + index;\n    if (returnIndex < 0) return new Dom7([]);\n    return new Dom7([this[returnIndex]]);\n  }\n  return new Dom7([this[index]]);\n}\nfunction append(...args) {\n  let newChild;\n\n  for (let k = 0; k < args.length; k += 1) {\n    newChild = args[k];\n    for (let i = 0; i < this.length; i += 1) {\n      if (typeof newChild === 'string') {\n        const tempDiv = document.createElement('div');\n        tempDiv.innerHTML = newChild;\n        while (tempDiv.firstChild) {\n          this[i].appendChild(tempDiv.firstChild);\n        }\n      } else if (newChild instanceof Dom7) {\n        for (let j = 0; j < newChild.length; j += 1) {\n          this[i].appendChild(newChild[j]);\n        }\n      } else {\n        this[i].appendChild(newChild);\n      }\n    }\n  }\n\n  return this;\n}\n // eslint-disable-next-line\nfunction appendTo(parent) {\n  $(parent).append(this);\n  return this;\n}\nfunction prepend(newChild) {\n  let i;\n  let j;\n  for (i = 0; i < this.length; i += 1) {\n    if (typeof newChild === 'string') {\n      const tempDiv = document.createElement('div');\n      tempDiv.innerHTML = newChild;\n      for (j = tempDiv.childNodes.length - 1; j >= 0; j -= 1) {\n        this[i].insertBefore(tempDiv.childNodes[j], this[i].childNodes[0]);\n      }\n    } else if (newChild instanceof Dom7) {\n      for (j = 0; j < newChild.length; j += 1) {\n        this[i].insertBefore(newChild[j], this[i].childNodes[0]);\n      }\n    } else {\n      this[i].insertBefore(newChild, this[i].childNodes[0]);\n    }\n  }\n  return this;\n}\n // eslint-disable-next-line\nfunction prependTo(parent) {\n  $(parent).prepend(this);\n  return this;\n}\nfunction insertBefore(selector) {\n  const before = $(selector);\n  for (let i = 0; i < this.length; i += 1) {\n    if (before.length === 1) {\n      before[0].parentNode.insertBefore(this[i], before[0]);\n    } else if (before.length > 1) {\n      for (let j = 0; j < before.length; j += 1) {\n        before[j].parentNode.insertBefore(this[i].cloneNode(true), before[j]);\n      }\n    }\n  }\n}\nfunction insertAfter(selector) {\n  const after = $(selector);\n  for (let i = 0; i < this.length; i += 1) {\n    if (after.length === 1) {\n      after[0].parentNode.insertBefore(this[i], after[0].nextSibling);\n    } else if (after.length > 1) {\n      for (let j = 0; j < after.length; j += 1) {\n        after[j].parentNode.insertBefore(this[i].cloneNode(true), after[j].nextSibling);\n      }\n    }\n  }\n}\nfunction next(selector) {\n  if (this.length > 0) {\n    if (selector) {\n      if (this[0].nextElementSibling && $(this[0].nextElementSibling).is(selector)) {\n        return new Dom7([this[0].nextElementSibling]);\n      }\n      return new Dom7([]);\n    }\n\n    if (this[0].nextElementSibling) return new Dom7([this[0].nextElementSibling]);\n    return new Dom7([]);\n  }\n  return new Dom7([]);\n}\nfunction nextAll(selector) {\n  const nextEls = [];\n  let el = this[0];\n  if (!el) return new Dom7([]);\n  while (el.nextElementSibling) {\n    const next = el.nextElementSibling; // eslint-disable-line\n    if (selector) {\n      if ($(next).is(selector)) nextEls.push(next);\n    } else nextEls.push(next);\n    el = next;\n  }\n  return new Dom7(nextEls);\n}\nfunction prev(selector) {\n  if (this.length > 0) {\n    const el = this[0];\n    if (selector) {\n      if (el.previousElementSibling && $(el.previousElementSibling).is(selector)) {\n        return new Dom7([el.previousElementSibling]);\n      }\n      return new Dom7([]);\n    }\n\n    if (el.previousElementSibling) return new Dom7([el.previousElementSibling]);\n    return new Dom7([]);\n  }\n  return new Dom7([]);\n}\nfunction prevAll(selector) {\n  const prevEls = [];\n  let el = this[0];\n  if (!el) return new Dom7([]);\n  while (el.previousElementSibling) {\n    const prev = el.previousElementSibling; // eslint-disable-line\n    if (selector) {\n      if ($(prev).is(selector)) prevEls.push(prev);\n    } else prevEls.push(prev);\n    el = prev;\n  }\n  return new Dom7(prevEls);\n}\nfunction siblings(selector) {\n  return this.nextAll(selector).add(this.prevAll(selector));\n}\nfunction parent(selector) {\n  const parents = []; // eslint-disable-line\n  for (let i = 0; i < this.length; i += 1) {\n    if (this[i].parentNode !== null) {\n      if (selector) {\n        if ($(this[i].parentNode).is(selector)) parents.push(this[i].parentNode);\n      } else {\n        parents.push(this[i].parentNode);\n      }\n    }\n  }\n  return $(unique(parents));\n}\nfunction parents(selector) {\n  const parents = []; // eslint-disable-line\n  for (let i = 0; i < this.length; i += 1) {\n    let parent = this[i].parentNode; // eslint-disable-line\n    while (parent) {\n      if (selector) {\n        if ($(parent).is(selector)) parents.push(parent);\n      } else {\n        parents.push(parent);\n      }\n      parent = parent.parentNode;\n    }\n  }\n  return $(unique(parents));\n}\nfunction closest(selector) {\n  let closest = this; // eslint-disable-line\n  if (typeof selector === 'undefined') {\n    return new Dom7([]);\n  }\n  if (!closest.is(selector)) {\n    closest = closest.parents(selector).eq(0);\n  }\n  return closest;\n}\nfunction find(selector) {\n  const foundElements = [];\n  for (let i = 0; i < this.length; i += 1) {\n    const found = this[i].querySelectorAll(selector);\n    for (let j = 0; j < found.length; j += 1) {\n      foundElements.push(found[j]);\n    }\n  }\n  return new Dom7(foundElements);\n}\nfunction children(selector) {\n  const children = []; // eslint-disable-line\n  for (let i = 0; i < this.length; i += 1) {\n    const childNodes = this[i].childNodes;\n\n    for (let j = 0; j < childNodes.length; j += 1) {\n      if (!selector) {\n        if (childNodes[j].nodeType === 1) children.push(childNodes[j]);\n      } else if (childNodes[j].nodeType === 1 && $(childNodes[j]).is(selector)) {\n        children.push(childNodes[j]);\n      }\n    }\n  }\n  return new Dom7(unique(children));\n}\nfunction remove() {\n  for (let i = 0; i < this.length; i += 1) {\n    if (this[i].parentNode) this[i].parentNode.removeChild(this[i]);\n  }\n  return this;\n}\nfunction detach() {\n  return this.remove();\n}\nfunction add(...args) {\n  const dom = this;\n  let i;\n  let j;\n  for (i = 0; i < args.length; i += 1) {\n    const toAdd = $(args[i]);\n    for (j = 0; j < toAdd.length; j += 1) {\n      dom[dom.length] = toAdd[j];\n      dom.length += 1;\n    }\n  }\n  return dom;\n}\nfunction empty() {\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (el.nodeType === 1) {\n      for (let j = 0; j < el.childNodes.length; j += 1) {\n        if (el.childNodes[j].parentNode) {\n          el.childNodes[j].parentNode.removeChild(el.childNodes[j]);\n        }\n      }\n      el.textContent = '';\n    }\n  }\n  return this;\n}\n\nfunction scrollTo(...args) {\n  let [left, top, duration, easing, callback] = args;\n  if (args.length === 4 && typeof easing === 'function') {\n    callback = easing;\n    [left, top, duration, callback, easing] = args;\n  }\n  if (typeof easing === 'undefined') easing = 'swing';\n\n  return this.each(function animate() {\n    const el = this;\n    let currentTop;\n    let currentLeft;\n    let maxTop;\n    let maxLeft;\n    let newTop;\n    let newLeft;\n    let scrollTop; // eslint-disable-line\n    let scrollLeft; // eslint-disable-line\n    let animateTop = top > 0 || top === 0;\n    let animateLeft = left > 0 || left === 0;\n    if (typeof easing === 'undefined') {\n      easing = 'swing';\n    }\n    if (animateTop) {\n      currentTop = el.scrollTop;\n      if (!duration) {\n        el.scrollTop = top;\n      }\n    }\n    if (animateLeft) {\n      currentLeft = el.scrollLeft;\n      if (!duration) {\n        el.scrollLeft = left;\n      }\n    }\n    if (!duration) return;\n    if (animateTop) {\n      maxTop = el.scrollHeight - el.offsetHeight;\n      newTop = Math.max(Math.min(top, maxTop), 0);\n    }\n    if (animateLeft) {\n      maxLeft = el.scrollWidth - el.offsetWidth;\n      newLeft = Math.max(Math.min(left, maxLeft), 0);\n    }\n    let startTime = null;\n    if (animateTop && newTop === currentTop) animateTop = false;\n    if (animateLeft && newLeft === currentLeft) animateLeft = false;\n    function render(time = new Date().getTime()) {\n      if (startTime === null) {\n        startTime = time;\n      }\n      const progress = Math.max(Math.min((time - startTime) / duration, 1), 0);\n      const easeProgress = easing === 'linear' ? progress : (0.5 - (Math.cos(progress * Math.PI) / 2));\n      let done;\n      if (animateTop) scrollTop = currentTop + (easeProgress * (newTop - currentTop));\n      if (animateLeft) scrollLeft = currentLeft + (easeProgress * (newLeft - currentLeft));\n      if (animateTop && newTop > currentTop && scrollTop >= newTop) {\n        el.scrollTop = newTop;\n        done = true;\n      }\n      if (animateTop && newTop < currentTop && scrollTop <= newTop) {\n        el.scrollTop = newTop;\n        done = true;\n      }\n      if (animateLeft && newLeft > currentLeft && scrollLeft >= newLeft) {\n        el.scrollLeft = newLeft;\n        done = true;\n      }\n      if (animateLeft && newLeft < currentLeft && scrollLeft <= newLeft) {\n        el.scrollLeft = newLeft;\n        done = true;\n      }\n\n      if (done) {\n        if (callback) callback();\n        return;\n      }\n      if (animateTop) el.scrollTop = scrollTop;\n      if (animateLeft) el.scrollLeft = scrollLeft;\n      requestAnimationFrame(render);\n    }\n    requestAnimationFrame(render);\n  });\n}\n// scrollTop(top, duration, easing, callback) {\nfunction scrollTop(...args) {\n  let [top, duration, easing, callback] = args;\n  if (args.length === 3 && typeof easing === 'function') {\n    [top, duration, callback, easing] = args;\n  }\n  const dom = this;\n  if (typeof top === 'undefined') {\n    if (dom.length > 0) return dom[0].scrollTop;\n    return null;\n  }\n  return dom.scrollTo(undefined, top, duration, easing, callback);\n}\nfunction scrollLeft(...args) {\n  let [left, duration, easing, callback] = args;\n  if (args.length === 3 && typeof easing === 'function') {\n    [left, duration, callback, easing] = args;\n  }\n  const dom = this;\n  if (typeof left === 'undefined') {\n    if (dom.length > 0) return dom[0].scrollLeft;\n    return null;\n  }\n  return dom.scrollTo(left, undefined, duration, easing, callback);\n}\n\nfunction animate(initialProps, initialParams) {\n  const els = this;\n  const a = {\n    props: Object.assign({}, initialProps),\n    params: Object.assign({\n      duration: 300,\n      easing: 'swing', // or 'linear'\n      /* Callbacks\n      begin(elements)\n      complete(elements)\n      progress(elements, complete, remaining, start, tweenValue)\n      */\n    }, initialParams),\n\n    elements: els,\n    animating: false,\n    que: [],\n\n    easingProgress(easing, progress) {\n      if (easing === 'swing') {\n        return 0.5 - (Math.cos(progress * Math.PI) / 2);\n      }\n      if (typeof easing === 'function') {\n        return easing(progress);\n      }\n      return progress;\n    },\n    stop() {\n      if (a.frameId) {\n        cancelAnimationFrame(a.frameId);\n      }\n      a.animating = false;\n      a.elements.each((index, el) => {\n        const element = el;\n        delete element.dom7AnimateInstance;\n      });\n      a.que = [];\n    },\n    done(complete) {\n      a.animating = false;\n      a.elements.each((index, el) => {\n        const element = el;\n        delete element.dom7AnimateInstance;\n      });\n      if (complete) complete(els);\n      if (a.que.length > 0) {\n        const que = a.que.shift();\n        a.animate(que[0], que[1]);\n      }\n    },\n    animate(props, params) {\n      if (a.animating) {\n        a.que.push([props, params]);\n        return a;\n      }\n      const elements = [];\n\n      // Define & Cache Initials & Units\n      a.elements.each((index, el) => {\n        let initialFullValue;\n        let initialValue;\n        let unit;\n        let finalValue;\n        let finalFullValue;\n\n        if (!el.dom7AnimateInstance) a.elements[index].dom7AnimateInstance = a;\n\n        elements[index] = {\n          container: el,\n        };\n        Object.keys(props).forEach((prop) => {\n          initialFullValue = window.getComputedStyle(el, null).getPropertyValue(prop).replace(',', '.');\n          initialValue = parseFloat(initialFullValue);\n          unit = initialFullValue.replace(initialValue, '');\n          finalValue = parseFloat(props[prop]);\n          finalFullValue = props[prop] + unit;\n          elements[index][prop] = {\n            initialFullValue,\n            initialValue,\n            unit,\n            finalValue,\n            finalFullValue,\n            currentValue: initialValue,\n          };\n        });\n      });\n\n      let startTime = null;\n      let time;\n      let elementsDone = 0;\n      let propsDone = 0;\n      let done;\n      let began = false;\n\n      a.animating = true;\n\n      function render() {\n        time = new Date().getTime();\n        let progress;\n        let easeProgress;\n        // let el;\n        if (!began) {\n          began = true;\n          if (params.begin) params.begin(els);\n        }\n        if (startTime === null) {\n          startTime = time;\n        }\n        if (params.progress) {\n          // eslint-disable-next-line\n          params.progress(els, Math.max(Math.min((time - startTime) / params.duration, 1), 0), ((startTime + params.duration) - time < 0 ? 0 : (startTime + params.duration) - time), startTime);\n        }\n\n        elements.forEach((element) => {\n          const el = element;\n          if (done || el.done) return;\n          Object.keys(props).forEach((prop) => {\n            if (done || el.done) return;\n            progress = Math.max(Math.min((time - startTime) / params.duration, 1), 0);\n            easeProgress = a.easingProgress(params.easing, progress);\n            const { initialValue, finalValue, unit } = el[prop];\n            el[prop].currentValue = initialValue + (easeProgress * (finalValue - initialValue));\n            const currentValue = el[prop].currentValue;\n\n            if (\n              (finalValue > initialValue && currentValue >= finalValue) ||\n              (finalValue < initialValue && currentValue <= finalValue)) {\n              el.container.style[prop] = finalValue + unit;\n              propsDone += 1;\n              if (propsDone === Object.keys(props).length) {\n                el.done = true;\n                elementsDone += 1;\n              }\n              if (elementsDone === elements.length) {\n                done = true;\n              }\n            }\n            if (done) {\n              a.done(params.complete);\n              return;\n            }\n            el.container.style[prop] = currentValue + unit;\n          });\n        });\n        if (done) return;\n        // Then call\n        a.frameId = requestAnimationFrame(render);\n      }\n      a.frameId = requestAnimationFrame(render);\n      return a;\n    },\n  };\n\n  if (a.elements.length === 0) {\n    return els;\n  }\n\n  let animateInstance;\n  for (let i = 0; i < a.elements.length; i += 1) {\n    if (a.elements[i].dom7AnimateInstance) {\n      animateInstance = a.elements[i].dom7AnimateInstance;\n    } else a.elements[i].dom7AnimateInstance = a;\n  }\n  if (!animateInstance) {\n    animateInstance = a;\n  }\n\n  if (initialProps === 'stop') {\n    animateInstance.stop();\n  } else {\n    animateInstance.animate(a.props, a.params);\n  }\n\n  return els;\n}\n\nfunction stop() {\n  const els = this;\n  for (let i = 0; i < els.length; i += 1) {\n    if (els[i].dom7AnimateInstance) {\n      els[i].dom7AnimateInstance.stop();\n    }\n  }\n}\n\nconst noTrigger = ('resize scroll').split(' ');\nfunction eventShortcut(name, ...args) {\n  if (typeof args[0] === 'undefined') {\n    for (let i = 0; i < this.length; i += 1) {\n      if (noTrigger.indexOf(name) < 0) {\n        if (name in this[i]) this[i][name]();\n        else {\n          $(this[i]).trigger(name);\n        }\n      }\n    }\n    return this;\n  }\n  return this.on(name, ...args);\n}\n\nfunction click(...args) {\n  return eventShortcut.bind(this)('click', ...args);\n}\nfunction blur(...args) {\n  return eventShortcut.bind(this)('blur', ...args);\n}\nfunction focus(...args) {\n  return eventShortcut.bind(this)('focus', ...args);\n}\nfunction focusin(...args) {\n  return eventShortcut.bind(this)('focusin', ...args);\n}\nfunction focusout(...args) {\n  return eventShortcut.bind(this)('focusout', ...args);\n}\nfunction keyup(...args) {\n  return eventShortcut.bind(this)('keyup', ...args);\n}\nfunction keydown(...args) {\n  return eventShortcut.bind(this)('keydown', ...args);\n}\nfunction keypress(...args) {\n  return eventShortcut.bind(this)('keypress', ...args);\n}\nfunction submit(...args) {\n  return eventShortcut.bind(this)('submit', ...args);\n}\nfunction change(...args) {\n  return eventShortcut.bind(this)('change', ...args);\n}\nfunction mousedown(...args) {\n  return eventShortcut.bind(this)('mousedown', ...args);\n}\nfunction mousemove(...args) {\n  return eventShortcut.bind(this)('mousemove', ...args);\n}\nfunction mouseup(...args) {\n  return eventShortcut.bind(this)('mouseup', ...args);\n}\nfunction mouseenter(...args) {\n  return eventShortcut.bind(this)('mouseenter', ...args);\n}\nfunction mouseleave(...args) {\n  return eventShortcut.bind(this)('mouseleave', ...args);\n}\nfunction mouseout(...args) {\n  return eventShortcut.bind(this)('mouseout', ...args);\n}\nfunction mouseover(...args) {\n  return eventShortcut.bind(this)('mouseover', ...args);\n}\nfunction touchstart(...args) {\n  return eventShortcut.bind(this)('touchstart', ...args);\n}\nfunction touchend(...args) {\n  return eventShortcut.bind(this)('touchend', ...args);\n}\nfunction touchmove(...args) {\n  return eventShortcut.bind(this)('touchmove', ...args);\n}\nfunction resize(...args) {\n  return eventShortcut.bind(this)('resize', ...args);\n}\nfunction scroll(...args) {\n  return eventShortcut.bind(this)('scroll', ...args);\n}\n\nexport { $, addClass, removeClass, hasClass, toggleClass, attr, removeAttr, prop, data, removeData, dataset, val, transform, transition, on, off, once, trigger, transitionEnd, animationEnd, width, outerWidth, height, outerHeight, offset, hide, show, styles, css, toArray, each, forEach, filter, map, html, text, is, indexOf, index, eq, append, appendTo, prepend, prependTo, insertBefore, insertAfter, next, nextAll, prev, prevAll, siblings, parent, parents, closest, find, children, remove, detach, add, empty, scrollTo, scrollTop, scrollLeft, animate, stop, click, blur, focus, focusin, focusout, keyup, keydown, keypress, submit, change, mousedown, mousemove, mouseup, mouseenter, mouseleave, mouseout, mouseover, touchstart, touchend, touchmove, resize, scroll };\n","/**\n * Swiper 4.3.3\n * Most modern mobile touch slider and framework with hardware accelerated transitions\n * http://www.idangero.us/swiper/\n *\n * Copyright 2014-2018 Vladimir Kharlampidi\n *\n * Released under the MIT License\n *\n * Released on: June 5, 2018\n */\n\nimport { $, addClass, removeClass, hasClass, toggleClass, attr, removeAttr, data, transform, transition, on, off, trigger, transitionEnd, outerWidth, outerHeight, offset, css, each, html, text, is, index, eq, append, prepend, next, nextAll, prev, prevAll, parent, parents, closest, find, children, remove, add, styles } from 'dom7/dist/dom7.modular';\nimport { window, document } from 'ssr-window';\n\nconst Methods = {\n  addClass,\n  removeClass,\n  hasClass,\n  toggleClass,\n  attr,\n  removeAttr,\n  data,\n  transform,\n  transition,\n  on,\n  off,\n  trigger,\n  transitionEnd,\n  outerWidth,\n  outerHeight,\n  offset,\n  css,\n  each,\n  html,\n  text,\n  is,\n  index,\n  eq,\n  append,\n  prepend,\n  next,\n  nextAll,\n  prev,\n  prevAll,\n  parent,\n  parents,\n  closest,\n  find,\n  children,\n  remove,\n  add,\n  styles,\n};\n\nObject.keys(Methods).forEach((methodName) => {\n  $.fn[methodName] = Methods[methodName];\n});\n\nconst Utils = {\n  deleteProps(obj) {\n    const object = obj;\n    Object.keys(object).forEach((key) => {\n      try {\n        object[key] = null;\n      } catch (e) {\n        // no getter for object\n      }\n      try {\n        delete object[key];\n      } catch (e) {\n        // something got wrong\n      }\n    });\n  },\n  nextTick(callback, delay = 0) {\n    return setTimeout(callback, delay);\n  },\n  now() {\n    return Date.now();\n  },\n  getTranslate(el, axis = 'x') {\n    let matrix;\n    let curTransform;\n    let transformMatrix;\n\n    const curStyle = window.getComputedStyle(el, null);\n\n    if (window.WebKitCSSMatrix) {\n      curTransform = curStyle.transform || curStyle.webkitTransform;\n      if (curTransform.split(',').length > 6) {\n        curTransform = curTransform.split(', ').map(a => a.replace(',', '.')).join(', ');\n      }\n      // Some old versions of Webkit choke when 'none' is passed; pass\n      // empty string instead in this case\n      transformMatrix = new window.WebKitCSSMatrix(curTransform === 'none' ? '' : curTransform);\n    } else {\n      transformMatrix = curStyle.MozTransform || curStyle.OTransform || curStyle.MsTransform || curStyle.msTransform || curStyle.transform || curStyle.getPropertyValue('transform').replace('translate(', 'matrix(1, 0, 0, 1,');\n      matrix = transformMatrix.toString().split(',');\n    }\n\n    if (axis === 'x') {\n      // Latest Chrome and webkits Fix\n      if (window.WebKitCSSMatrix) curTransform = transformMatrix.m41;\n      // Crazy IE10 Matrix\n      else if (matrix.length === 16) curTransform = parseFloat(matrix[12]);\n      // Normal Browsers\n      else curTransform = parseFloat(matrix[4]);\n    }\n    if (axis === 'y') {\n      // Latest Chrome and webkits Fix\n      if (window.WebKitCSSMatrix) curTransform = transformMatrix.m42;\n      // Crazy IE10 Matrix\n      else if (matrix.length === 16) curTransform = parseFloat(matrix[13]);\n      // Normal Browsers\n      else curTransform = parseFloat(matrix[5]);\n    }\n    return curTransform || 0;\n  },\n  parseUrlQuery(url) {\n    const query = {};\n    let urlToParse = url || window.location.href;\n    let i;\n    let params;\n    let param;\n    let length;\n    if (typeof urlToParse === 'string' && urlToParse.length) {\n      urlToParse = urlToParse.indexOf('?') > -1 ? urlToParse.replace(/\\S*\\?/, '') : '';\n      params = urlToParse.split('&').filter(paramsPart => paramsPart !== '');\n      length = params.length;\n\n      for (i = 0; i < length; i += 1) {\n        param = params[i].replace(/#\\S+/g, '').split('=');\n        query[decodeURIComponent(param[0])] = typeof param[1] === 'undefined' ? undefined : decodeURIComponent(param[1]) || '';\n      }\n    }\n    return query;\n  },\n  isObject(o) {\n    return typeof o === 'object' && o !== null && o.constructor && o.constructor === Object;\n  },\n  extend(...args) {\n    const to = Object(args[0]);\n    for (let i = 1; i < args.length; i += 1) {\n      const nextSource = args[i];\n      if (nextSource !== undefined && nextSource !== null) {\n        const keysArray = Object.keys(Object(nextSource));\n        for (let nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex += 1) {\n          const nextKey = keysArray[nextIndex];\n          const desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\n          if (desc !== undefined && desc.enumerable) {\n            if (Utils.isObject(to[nextKey]) && Utils.isObject(nextSource[nextKey])) {\n              Utils.extend(to[nextKey], nextSource[nextKey]);\n            } else if (!Utils.isObject(to[nextKey]) && Utils.isObject(nextSource[nextKey])) {\n              to[nextKey] = {};\n              Utils.extend(to[nextKey], nextSource[nextKey]);\n            } else {\n              to[nextKey] = nextSource[nextKey];\n            }\n          }\n        }\n      }\n    }\n    return to;\n  },\n};\n\nconst Support = (function Support() {\n  const testDiv = document.createElement('div');\n  return {\n    touch: (window.Modernizr && window.Modernizr.touch === true) || (function checkTouch() {\n      return !!(('ontouchstart' in window) || (window.DocumentTouch && document instanceof window.DocumentTouch));\n    }()),\n\n    pointerEvents: !!(window.navigator.pointerEnabled || window.PointerEvent),\n    prefixedPointerEvents: !!window.navigator.msPointerEnabled,\n\n    transition: (function checkTransition() {\n      const style = testDiv.style;\n      return ('transition' in style || 'webkitTransition' in style || 'MozTransition' in style);\n    }()),\n    transforms3d: (window.Modernizr && window.Modernizr.csstransforms3d === true) || (function checkTransforms3d() {\n      const style = testDiv.style;\n      return ('webkitPerspective' in style || 'MozPerspective' in style || 'OPerspective' in style || 'MsPerspective' in style || 'perspective' in style);\n    }()),\n\n    flexbox: (function checkFlexbox() {\n      const style = testDiv.style;\n      const styles$$1 = ('alignItems webkitAlignItems webkitBoxAlign msFlexAlign mozBoxAlign webkitFlexDirection msFlexDirection mozBoxDirection mozBoxOrient webkitBoxDirection webkitBoxOrient').split(' ');\n      for (let i = 0; i < styles$$1.length; i += 1) {\n        if (styles$$1[i] in style) return true;\n      }\n      return false;\n    }()),\n\n    observer: (function checkObserver() {\n      return ('MutationObserver' in window || 'WebkitMutationObserver' in window);\n    }()),\n\n    passiveListener: (function checkPassiveListener() {\n      let supportsPassive = false;\n      try {\n        const opts = Object.defineProperty({}, 'passive', {\n          // eslint-disable-next-line\n          get() {\n            supportsPassive = true;\n          },\n        });\n        window.addEventListener('testPassiveListener', null, opts);\n      } catch (e) {\n        // No support\n      }\n      return supportsPassive;\n    }()),\n\n    gestures: (function checkGestures() {\n      return 'ongesturestart' in window;\n    }()),\n  };\n}());\n\nclass SwiperClass {\n  constructor(params = {}) {\n    const self = this;\n    self.params = params;\n\n    // Events\n    self.eventsListeners = {};\n\n    if (self.params && self.params.on) {\n      Object.keys(self.params.on).forEach((eventName) => {\n        self.on(eventName, self.params.on[eventName]);\n      });\n    }\n  }\n  on(events, handler, priority) {\n    const self = this;\n    if (typeof handler !== 'function') return self;\n    const method = priority ? 'unshift' : 'push';\n    events.split(' ').forEach((event) => {\n      if (!self.eventsListeners[event]) self.eventsListeners[event] = [];\n      self.eventsListeners[event][method](handler);\n    });\n    return self;\n  }\n  once(events, handler, priority) {\n    const self = this;\n    if (typeof handler !== 'function') return self;\n    function onceHandler(...args) {\n      handler.apply(self, args);\n      self.off(events, onceHandler);\n    }\n    return self.on(events, onceHandler, priority);\n  }\n  off(events, handler) {\n    const self = this;\n    if (!self.eventsListeners) return self;\n    events.split(' ').forEach((event) => {\n      if (typeof handler === 'undefined') {\n        self.eventsListeners[event] = [];\n      } else {\n        self.eventsListeners[event].forEach((eventHandler, index$$1) => {\n          if (eventHandler === handler) {\n            self.eventsListeners[event].splice(index$$1, 1);\n          }\n        });\n      }\n    });\n    return self;\n  }\n  emit(...args) {\n    const self = this;\n    if (!self.eventsListeners) return self;\n    let events;\n    let data$$1;\n    let context;\n    if (typeof args[0] === 'string' || Array.isArray(args[0])) {\n      events = args[0];\n      data$$1 = args.slice(1, args.length);\n      context = self;\n    } else {\n      events = args[0].events;\n      data$$1 = args[0].data;\n      context = args[0].context || self;\n    }\n    const eventsArray = Array.isArray(events) ? events : events.split(' ');\n    eventsArray.forEach((event) => {\n      if (self.eventsListeners && self.eventsListeners[event]) {\n        const handlers = [];\n        self.eventsListeners[event].forEach((eventHandler) => {\n          handlers.push(eventHandler);\n        });\n        handlers.forEach((eventHandler) => {\n          eventHandler.apply(context, data$$1);\n        });\n      }\n    });\n    return self;\n  }\n  useModulesParams(instanceParams) {\n    const instance = this;\n    if (!instance.modules) return;\n    Object.keys(instance.modules).forEach((moduleName) => {\n      const module = instance.modules[moduleName];\n      // Extend params\n      if (module.params) {\n        Utils.extend(instanceParams, module.params);\n      }\n    });\n  }\n  useModules(modulesParams = {}) {\n    const instance = this;\n    if (!instance.modules) return;\n    Object.keys(instance.modules).forEach((moduleName) => {\n      const module = instance.modules[moduleName];\n      const moduleParams = modulesParams[moduleName] || {};\n      // Extend instance methods and props\n      if (module.instance) {\n        Object.keys(module.instance).forEach((modulePropName) => {\n          const moduleProp = module.instance[modulePropName];\n          if (typeof moduleProp === 'function') {\n            instance[modulePropName] = moduleProp.bind(instance);\n          } else {\n            instance[modulePropName] = moduleProp;\n          }\n        });\n      }\n      // Add event listeners\n      if (module.on && instance.on) {\n        Object.keys(module.on).forEach((moduleEventName) => {\n          instance.on(moduleEventName, module.on[moduleEventName]);\n        });\n      }\n\n      // Module create callback\n      if (module.create) {\n        module.create.bind(instance)(moduleParams);\n      }\n    });\n  }\n  static set components(components) {\n    const Class = this;\n    if (!Class.use) return;\n    Class.use(components);\n  }\n  static installModule(module, ...params) {\n    const Class = this;\n    if (!Class.prototype.modules) Class.prototype.modules = {};\n    const name = module.name || (`${Object.keys(Class.prototype.modules).length}_${Utils.now()}`);\n    Class.prototype.modules[name] = module;\n    // Prototype\n    if (module.proto) {\n      Object.keys(module.proto).forEach((key) => {\n        Class.prototype[key] = module.proto[key];\n      });\n    }\n    // Class\n    if (module.static) {\n      Object.keys(module.static).forEach((key) => {\n        Class[key] = module.static[key];\n      });\n    }\n    // Callback\n    if (module.install) {\n      module.install.apply(Class, params);\n    }\n    return Class;\n  }\n  static use(module, ...params) {\n    const Class = this;\n    if (Array.isArray(module)) {\n      module.forEach(m => Class.installModule(m));\n      return Class;\n    }\n    return Class.installModule(module, ...params);\n  }\n}\n\nfunction updateSize () {\n  const swiper = this;\n  let width;\n  let height;\n  const $el = swiper.$el;\n  if (typeof swiper.params.width !== 'undefined') {\n    width = swiper.params.width;\n  } else {\n    width = $el[0].clientWidth;\n  }\n  if (typeof swiper.params.height !== 'undefined') {\n    height = swiper.params.height;\n  } else {\n    height = $el[0].clientHeight;\n  }\n  if ((width === 0 && swiper.isHorizontal()) || (height === 0 && swiper.isVertical())) {\n    return;\n  }\n\n  // Subtract paddings\n  width = width - parseInt($el.css('padding-left'), 10) - parseInt($el.css('padding-right'), 10);\n  height = height - parseInt($el.css('padding-top'), 10) - parseInt($el.css('padding-bottom'), 10);\n\n  Utils.extend(swiper, {\n    width,\n    height,\n    size: swiper.isHorizontal() ? width : height,\n  });\n}\n\nfunction updateSlides () {\n  const swiper = this;\n  const params = swiper.params;\n\n  const {\n    $wrapperEl, size: swiperSize, rtlTranslate: rtl, wrongRTL,\n  } = swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n  const previousSlidesLength = isVirtual ? swiper.virtual.slides.length : swiper.slides.length;\n  const slides = $wrapperEl.children(`.${swiper.params.slideClass}`);\n  const slidesLength = isVirtual ? swiper.virtual.slides.length : slides.length;\n  let snapGrid = [];\n  const slidesGrid = [];\n  const slidesSizesGrid = [];\n\n  let offsetBefore = params.slidesOffsetBefore;\n  if (typeof offsetBefore === 'function') {\n    offsetBefore = params.slidesOffsetBefore.call(swiper);\n  }\n\n  let offsetAfter = params.slidesOffsetAfter;\n  if (typeof offsetAfter === 'function') {\n    offsetAfter = params.slidesOffsetAfter.call(swiper);\n  }\n\n  const previousSnapGridLength = swiper.snapGrid.length;\n  const previousSlidesGridLength = swiper.snapGrid.length;\n\n  let spaceBetween = params.spaceBetween;\n  let slidePosition = -offsetBefore;\n  let prevSlideSize = 0;\n  let index$$1 = 0;\n  if (typeof swiperSize === 'undefined') {\n    return;\n  }\n  if (typeof spaceBetween === 'string' && spaceBetween.indexOf('%') >= 0) {\n    spaceBetween = (parseFloat(spaceBetween.replace('%', '')) / 100) * swiperSize;\n  }\n\n  swiper.virtualSize = -spaceBetween;\n\n  // reset margins\n  if (rtl) slides.css({ marginLeft: '', marginTop: '' });\n  else slides.css({ marginRight: '', marginBottom: '' });\n\n  let slidesNumberEvenToRows;\n  if (params.slidesPerColumn > 1) {\n    if (Math.floor(slidesLength / params.slidesPerColumn) === slidesLength / swiper.params.slidesPerColumn) {\n      slidesNumberEvenToRows = slidesLength;\n    } else {\n      slidesNumberEvenToRows = Math.ceil(slidesLength / params.slidesPerColumn) * params.slidesPerColumn;\n    }\n    if (params.slidesPerView !== 'auto' && params.slidesPerColumnFill === 'row') {\n      slidesNumberEvenToRows = Math.max(slidesNumberEvenToRows, params.slidesPerView * params.slidesPerColumn);\n    }\n  }\n\n  // Calc slides\n  let slideSize;\n  const slidesPerColumn = params.slidesPerColumn;\n  const slidesPerRow = slidesNumberEvenToRows / slidesPerColumn;\n  const numFullColumns = slidesPerRow - ((params.slidesPerColumn * slidesPerRow) - slidesLength);\n  for (let i = 0; i < slidesLength; i += 1) {\n    slideSize = 0;\n    const slide = slides.eq(i);\n    if (params.slidesPerColumn > 1) {\n      // Set slides order\n      let newSlideOrderIndex;\n      let column;\n      let row;\n      if (params.slidesPerColumnFill === 'column') {\n        column = Math.floor(i / slidesPerColumn);\n        row = i - (column * slidesPerColumn);\n        if (column > numFullColumns || (column === numFullColumns && row === slidesPerColumn - 1)) {\n          row += 1;\n          if (row >= slidesPerColumn) {\n            row = 0;\n            column += 1;\n          }\n        }\n        newSlideOrderIndex = column + ((row * slidesNumberEvenToRows) / slidesPerColumn);\n        slide\n          .css({\n            '-webkit-box-ordinal-group': newSlideOrderIndex,\n            '-moz-box-ordinal-group': newSlideOrderIndex,\n            '-ms-flex-order': newSlideOrderIndex,\n            '-webkit-order': newSlideOrderIndex,\n            order: newSlideOrderIndex,\n          });\n      } else {\n        row = Math.floor(i / slidesPerRow);\n        column = i - (row * slidesPerRow);\n      }\n      slide\n        .css(\n          `margin-${swiper.isHorizontal() ? 'top' : 'left'}`,\n          (row !== 0 && params.spaceBetween) && (`${params.spaceBetween}px`)\n        )\n        .attr('data-swiper-column', column)\n        .attr('data-swiper-row', row);\n    }\n    if (slide.css('display') === 'none') continue; // eslint-disable-line\n\n    if (params.slidesPerView === 'auto') {\n      const slideStyles = window.getComputedStyle(slide[0], null);\n      const currentTransform = slide[0].style.transform;\n      const currentWebKitTransform = slide[0].style.webkitTransform;\n      if (currentTransform) {\n        slide[0].style.transform = 'none';\n      }\n      if (currentWebKitTransform) {\n        slide[0].style.webkitTransform = 'none';\n      }\n      if (swiper.isHorizontal()) {\n        slideSize = slide[0].getBoundingClientRect().width +\n          parseFloat(slideStyles.getPropertyValue('margin-left')) +\n          parseFloat(slideStyles.getPropertyValue('margin-right'));\n      } else {\n        slideSize = slide[0].getBoundingClientRect().height +\n          parseFloat(slideStyles.getPropertyValue('margin-top')) +\n          parseFloat(slideStyles.getPropertyValue('margin-bottom'));\n      }\n      if (currentTransform) {\n        slide[0].style.transform = currentTransform;\n      }\n      if (currentWebKitTransform) {\n        slide[0].style.webkitTransform = currentWebKitTransform;\n      }\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n    } else {\n      slideSize = (swiperSize - ((params.slidesPerView - 1) * spaceBetween)) / params.slidesPerView;\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n\n      if (slides[i]) {\n        if (swiper.isHorizontal()) {\n          slides[i].style.width = `${slideSize}px`;\n        } else {\n          slides[i].style.height = `${slideSize}px`;\n        }\n      }\n    }\n    if (slides[i]) {\n      slides[i].swiperSlideSize = slideSize;\n    }\n    slidesSizesGrid.push(slideSize);\n\n\n    if (params.centeredSlides) {\n      slidePosition = slidePosition + (slideSize / 2) + (prevSlideSize / 2) + spaceBetween;\n      if (prevSlideSize === 0 && i !== 0) slidePosition = slidePosition - (swiperSize / 2) - spaceBetween;\n      if (i === 0) slidePosition = slidePosition - (swiperSize / 2) - spaceBetween;\n      if (Math.abs(slidePosition) < 1 / 1000) slidePosition = 0;\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if ((index$$1) % params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n    } else {\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if ((index$$1) % params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n      slidePosition = slidePosition + slideSize + spaceBetween;\n    }\n\n    swiper.virtualSize += slideSize + spaceBetween;\n\n    prevSlideSize = slideSize;\n\n    index$$1 += 1;\n  }\n  swiper.virtualSize = Math.max(swiper.virtualSize, swiperSize) + offsetAfter;\n  let newSlidesGrid;\n\n  if (\n    rtl && wrongRTL && (params.effect === 'slide' || params.effect === 'coverflow')) {\n    $wrapperEl.css({ width: `${swiper.virtualSize + params.spaceBetween}px` });\n  }\n  if (!Support.flexbox || params.setWrapperSize) {\n    if (swiper.isHorizontal()) $wrapperEl.css({ width: `${swiper.virtualSize + params.spaceBetween}px` });\n    else $wrapperEl.css({ height: `${swiper.virtualSize + params.spaceBetween}px` });\n  }\n\n  if (params.slidesPerColumn > 1) {\n    swiper.virtualSize = (slideSize + params.spaceBetween) * slidesNumberEvenToRows;\n    swiper.virtualSize = Math.ceil(swiper.virtualSize / params.slidesPerColumn) - params.spaceBetween;\n    if (swiper.isHorizontal()) $wrapperEl.css({ width: `${swiper.virtualSize + params.spaceBetween}px` });\n    else $wrapperEl.css({ height: `${swiper.virtualSize + params.spaceBetween}px` });\n    if (params.centeredSlides) {\n      newSlidesGrid = [];\n      for (let i = 0; i < snapGrid.length; i += 1) {\n        let slidesGridItem = snapGrid[i];\n        if (params.roundLengths) slidesGridItem = Math.floor(slidesGridItem);\n        if (snapGrid[i] < swiper.virtualSize + snapGrid[0]) newSlidesGrid.push(slidesGridItem);\n      }\n      snapGrid = newSlidesGrid;\n    }\n  }\n\n  // Remove last grid elements depending on width\n  if (!params.centeredSlides) {\n    newSlidesGrid = [];\n    for (let i = 0; i < snapGrid.length; i += 1) {\n      let slidesGridItem = snapGrid[i];\n      if (params.roundLengths) slidesGridItem = Math.floor(slidesGridItem);\n      if (snapGrid[i] <= swiper.virtualSize - swiperSize) {\n        newSlidesGrid.push(slidesGridItem);\n      }\n    }\n    snapGrid = newSlidesGrid;\n    if (Math.floor(swiper.virtualSize - swiperSize) - Math.floor(snapGrid[snapGrid.length - 1]) > 1) {\n      snapGrid.push(swiper.virtualSize - swiperSize);\n    }\n  }\n  if (snapGrid.length === 0) snapGrid = [0];\n\n  if (params.spaceBetween !== 0) {\n    if (swiper.isHorizontal()) {\n      if (rtl) slides.css({ marginLeft: `${spaceBetween}px` });\n      else slides.css({ marginRight: `${spaceBetween}px` });\n    } else slides.css({ marginBottom: `${spaceBetween}px` });\n  }\n\n  Utils.extend(swiper, {\n    slides,\n    snapGrid,\n    slidesGrid,\n    slidesSizesGrid,\n  });\n\n  if (slidesLength !== previousSlidesLength) {\n    swiper.emit('slidesLengthChange');\n  }\n  if (snapGrid.length !== previousSnapGridLength) {\n    if (swiper.params.watchOverflow) swiper.checkOverflow();\n    swiper.emit('snapGridLengthChange');\n  }\n  if (slidesGrid.length !== previousSlidesGridLength) {\n    swiper.emit('slidesGridLengthChange');\n  }\n\n  if (params.watchSlidesProgress || params.watchSlidesVisibility) {\n    swiper.updateSlidesOffset();\n  }\n}\n\nfunction updateAutoHeight (speed) {\n  const swiper = this;\n  const activeSlides = [];\n  let newHeight = 0;\n  let i;\n  if (typeof speed === 'number') {\n    swiper.setTransition(speed);\n  } else if (speed === true) {\n    swiper.setTransition(swiper.params.speed);\n  }\n  // Find slides currently in view\n  if (swiper.params.slidesPerView !== 'auto' && swiper.params.slidesPerView > 1) {\n    for (i = 0; i < Math.ceil(swiper.params.slidesPerView); i += 1) {\n      const index$$1 = swiper.activeIndex + i;\n      if (index$$1 > swiper.slides.length) break;\n      activeSlides.push(swiper.slides.eq(index$$1)[0]);\n    }\n  } else {\n    activeSlides.push(swiper.slides.eq(swiper.activeIndex)[0]);\n  }\n\n  // Find new height from highest slide in view\n  for (i = 0; i < activeSlides.length; i += 1) {\n    if (typeof activeSlides[i] !== 'undefined') {\n      const height = activeSlides[i].offsetHeight;\n      newHeight = height > newHeight ? height : newHeight;\n    }\n  }\n\n  // Update Height\n  if (newHeight) swiper.$wrapperEl.css('height', `${newHeight}px`);\n}\n\nfunction updateSlidesOffset () {\n  const swiper = this;\n  const slides = swiper.slides;\n  for (let i = 0; i < slides.length; i += 1) {\n    slides[i].swiperSlideOffset = swiper.isHorizontal() ? slides[i].offsetLeft : slides[i].offsetTop;\n  }\n}\n\nfunction updateSlidesProgress (translate = (this && this.translate) || 0) {\n  const swiper = this;\n  const params = swiper.params;\n\n  const { slides, rtlTranslate: rtl } = swiper;\n\n  if (slides.length === 0) return;\n  if (typeof slides[0].swiperSlideOffset === 'undefined') swiper.updateSlidesOffset();\n\n  let offsetCenter = -translate;\n  if (rtl) offsetCenter = translate;\n\n  // Visible Slides\n  slides.removeClass(params.slideVisibleClass);\n\n  for (let i = 0; i < slides.length; i += 1) {\n    const slide = slides[i];\n    const slideProgress =\n      (\n        (offsetCenter + (params.centeredSlides ? swiper.minTranslate() : 0)) - slide.swiperSlideOffset\n      ) / (slide.swiperSlideSize + params.spaceBetween);\n    if (params.watchSlidesVisibility) {\n      const slideBefore = -(offsetCenter - slide.swiperSlideOffset);\n      const slideAfter = slideBefore + swiper.slidesSizesGrid[i];\n      const isVisible =\n                (slideBefore >= 0 && slideBefore < swiper.size) ||\n                (slideAfter > 0 && slideAfter <= swiper.size) ||\n                (slideBefore <= 0 && slideAfter >= swiper.size);\n      if (isVisible) {\n        slides.eq(i).addClass(params.slideVisibleClass);\n      }\n    }\n    slide.progress = rtl ? -slideProgress : slideProgress;\n  }\n}\n\nfunction updateProgress (translate = (this && this.translate) || 0) {\n  const swiper = this;\n  const params = swiper.params;\n\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  let { progress, isBeginning, isEnd } = swiper;\n  const wasBeginning = isBeginning;\n  const wasEnd = isEnd;\n  if (translatesDiff === 0) {\n    progress = 0;\n    isBeginning = true;\n    isEnd = true;\n  } else {\n    progress = (translate - swiper.minTranslate()) / (translatesDiff);\n    isBeginning = progress <= 0;\n    isEnd = progress >= 1;\n  }\n  Utils.extend(swiper, {\n    progress,\n    isBeginning,\n    isEnd,\n  });\n\n  if (params.watchSlidesProgress || params.watchSlidesVisibility) swiper.updateSlidesProgress(translate);\n\n  if (isBeginning && !wasBeginning) {\n    swiper.emit('reachBeginning toEdge');\n  }\n  if (isEnd && !wasEnd) {\n    swiper.emit('reachEnd toEdge');\n  }\n  if ((wasBeginning && !isBeginning) || (wasEnd && !isEnd)) {\n    swiper.emit('fromEdge');\n  }\n\n  swiper.emit('progress', progress);\n}\n\nfunction updateSlidesClasses () {\n  const swiper = this;\n\n  const {\n    slides, params, $wrapperEl, activeIndex, realIndex,\n  } = swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n\n  slides.removeClass(`${params.slideActiveClass} ${params.slideNextClass} ${params.slidePrevClass} ${params.slideDuplicateActiveClass} ${params.slideDuplicateNextClass} ${params.slideDuplicatePrevClass}`);\n\n  let activeSlide;\n  if (isVirtual) {\n    activeSlide = swiper.$wrapperEl.find(`.${params.slideClass}[data-swiper-slide-index=\"${activeIndex}\"]`);\n  } else {\n    activeSlide = slides.eq(activeIndex);\n  }\n\n  // Active classes\n  activeSlide.addClass(params.slideActiveClass);\n\n  if (params.loop) {\n    // Duplicate to all looped slides\n    if (activeSlide.hasClass(params.slideDuplicateClass)) {\n      $wrapperEl\n        .children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index=\"${realIndex}\"]`)\n        .addClass(params.slideDuplicateActiveClass);\n    } else {\n      $wrapperEl\n        .children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index=\"${realIndex}\"]`)\n        .addClass(params.slideDuplicateActiveClass);\n    }\n  }\n  // Next Slide\n  let nextSlide = activeSlide.nextAll(`.${params.slideClass}`).eq(0).addClass(params.slideNextClass);\n  if (params.loop && nextSlide.length === 0) {\n    nextSlide = slides.eq(0);\n    nextSlide.addClass(params.slideNextClass);\n  }\n  // Prev Slide\n  let prevSlide = activeSlide.prevAll(`.${params.slideClass}`).eq(0).addClass(params.slidePrevClass);\n  if (params.loop && prevSlide.length === 0) {\n    prevSlide = slides.eq(-1);\n    prevSlide.addClass(params.slidePrevClass);\n  }\n  if (params.loop) {\n    // Duplicate to all looped slides\n    if (nextSlide.hasClass(params.slideDuplicateClass)) {\n      $wrapperEl\n        .children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index=\"${nextSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicateNextClass);\n    } else {\n      $wrapperEl\n        .children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index=\"${nextSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicateNextClass);\n    }\n    if (prevSlide.hasClass(params.slideDuplicateClass)) {\n      $wrapperEl\n        .children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index=\"${prevSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicatePrevClass);\n    } else {\n      $wrapperEl\n        .children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index=\"${prevSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicatePrevClass);\n    }\n  }\n}\n\nfunction updateActiveIndex (newActiveIndex) {\n  const swiper = this;\n  const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n  const {\n    slidesGrid, snapGrid, params, activeIndex: previousIndex, realIndex: previousRealIndex, snapIndex: previousSnapIndex,\n  } = swiper;\n  let activeIndex = newActiveIndex;\n  let snapIndex;\n  if (typeof activeIndex === 'undefined') {\n    for (let i = 0; i < slidesGrid.length; i += 1) {\n      if (typeof slidesGrid[i + 1] !== 'undefined') {\n        if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1] - ((slidesGrid[i + 1] - slidesGrid[i]) / 2)) {\n          activeIndex = i;\n        } else if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1]) {\n          activeIndex = i + 1;\n        }\n      } else if (translate >= slidesGrid[i]) {\n        activeIndex = i;\n      }\n    }\n    // Normalize slideIndex\n    if (params.normalizeSlideIndex) {\n      if (activeIndex < 0 || typeof activeIndex === 'undefined') activeIndex = 0;\n    }\n  }\n  if (snapGrid.indexOf(translate) >= 0) {\n    snapIndex = snapGrid.indexOf(translate);\n  } else {\n    snapIndex = Math.floor(activeIndex / params.slidesPerGroup);\n  }\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n  if (activeIndex === previousIndex) {\n    if (snapIndex !== previousSnapIndex) {\n      swiper.snapIndex = snapIndex;\n      swiper.emit('snapIndexChange');\n    }\n    return;\n  }\n\n  // Get real index\n  const realIndex = parseInt(swiper.slides.eq(activeIndex).attr('data-swiper-slide-index') || activeIndex, 10);\n\n  Utils.extend(swiper, {\n    snapIndex,\n    realIndex,\n    previousIndex,\n    activeIndex,\n  });\n  swiper.emit('activeIndexChange');\n  swiper.emit('snapIndexChange');\n  if (previousRealIndex !== realIndex) {\n    swiper.emit('realIndexChange');\n  }\n  swiper.emit('slideChange');\n}\n\nfunction updateClickedSlide (e) {\n  const swiper = this;\n  const params = swiper.params;\n  const slide = $(e.target).closest(`.${params.slideClass}`)[0];\n  let slideFound = false;\n  if (slide) {\n    for (let i = 0; i < swiper.slides.length; i += 1) {\n      if (swiper.slides[i] === slide) slideFound = true;\n    }\n  }\n\n  if (slide && slideFound) {\n    swiper.clickedSlide = slide;\n    if (swiper.virtual && swiper.params.virtual.enabled) {\n      swiper.clickedIndex = parseInt($(slide).attr('data-swiper-slide-index'), 10);\n    } else {\n      swiper.clickedIndex = $(slide).index();\n    }\n  } else {\n    swiper.clickedSlide = undefined;\n    swiper.clickedIndex = undefined;\n    return;\n  }\n  if (params.slideToClickedSlide && swiper.clickedIndex !== undefined && swiper.clickedIndex !== swiper.activeIndex) {\n    swiper.slideToClickedSlide();\n  }\n}\n\nvar update = {\n  updateSize,\n  updateSlides,\n  updateAutoHeight,\n  updateSlidesOffset,\n  updateSlidesProgress,\n  updateProgress,\n  updateSlidesClasses,\n  updateActiveIndex,\n  updateClickedSlide,\n};\n\nfunction getTranslate (axis = this.isHorizontal() ? 'x' : 'y') {\n  const swiper = this;\n\n  const {\n    params, rtlTranslate: rtl, translate, $wrapperEl,\n  } = swiper;\n\n  if (params.virtualTranslate) {\n    return rtl ? -translate : translate;\n  }\n\n  let currentTranslate = Utils.getTranslate($wrapperEl[0], axis);\n  if (rtl) currentTranslate = -currentTranslate;\n\n  return currentTranslate || 0;\n}\n\nfunction setTranslate (translate, byController) {\n  const swiper = this;\n  const {\n    rtlTranslate: rtl, params, $wrapperEl, progress,\n  } = swiper;\n  let x = 0;\n  let y = 0;\n  const z = 0;\n\n  if (swiper.isHorizontal()) {\n    x = rtl ? -translate : translate;\n  } else {\n    y = translate;\n  }\n\n  if (params.roundLengths) {\n    x = Math.floor(x);\n    y = Math.floor(y);\n  }\n\n  if (!params.virtualTranslate) {\n    if (Support.transforms3d) $wrapperEl.transform(`translate3d(${x}px, ${y}px, ${z}px)`);\n    else $wrapperEl.transform(`translate(${x}px, ${y}px)`);\n  }\n  swiper.previousTranslate = swiper.translate;\n  swiper.translate = swiper.isHorizontal() ? x : y;\n\n  // Check if we need to update progress\n  let newProgress;\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  if (translatesDiff === 0) {\n    newProgress = 0;\n  } else {\n    newProgress = (translate - swiper.minTranslate()) / (translatesDiff);\n  }\n  if (newProgress !== progress) {\n    swiper.updateProgress(translate);\n  }\n\n  swiper.emit('setTranslate', swiper.translate, byController);\n}\n\nfunction minTranslate () {\n  return (-this.snapGrid[0]);\n}\n\nfunction maxTranslate () {\n  return (-this.snapGrid[this.snapGrid.length - 1]);\n}\n\nvar translate = {\n  getTranslate,\n  setTranslate,\n  minTranslate,\n  maxTranslate,\n};\n\nfunction setTransition (duration, byController) {\n  const swiper = this;\n\n  swiper.$wrapperEl.transition(duration);\n\n  swiper.emit('setTransition', duration, byController);\n}\n\nfunction transitionStart (runCallbacks = true, direction) {\n  const swiper = this;\n  const { activeIndex, params, previousIndex } = swiper;\n  if (params.autoHeight) {\n    swiper.updateAutoHeight();\n  }\n\n  let dir = direction;\n  if (!dir) {\n    if (activeIndex > previousIndex) dir = 'next';\n    else if (activeIndex < previousIndex) dir = 'prev';\n    else dir = 'reset';\n  }\n\n  swiper.emit('transitionStart');\n\n  if (runCallbacks && activeIndex !== previousIndex) {\n    if (dir === 'reset') {\n      swiper.emit('slideResetTransitionStart');\n      return;\n    }\n    swiper.emit('slideChangeTransitionStart');\n    if (dir === 'next') {\n      swiper.emit('slideNextTransitionStart');\n    } else {\n      swiper.emit('slidePrevTransitionStart');\n    }\n  }\n}\n\nfunction transitionEnd$1 (runCallbacks = true, direction) {\n  const swiper = this;\n  const { activeIndex, previousIndex } = swiper;\n  swiper.animating = false;\n  swiper.setTransition(0);\n\n  let dir = direction;\n  if (!dir) {\n    if (activeIndex > previousIndex) dir = 'next';\n    else if (activeIndex < previousIndex) dir = 'prev';\n    else dir = 'reset';\n  }\n\n  swiper.emit('transitionEnd');\n\n  if (runCallbacks && activeIndex !== previousIndex) {\n    if (dir === 'reset') {\n      swiper.emit('slideResetTransitionEnd');\n      return;\n    }\n    swiper.emit('slideChangeTransitionEnd');\n    if (dir === 'next') {\n      swiper.emit('slideNextTransitionEnd');\n    } else {\n      swiper.emit('slidePrevTransitionEnd');\n    }\n  }\n}\n\nvar transition$1 = {\n  setTransition,\n  transitionStart,\n  transitionEnd: transitionEnd$1,\n};\n\nfunction slideTo (index$$1 = 0, speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  let slideIndex = index$$1;\n  if (slideIndex < 0) slideIndex = 0;\n\n  const {\n    params, snapGrid, slidesGrid, previousIndex, activeIndex, rtlTranslate: rtl,\n  } = swiper;\n  if (swiper.animating && params.preventIntercationOnTransition) {\n    return false;\n  }\n\n  let snapIndex = Math.floor(slideIndex / params.slidesPerGroup);\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n\n  if ((activeIndex || params.initialSlide || 0) === (previousIndex || 0) && runCallbacks) {\n    swiper.emit('beforeSlideChangeStart');\n  }\n\n  const translate = -snapGrid[snapIndex];\n\n  // Update progress\n  swiper.updateProgress(translate);\n\n  // Normalize slideIndex\n  if (params.normalizeSlideIndex) {\n    for (let i = 0; i < slidesGrid.length; i += 1) {\n      if (-Math.floor(translate * 100) >= Math.floor(slidesGrid[i] * 100)) {\n        slideIndex = i;\n      }\n    }\n  }\n  // Directions locks\n  if (swiper.initialized && slideIndex !== activeIndex) {\n    if (!swiper.allowSlideNext && translate < swiper.translate && translate < swiper.minTranslate()) {\n      return false;\n    }\n    if (!swiper.allowSlidePrev && translate > swiper.translate && translate > swiper.maxTranslate()) {\n      if ((activeIndex || 0) !== slideIndex) return false;\n    }\n  }\n\n  let direction;\n  if (slideIndex > activeIndex) direction = 'next';\n  else if (slideIndex < activeIndex) direction = 'prev';\n  else direction = 'reset';\n\n\n  // Update Index\n  if ((rtl && -translate === swiper.translate) || (!rtl && translate === swiper.translate)) {\n    swiper.updateActiveIndex(slideIndex);\n    // Update Height\n    if (params.autoHeight) {\n      swiper.updateAutoHeight();\n    }\n    swiper.updateSlidesClasses();\n    if (params.effect !== 'slide') {\n      swiper.setTranslate(translate);\n    }\n    if (direction !== 'reset') {\n      swiper.transitionStart(runCallbacks, direction);\n      swiper.transitionEnd(runCallbacks, direction);\n    }\n    return false;\n  }\n\n  if (speed === 0 || !Support.transition) {\n    swiper.setTransition(0);\n    swiper.setTranslate(translate);\n    swiper.updateActiveIndex(slideIndex);\n    swiper.updateSlidesClasses();\n    swiper.emit('beforeTransitionStart', speed, internal);\n    swiper.transitionStart(runCallbacks, direction);\n    swiper.transitionEnd(runCallbacks, direction);\n  } else {\n    swiper.setTransition(speed);\n    swiper.setTranslate(translate);\n    swiper.updateActiveIndex(slideIndex);\n    swiper.updateSlidesClasses();\n    swiper.emit('beforeTransitionStart', speed, internal);\n    swiper.transitionStart(runCallbacks, direction);\n    if (!swiper.animating) {\n      swiper.animating = true;\n      if (!swiper.onSlideToWrapperTransitionEnd) {\n        swiper.onSlideToWrapperTransitionEnd = function transitionEnd$$1(e) {\n          if (!swiper || swiper.destroyed) return;\n          if (e.target !== this) return;\n          swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n          swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.onSlideToWrapperTransitionEnd);\n          swiper.transitionEnd(runCallbacks, direction);\n        };\n      }\n      swiper.$wrapperEl[0].addEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n      swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.onSlideToWrapperTransitionEnd);\n    }\n  }\n\n  return true;\n}\n\nfunction slideToLoop (index$$1 = 0, speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  let newIndex = index$$1;\n  if (swiper.params.loop) {\n    newIndex += swiper.loopedSlides;\n  }\n\n  return swiper.slideTo(newIndex, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slideNext (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  const { params, animating } = swiper;\n  if (params.loop) {\n    if (animating) return false;\n    swiper.loopFix();\n    // eslint-disable-next-line\n    swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n    return swiper.slideTo(swiper.activeIndex + params.slidesPerGroup, speed, runCallbacks, internal);\n  }\n  return swiper.slideTo(swiper.activeIndex + params.slidesPerGroup, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slidePrev (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  const {\n    params, animating, snapGrid, slidesGrid, rtlTranslate,\n  } = swiper;\n\n  if (params.loop) {\n    if (animating) return false;\n    swiper.loopFix();\n    // eslint-disable-next-line\n    swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n  }\n  const translate = rtlTranslate ? swiper.translate : -swiper.translate;\n  function normalize(val) {\n    if (val < 0) return -Math.floor(Math.abs(val));\n    return Math.floor(val);\n  }\n  const normalizedTranslate = normalize(translate);\n  const normalizedSnapGrid = snapGrid.map(val => normalize(val));\n  const normalizedSlidesGrid = slidesGrid.map(val => normalize(val));\n\n  const currentSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate)];\n  const prevSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate) - 1];\n  let prevIndex;\n  if (typeof prevSnap !== 'undefined') {\n    prevIndex = slidesGrid.indexOf(prevSnap);\n    if (prevIndex < 0) prevIndex = swiper.activeIndex - 1;\n  }\n  return swiper.slideTo(prevIndex, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slideReset (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  return swiper.slideTo(swiper.activeIndex, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slideToClosest (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  let index$$1 = swiper.activeIndex;\n  const snapIndex = Math.floor(index$$1 / swiper.params.slidesPerGroup);\n\n  if (snapIndex < swiper.snapGrid.length - 1) {\n    const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n\n    const currentSnap = swiper.snapGrid[snapIndex];\n    const nextSnap = swiper.snapGrid[snapIndex + 1];\n\n    if ((translate - currentSnap) > (nextSnap - currentSnap) / 2) {\n      index$$1 = swiper.params.slidesPerGroup;\n    }\n  }\n\n  return swiper.slideTo(index$$1, speed, runCallbacks, internal);\n}\n\nfunction slideToClickedSlide () {\n  const swiper = this;\n  const { params, $wrapperEl } = swiper;\n\n  const slidesPerView = params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : params.slidesPerView;\n  let slideToIndex = swiper.clickedIndex;\n  let realIndex;\n  if (params.loop) {\n    if (swiper.animating) return;\n    realIndex = parseInt($(swiper.clickedSlide).attr('data-swiper-slide-index'), 10);\n    if (params.centeredSlides) {\n      if (\n        (slideToIndex < swiper.loopedSlides - (slidesPerView / 2)) ||\n        (slideToIndex > (swiper.slides.length - swiper.loopedSlides) + (slidesPerView / 2))\n      ) {\n        swiper.loopFix();\n        slideToIndex = $wrapperEl\n          .children(`.${params.slideClass}[data-swiper-slide-index=\"${realIndex}\"]:not(.${params.slideDuplicateClass})`)\n          .eq(0)\n          .index();\n\n        Utils.nextTick(() => {\n          swiper.slideTo(slideToIndex);\n        });\n      } else {\n        swiper.slideTo(slideToIndex);\n      }\n    } else if (slideToIndex > swiper.slides.length - slidesPerView) {\n      swiper.loopFix();\n      slideToIndex = $wrapperEl\n        .children(`.${params.slideClass}[data-swiper-slide-index=\"${realIndex}\"]:not(.${params.slideDuplicateClass})`)\n        .eq(0)\n        .index();\n\n      Utils.nextTick(() => {\n        swiper.slideTo(slideToIndex);\n      });\n    } else {\n      swiper.slideTo(slideToIndex);\n    }\n  } else {\n    swiper.slideTo(slideToIndex);\n  }\n}\n\nvar slide = {\n  slideTo,\n  slideToLoop,\n  slideNext,\n  slidePrev,\n  slideReset,\n  slideToClosest,\n  slideToClickedSlide,\n};\n\nfunction loopCreate () {\n  const swiper = this;\n  const { params, $wrapperEl } = swiper;\n  // Remove duplicated slides\n  $wrapperEl.children(`.${params.slideClass}.${params.slideDuplicateClass}`).remove();\n\n  let slides = $wrapperEl.children(`.${params.slideClass}`);\n\n  if (params.loopFillGroupWithBlank) {\n    const blankSlidesNum = params.slidesPerGroup - (slides.length % params.slidesPerGroup);\n    if (blankSlidesNum !== params.slidesPerGroup) {\n      for (let i = 0; i < blankSlidesNum; i += 1) {\n        const blankNode = $(document.createElement('div')).addClass(`${params.slideClass} ${params.slideBlankClass}`);\n        $wrapperEl.append(blankNode);\n      }\n      slides = $wrapperEl.children(`.${params.slideClass}`);\n    }\n  }\n\n  if (params.slidesPerView === 'auto' && !params.loopedSlides) params.loopedSlides = slides.length;\n\n  swiper.loopedSlides = parseInt(params.loopedSlides || params.slidesPerView, 10);\n  swiper.loopedSlides += params.loopAdditionalSlides;\n  if (swiper.loopedSlides > slides.length) {\n    swiper.loopedSlides = slides.length;\n  }\n\n  const prependSlides = [];\n  const appendSlides = [];\n  slides.each((index$$1, el) => {\n    const slide = $(el);\n    if (index$$1 < swiper.loopedSlides) appendSlides.push(el);\n    if (index$$1 < slides.length && index$$1 >= slides.length - swiper.loopedSlides) prependSlides.push(el);\n    slide.attr('data-swiper-slide-index', index$$1);\n  });\n  for (let i = 0; i < appendSlides.length; i += 1) {\n    $wrapperEl.append($(appendSlides[i].cloneNode(true)).addClass(params.slideDuplicateClass));\n  }\n  for (let i = prependSlides.length - 1; i >= 0; i -= 1) {\n    $wrapperEl.prepend($(prependSlides[i].cloneNode(true)).addClass(params.slideDuplicateClass));\n  }\n}\n\nfunction loopFix () {\n  const swiper = this;\n  const {\n    params, activeIndex, slides, loopedSlides, allowSlidePrev, allowSlideNext, snapGrid, rtlTranslate: rtl,\n  } = swiper;\n  let newIndex;\n  swiper.allowSlidePrev = true;\n  swiper.allowSlideNext = true;\n\n  const snapTranslate = -snapGrid[activeIndex];\n  const diff = snapTranslate - swiper.getTranslate();\n\n\n  // Fix For Negative Oversliding\n  if (activeIndex < loopedSlides) {\n    newIndex = (slides.length - (loopedSlides * 3)) + activeIndex;\n    newIndex += loopedSlides;\n    const slideChanged = swiper.slideTo(newIndex, 0, false, true);\n    if (slideChanged && diff !== 0) {\n      swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);\n    }\n  } else if ((params.slidesPerView === 'auto' && activeIndex >= loopedSlides * 2) || (activeIndex >= slides.length - loopedSlides)) {\n    // Fix For Positive Oversliding\n    newIndex = -slides.length + activeIndex + loopedSlides;\n    newIndex += loopedSlides;\n    const slideChanged = swiper.slideTo(newIndex, 0, false, true);\n    if (slideChanged && diff !== 0) {\n      swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);\n    }\n  }\n  swiper.allowSlidePrev = allowSlidePrev;\n  swiper.allowSlideNext = allowSlideNext;\n}\n\nfunction loopDestroy () {\n  const swiper = this;\n  const { $wrapperEl, params, slides } = swiper;\n  $wrapperEl.children(`.${params.slideClass}.${params.slideDuplicateClass}`).remove();\n  slides.removeAttr('data-swiper-slide-index');\n}\n\nvar loop = {\n  loopCreate,\n  loopFix,\n  loopDestroy,\n};\n\nfunction setGrabCursor (moving) {\n  const swiper = this;\n  if (Support.touch || !swiper.params.simulateTouch || (swiper.params.watchOverflow && swiper.isLocked)) return;\n  const el = swiper.el;\n  el.style.cursor = 'move';\n  el.style.cursor = moving ? '-webkit-grabbing' : '-webkit-grab';\n  el.style.cursor = moving ? '-moz-grabbin' : '-moz-grab';\n  el.style.cursor = moving ? 'grabbing' : 'grab';\n}\n\nfunction unsetGrabCursor () {\n  const swiper = this;\n  if (Support.touch || (swiper.params.watchOverflow && swiper.isLocked)) return;\n  swiper.el.style.cursor = '';\n}\n\nvar grabCursor = {\n  setGrabCursor,\n  unsetGrabCursor,\n};\n\nfunction appendSlide (slides) {\n  const swiper = this;\n  const { $wrapperEl, params } = swiper;\n  if (params.loop) {\n    swiper.loopDestroy();\n  }\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) $wrapperEl.append(slides[i]);\n    }\n  } else {\n    $wrapperEl.append(slides);\n  }\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n}\n\nfunction prependSlide (slides) {\n  const swiper = this;\n  const { params, $wrapperEl, activeIndex } = swiper;\n\n  if (params.loop) {\n    swiper.loopDestroy();\n  }\n  let newActiveIndex = activeIndex + 1;\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) $wrapperEl.prepend(slides[i]);\n    }\n    newActiveIndex = activeIndex + slides.length;\n  } else {\n    $wrapperEl.prepend(slides);\n  }\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n  swiper.slideTo(newActiveIndex, 0, false);\n}\n\nfunction addSlide (index$$1, slides) {\n  const swiper = this;\n  const { $wrapperEl, params, activeIndex } = swiper;\n  let activeIndexBuffer = activeIndex;\n  if (params.loop) {\n    activeIndexBuffer -= swiper.loopedSlides;\n    swiper.loopDestroy();\n    swiper.slides = $wrapperEl.children(`.${params.slideClass}`);\n  }\n  const baseLength = swiper.slides.length;\n  if (index$$1 <= 0) {\n    swiper.prependSlide(slides);\n    return;\n  } else if (index$$1 >= baseLength) {\n    swiper.appendSlide(slides);\n    return;\n  }\n  let newActiveIndex = activeIndexBuffer > index$$1 ? activeIndexBuffer + 1 : activeIndexBuffer;\n\n  const slidesBuffer = [];\n  for (let i = baseLength - 1; i >= index$$1; i -= 1) {\n    const currentSlide = swiper.slides.eq(i);\n    currentSlide.remove();\n    slidesBuffer.unshift(currentSlide);\n  }\n\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) $wrapperEl.append(slides[i]);\n    }\n    newActiveIndex = activeIndexBuffer > index$$1 ? activeIndexBuffer + slides.length : activeIndexBuffer;\n  } else {\n    $wrapperEl.append(slides);\n  }\n\n  for (let i = 0; i < slidesBuffer.length; i += 1) {\n    $wrapperEl.append(slidesBuffer[i]);\n  }\n\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n  if (params.loop) {\n    swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n  } else {\n    swiper.slideTo(newActiveIndex, 0, false);\n  }\n}\n\nfunction removeSlide (slidesIndexes) {\n  const swiper = this;\n  const { params, $wrapperEl, activeIndex } = swiper;\n\n  let activeIndexBuffer = activeIndex;\n  if (params.loop) {\n    activeIndexBuffer -= swiper.loopedSlides;\n    swiper.loopDestroy();\n    swiper.slides = $wrapperEl.children(`.${params.slideClass}`);\n  }\n  let newActiveIndex = activeIndexBuffer;\n  let indexToRemove;\n\n  if (typeof slidesIndexes === 'object' && 'length' in slidesIndexes) {\n    for (let i = 0; i < slidesIndexes.length; i += 1) {\n      indexToRemove = slidesIndexes[i];\n      if (swiper.slides[indexToRemove]) swiper.slides.eq(indexToRemove).remove();\n      if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n    }\n    newActiveIndex = Math.max(newActiveIndex, 0);\n  } else {\n    indexToRemove = slidesIndexes;\n    if (swiper.slides[indexToRemove]) swiper.slides.eq(indexToRemove).remove();\n    if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n    newActiveIndex = Math.max(newActiveIndex, 0);\n  }\n\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n  if (params.loop) {\n    swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n  } else {\n    swiper.slideTo(newActiveIndex, 0, false);\n  }\n}\n\nfunction removeAllSlides () {\n  const swiper = this;\n\n  const slidesIndexes = [];\n  for (let i = 0; i < swiper.slides.length; i += 1) {\n    slidesIndexes.push(i);\n  }\n  swiper.removeSlide(slidesIndexes);\n}\n\nvar manipulation = {\n  appendSlide,\n  prependSlide,\n  addSlide,\n  removeSlide,\n  removeAllSlides,\n};\n\nconst Device = (function Device() {\n  const ua = window.navigator.userAgent;\n\n  const device = {\n    ios: false,\n    android: false,\n    androidChrome: false,\n    desktop: false,\n    windows: false,\n    iphone: false,\n    ipod: false,\n    ipad: false,\n    cordova: window.cordova || window.phonegap,\n    phonegap: window.cordova || window.phonegap,\n  };\n\n  const windows = ua.match(/(Windows Phone);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\n  const android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\n  const ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n  const ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n  const iphone = !ipad && ua.match(/(iPhone\\sOS|iOS)\\s([\\d_]+)/);\n\n\n  // Windows\n  if (windows) {\n    device.os = 'windows';\n    device.osVersion = windows[2];\n    device.windows = true;\n  }\n  // Android\n  if (android && !windows) {\n    device.os = 'android';\n    device.osVersion = android[2];\n    device.android = true;\n    device.androidChrome = ua.toLowerCase().indexOf('chrome') >= 0;\n  }\n  if (ipad || iphone || ipod) {\n    device.os = 'ios';\n    device.ios = true;\n  }\n  // iOS\n  if (iphone && !ipod) {\n    device.osVersion = iphone[2].replace(/_/g, '.');\n    device.iphone = true;\n  }\n  if (ipad) {\n    device.osVersion = ipad[2].replace(/_/g, '.');\n    device.ipad = true;\n  }\n  if (ipod) {\n    device.osVersion = ipod[3] ? ipod[3].replace(/_/g, '.') : null;\n    device.iphone = true;\n  }\n  // iOS 8+ changed UA\n  if (device.ios && device.osVersion && ua.indexOf('Version/') >= 0) {\n    if (device.osVersion.split('.')[0] === '10') {\n      device.osVersion = ua.toLowerCase().split('version/')[1].split(' ')[0];\n    }\n  }\n\n  // Desktop\n  device.desktop = !(device.os || device.android || device.webView);\n\n  // Webview\n  device.webView = (iphone || ipad || ipod) && ua.match(/.*AppleWebKit(?!.*Safari)/i);\n\n  // Minimal UI\n  if (device.os && device.os === 'ios') {\n    const osVersionArr = device.osVersion.split('.');\n    const metaViewport = document.querySelector('meta[name=\"viewport\"]');\n    device.minimalUi =\n      !device.webView &&\n      (ipod || iphone) &&\n      (osVersionArr[0] * 1 === 7 ? osVersionArr[1] * 1 >= 1 : osVersionArr[0] * 1 > 7) &&\n      metaViewport && metaViewport.getAttribute('content').indexOf('minimal-ui') >= 0;\n  }\n\n  // Pixel Ratio\n  device.pixelRatio = window.devicePixelRatio || 1;\n\n  // Export object\n  return device;\n}());\n\nfunction onTouchStart (event) {\n  const swiper = this;\n  const data$$1 = swiper.touchEventsData;\n  const { params, touches } = swiper;\n  if (swiper.animating && params.preventIntercationOnTransition) {\n    return;\n  }\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  data$$1.isTouchEvent = e.type === 'touchstart';\n  if (!data$$1.isTouchEvent && 'which' in e && e.which === 3) return;\n  if (data$$1.isTouched && data$$1.isMoved) return;\n  if (params.noSwiping && $(e.target).closest(params.noSwipingSelector ? params.noSwipingSelector : `.${params.noSwipingClass}`)[0]) {\n    swiper.allowClick = true;\n    return;\n  }\n  if (params.swipeHandler) {\n    if (!$(e).closest(params.swipeHandler)[0]) return;\n  }\n\n  touches.currentX = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n  touches.currentY = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n  const startX = touches.currentX;\n  const startY = touches.currentY;\n\n  // Do NOT start if iOS edge swipe is detected. Otherwise iOS app (UIWebView) cannot swipe-to-go-back anymore\n\n  if (\n    Device.ios &&\n    !Device.cordova &&\n    params.iOSEdgeSwipeDetection &&\n    ((startX <= params.iOSEdgeSwipeThreshold) ||\n    (startX >= window.screen.width - params.iOSEdgeSwipeThreshold))\n  ) {\n    return;\n  }\n\n  Utils.extend(data$$1, {\n    isTouched: true,\n    isMoved: false,\n    allowTouchCallbacks: true,\n    isScrolling: undefined,\n    startMoving: undefined,\n  });\n\n  touches.startX = startX;\n  touches.startY = startY;\n  data$$1.touchStartTime = Utils.now();\n  swiper.allowClick = true;\n  swiper.updateSize();\n  swiper.swipeDirection = undefined;\n  if (params.threshold > 0) data$$1.allowThresholdMove = false;\n  if (e.type !== 'touchstart') {\n    let preventDefault = true;\n    if ($(e.target).is(data$$1.formElements)) preventDefault = false;\n    if (\n      document.activeElement &&\n      $(document.activeElement).is(data$$1.formElements) &&\n      document.activeElement !== e.target\n    ) {\n      document.activeElement.blur();\n    }\n    if (preventDefault && swiper.allowTouchMove) {\n      e.preventDefault();\n    }\n  }\n  swiper.emit('touchStart', e);\n}\n\nfunction onTouchMove (event) {\n  const swiper = this;\n  const data$$1 = swiper.touchEventsData;\n  const { params, touches, rtlTranslate: rtl } = swiper;\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  if (!data$$1.isTouched) {\n    if (data$$1.startMoving && data$$1.isScrolling) {\n      swiper.emit('touchMoveOpposite', e);\n    }\n    return;\n  }\n  if (data$$1.isTouchEvent && e.type === 'mousemove') return;\n  const pageX = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;\n  const pageY = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;\n  if (e.preventedByNestedSwiper) {\n    touches.startX = pageX;\n    touches.startY = pageY;\n    return;\n  }\n  if (!swiper.allowTouchMove) {\n    // isMoved = true;\n    swiper.allowClick = false;\n    if (data$$1.isTouched) {\n      Utils.extend(touches, {\n        startX: pageX,\n        startY: pageY,\n        currentX: pageX,\n        currentY: pageY,\n      });\n      data$$1.touchStartTime = Utils.now();\n    }\n    return;\n  }\n  if (data$$1.isTouchEvent && params.touchReleaseOnEdges && !params.loop) {\n    if (swiper.isVertical()) {\n      // Vertical\n      if (\n        (pageY < touches.startY && swiper.translate <= swiper.maxTranslate()) ||\n        (pageY > touches.startY && swiper.translate >= swiper.minTranslate())\n      ) {\n        data$$1.isTouched = false;\n        data$$1.isMoved = false;\n        return;\n      }\n    } else if (\n      (pageX < touches.startX && swiper.translate <= swiper.maxTranslate()) ||\n      (pageX > touches.startX && swiper.translate >= swiper.minTranslate())\n    ) {\n      return;\n    }\n  }\n  if (data$$1.isTouchEvent && document.activeElement) {\n    if (e.target === document.activeElement && $(e.target).is(data$$1.formElements)) {\n      data$$1.isMoved = true;\n      swiper.allowClick = false;\n      return;\n    }\n  }\n  if (data$$1.allowTouchCallbacks) {\n    swiper.emit('touchMove', e);\n  }\n  if (e.targetTouches && e.targetTouches.length > 1) return;\n\n  touches.currentX = pageX;\n  touches.currentY = pageY;\n\n  const diffX = touches.currentX - touches.startX;\n  const diffY = touches.currentY - touches.startY;\n\n  if (typeof data$$1.isScrolling === 'undefined') {\n    let touchAngle;\n    if ((swiper.isHorizontal() && touches.currentY === touches.startY) || (swiper.isVertical() && touches.currentX === touches.startX)) {\n      data$$1.isScrolling = false;\n    } else {\n      // eslint-disable-next-line\n      if ((diffX * diffX) + (diffY * diffY) >= 25) {\n        touchAngle = (Math.atan2(Math.abs(diffY), Math.abs(diffX)) * 180) / Math.PI;\n        data$$1.isScrolling = swiper.isHorizontal() ? touchAngle > params.touchAngle : (90 - touchAngle > params.touchAngle);\n      }\n    }\n  }\n  if (data$$1.isScrolling) {\n    swiper.emit('touchMoveOpposite', e);\n  }\n  if (typeof startMoving === 'undefined') {\n    if (touches.currentX !== touches.startX || touches.currentY !== touches.startY) {\n      data$$1.startMoving = true;\n    }\n  }\n  if (data$$1.isScrolling) {\n    data$$1.isTouched = false;\n    return;\n  }\n  if (!data$$1.startMoving) {\n    return;\n  }\n  swiper.allowClick = false;\n  e.preventDefault();\n  if (params.touchMoveStopPropagation && !params.nested) {\n    e.stopPropagation();\n  }\n\n  if (!data$$1.isMoved) {\n    if (params.loop) {\n      swiper.loopFix();\n    }\n    data$$1.startTranslate = swiper.getTranslate();\n    swiper.setTransition(0);\n    if (swiper.animating) {\n      swiper.$wrapperEl.trigger('webkitTransitionEnd transitionend');\n    }\n    data$$1.allowMomentumBounce = false;\n    // Grab Cursor\n    if (params.grabCursor && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n      swiper.setGrabCursor(true);\n    }\n    swiper.emit('sliderFirstMove', e);\n  }\n  swiper.emit('sliderMove', e);\n  data$$1.isMoved = true;\n\n  let diff = swiper.isHorizontal() ? diffX : diffY;\n  touches.diff = diff;\n\n  diff *= params.touchRatio;\n  if (rtl) diff = -diff;\n\n  swiper.swipeDirection = diff > 0 ? 'prev' : 'next';\n  data$$1.currentTranslate = diff + data$$1.startTranslate;\n\n  let disableParentSwiper = true;\n  let resistanceRatio = params.resistanceRatio;\n  if (params.touchReleaseOnEdges) {\n    resistanceRatio = 0;\n  }\n  if ((diff > 0 && data$$1.currentTranslate > swiper.minTranslate())) {\n    disableParentSwiper = false;\n    if (params.resistance) data$$1.currentTranslate = (swiper.minTranslate() - 1) + ((-swiper.minTranslate() + data$$1.startTranslate + diff) ** resistanceRatio);\n  } else if (diff < 0 && data$$1.currentTranslate < swiper.maxTranslate()) {\n    disableParentSwiper = false;\n    if (params.resistance) data$$1.currentTranslate = (swiper.maxTranslate() + 1) - ((swiper.maxTranslate() - data$$1.startTranslate - diff) ** resistanceRatio);\n  }\n\n  if (disableParentSwiper) {\n    e.preventedByNestedSwiper = true;\n  }\n\n  // Directions locks\n  if (!swiper.allowSlideNext && swiper.swipeDirection === 'next' && data$$1.currentTranslate < data$$1.startTranslate) {\n    data$$1.currentTranslate = data$$1.startTranslate;\n  }\n  if (!swiper.allowSlidePrev && swiper.swipeDirection === 'prev' && data$$1.currentTranslate > data$$1.startTranslate) {\n    data$$1.currentTranslate = data$$1.startTranslate;\n  }\n\n\n  // Threshold\n  if (params.threshold > 0) {\n    if (Math.abs(diff) > params.threshold || data$$1.allowThresholdMove) {\n      if (!data$$1.allowThresholdMove) {\n        data$$1.allowThresholdMove = true;\n        touches.startX = touches.currentX;\n        touches.startY = touches.currentY;\n        data$$1.currentTranslate = data$$1.startTranslate;\n        touches.diff = swiper.isHorizontal() ? touches.currentX - touches.startX : touches.currentY - touches.startY;\n        return;\n      }\n    } else {\n      data$$1.currentTranslate = data$$1.startTranslate;\n      return;\n    }\n  }\n\n  if (!params.followFinger) return;\n\n  // Update active index in free mode\n  if (params.freeMode || params.watchSlidesProgress || params.watchSlidesVisibility) {\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  }\n  if (params.freeMode) {\n    // Velocity\n    if (data$$1.velocities.length === 0) {\n      data$$1.velocities.push({\n        position: touches[swiper.isHorizontal() ? 'startX' : 'startY'],\n        time: data$$1.touchStartTime,\n      });\n    }\n    data$$1.velocities.push({\n      position: touches[swiper.isHorizontal() ? 'currentX' : 'currentY'],\n      time: Utils.now(),\n    });\n  }\n  // Update progress\n  swiper.updateProgress(data$$1.currentTranslate);\n  // Update translate\n  swiper.setTranslate(data$$1.currentTranslate);\n}\n\nfunction onTouchEnd (event) {\n  const swiper = this;\n  const data$$1 = swiper.touchEventsData;\n\n  const {\n    params, touches, rtlTranslate: rtl, $wrapperEl, slidesGrid, snapGrid,\n  } = swiper;\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  if (data$$1.allowTouchCallbacks) {\n    swiper.emit('touchEnd', e);\n  }\n  data$$1.allowTouchCallbacks = false;\n  if (!data$$1.isTouched) {\n    if (data$$1.isMoved && params.grabCursor) {\n      swiper.setGrabCursor(false);\n    }\n    data$$1.isMoved = false;\n    data$$1.startMoving = false;\n    return;\n  }\n  // Return Grab Cursor\n  if (params.grabCursor && data$$1.isMoved && data$$1.isTouched && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n    swiper.setGrabCursor(false);\n  }\n\n  // Time diff\n  const touchEndTime = Utils.now();\n  const timeDiff = touchEndTime - data$$1.touchStartTime;\n\n  // Tap, doubleTap, Click\n  if (swiper.allowClick) {\n    swiper.updateClickedSlide(e);\n    swiper.emit('tap', e);\n    if (timeDiff < 300 && (touchEndTime - data$$1.lastClickTime) > 300) {\n      if (data$$1.clickTimeout) clearTimeout(data$$1.clickTimeout);\n      data$$1.clickTimeout = Utils.nextTick(() => {\n        if (!swiper || swiper.destroyed) return;\n        swiper.emit('click', e);\n      }, 300);\n    }\n    if (timeDiff < 300 && (touchEndTime - data$$1.lastClickTime) < 300) {\n      if (data$$1.clickTimeout) clearTimeout(data$$1.clickTimeout);\n      swiper.emit('doubleTap', e);\n    }\n  }\n\n  data$$1.lastClickTime = Utils.now();\n  Utils.nextTick(() => {\n    if (!swiper.destroyed) swiper.allowClick = true;\n  });\n\n  if (!data$$1.isTouched || !data$$1.isMoved || !swiper.swipeDirection || touches.diff === 0 || data$$1.currentTranslate === data$$1.startTranslate) {\n    data$$1.isTouched = false;\n    data$$1.isMoved = false;\n    data$$1.startMoving = false;\n    return;\n  }\n  data$$1.isTouched = false;\n  data$$1.isMoved = false;\n  data$$1.startMoving = false;\n\n  let currentPos;\n  if (params.followFinger) {\n    currentPos = rtl ? swiper.translate : -swiper.translate;\n  } else {\n    currentPos = -data$$1.currentTranslate;\n  }\n\n  if (params.freeMode) {\n    if (currentPos < -swiper.minTranslate()) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    } else if (currentPos > -swiper.maxTranslate()) {\n      if (swiper.slides.length < snapGrid.length) {\n        swiper.slideTo(snapGrid.length - 1);\n      } else {\n        swiper.slideTo(swiper.slides.length - 1);\n      }\n      return;\n    }\n\n    if (params.freeModeMomentum) {\n      if (data$$1.velocities.length > 1) {\n        const lastMoveEvent = data$$1.velocities.pop();\n        const velocityEvent = data$$1.velocities.pop();\n\n        const distance = lastMoveEvent.position - velocityEvent.position;\n        const time = lastMoveEvent.time - velocityEvent.time;\n        swiper.velocity = distance / time;\n        swiper.velocity /= 2;\n        if (Math.abs(swiper.velocity) < params.freeModeMinimumVelocity) {\n          swiper.velocity = 0;\n        }\n        // this implies that the user stopped moving a finger then released.\n        // There would be no events with distance zero, so the last event is stale.\n        if (time > 150 || (Utils.now() - lastMoveEvent.time) > 300) {\n          swiper.velocity = 0;\n        }\n      } else {\n        swiper.velocity = 0;\n      }\n      swiper.velocity *= params.freeModeMomentumVelocityRatio;\n\n      data$$1.velocities.length = 0;\n      let momentumDuration = 1000 * params.freeModeMomentumRatio;\n      const momentumDistance = swiper.velocity * momentumDuration;\n\n      let newPosition = swiper.translate + momentumDistance;\n      if (rtl) newPosition = -newPosition;\n\n      let doBounce = false;\n      let afterBouncePosition;\n      const bounceAmount = Math.abs(swiper.velocity) * 20 * params.freeModeMomentumBounceRatio;\n      let needsLoopFix;\n      if (newPosition < swiper.maxTranslate()) {\n        if (params.freeModeMomentumBounce) {\n          if (newPosition + swiper.maxTranslate() < -bounceAmount) {\n            newPosition = swiper.maxTranslate() - bounceAmount;\n          }\n          afterBouncePosition = swiper.maxTranslate();\n          doBounce = true;\n          data$$1.allowMomentumBounce = true;\n        } else {\n          newPosition = swiper.maxTranslate();\n        }\n        if (params.loop && params.centeredSlides) needsLoopFix = true;\n      } else if (newPosition > swiper.minTranslate()) {\n        if (params.freeModeMomentumBounce) {\n          if (newPosition - swiper.minTranslate() > bounceAmount) {\n            newPosition = swiper.minTranslate() + bounceAmount;\n          }\n          afterBouncePosition = swiper.minTranslate();\n          doBounce = true;\n          data$$1.allowMomentumBounce = true;\n        } else {\n          newPosition = swiper.minTranslate();\n        }\n        if (params.loop && params.centeredSlides) needsLoopFix = true;\n      } else if (params.freeModeSticky) {\n        let nextSlide;\n        for (let j = 0; j < snapGrid.length; j += 1) {\n          if (snapGrid[j] > -newPosition) {\n            nextSlide = j;\n            break;\n          }\n        }\n\n        if (Math.abs(snapGrid[nextSlide] - newPosition) < Math.abs(snapGrid[nextSlide - 1] - newPosition) || swiper.swipeDirection === 'next') {\n          newPosition = snapGrid[nextSlide];\n        } else {\n          newPosition = snapGrid[nextSlide - 1];\n        }\n        newPosition = -newPosition;\n      }\n      if (needsLoopFix) {\n        swiper.once('transitionEnd', () => {\n          swiper.loopFix();\n        });\n      }\n      // Fix duration\n      if (swiper.velocity !== 0) {\n        if (rtl) {\n          momentumDuration = Math.abs((-newPosition - swiper.translate) / swiper.velocity);\n        } else {\n          momentumDuration = Math.abs((newPosition - swiper.translate) / swiper.velocity);\n        }\n      } else if (params.freeModeSticky) {\n        swiper.slideToClosest();\n        return;\n      }\n\n      if (params.freeModeMomentumBounce && doBounce) {\n        swiper.updateProgress(afterBouncePosition);\n        swiper.setTransition(momentumDuration);\n        swiper.setTranslate(newPosition);\n        swiper.transitionStart(true, swiper.swipeDirection);\n        swiper.animating = true;\n        $wrapperEl.transitionEnd(() => {\n          if (!swiper || swiper.destroyed || !data$$1.allowMomentumBounce) return;\n          swiper.emit('momentumBounce');\n\n          swiper.setTransition(params.speed);\n          swiper.setTranslate(afterBouncePosition);\n          $wrapperEl.transitionEnd(() => {\n            if (!swiper || swiper.destroyed) return;\n            swiper.transitionEnd();\n          });\n        });\n      } else if (swiper.velocity) {\n        swiper.updateProgress(newPosition);\n        swiper.setTransition(momentumDuration);\n        swiper.setTranslate(newPosition);\n        swiper.transitionStart(true, swiper.swipeDirection);\n        if (!swiper.animating) {\n          swiper.animating = true;\n          $wrapperEl.transitionEnd(() => {\n            if (!swiper || swiper.destroyed) return;\n            swiper.transitionEnd();\n          });\n        }\n      } else {\n        swiper.updateProgress(newPosition);\n      }\n\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    } else if (params.freeModeSticky) {\n      swiper.slideToClosest();\n      return;\n    }\n\n    if (!params.freeModeMomentum || timeDiff >= params.longSwipesMs) {\n      swiper.updateProgress();\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n    return;\n  }\n\n  // Find current slide\n  let stopIndex = 0;\n  let groupSize = swiper.slidesSizesGrid[0];\n  for (let i = 0; i < slidesGrid.length; i += params.slidesPerGroup) {\n    if (typeof slidesGrid[i + params.slidesPerGroup] !== 'undefined') {\n      if (currentPos >= slidesGrid[i] && currentPos < slidesGrid[i + params.slidesPerGroup]) {\n        stopIndex = i;\n        groupSize = slidesGrid[i + params.slidesPerGroup] - slidesGrid[i];\n      }\n    } else if (currentPos >= slidesGrid[i]) {\n      stopIndex = i;\n      groupSize = slidesGrid[slidesGrid.length - 1] - slidesGrid[slidesGrid.length - 2];\n    }\n  }\n\n  // Find current slide size\n  const ratio = (currentPos - slidesGrid[stopIndex]) / groupSize;\n\n  if (timeDiff > params.longSwipesMs) {\n    // Long touches\n    if (!params.longSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (swiper.swipeDirection === 'next') {\n      if (ratio >= params.longSwipesRatio) swiper.slideTo(stopIndex + params.slidesPerGroup);\n      else swiper.slideTo(stopIndex);\n    }\n    if (swiper.swipeDirection === 'prev') {\n      if (ratio > (1 - params.longSwipesRatio)) swiper.slideTo(stopIndex + params.slidesPerGroup);\n      else swiper.slideTo(stopIndex);\n    }\n  } else {\n    // Short swipes\n    if (!params.shortSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (swiper.swipeDirection === 'next') {\n      swiper.slideTo(stopIndex + params.slidesPerGroup);\n    }\n    if (swiper.swipeDirection === 'prev') {\n      swiper.slideTo(stopIndex);\n    }\n  }\n}\n\nfunction onResize () {\n  const swiper = this;\n\n  const { params, el } = swiper;\n\n  if (el && el.offsetWidth === 0) return;\n\n  // Breakpoints\n  if (params.breakpoints) {\n    swiper.setBreakpoint();\n  }\n\n  // Save locks\n  const { allowSlideNext, allowSlidePrev, snapGrid } = swiper;\n\n  // Disable locks on resize\n  swiper.allowSlideNext = true;\n  swiper.allowSlidePrev = true;\n\n  swiper.updateSize();\n  swiper.updateSlides();\n\n  if (params.freeMode) {\n    const newTranslate = Math.min(Math.max(swiper.translate, swiper.maxTranslate()), swiper.minTranslate());\n    swiper.setTranslate(newTranslate);\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n\n    if (params.autoHeight) {\n      swiper.updateAutoHeight();\n    }\n  } else {\n    swiper.updateSlidesClasses();\n    if ((params.slidesPerView === 'auto' || params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {\n      swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n    } else {\n      swiper.slideTo(swiper.activeIndex, 0, false, true);\n    }\n  }\n  // Return locks after resize\n  swiper.allowSlidePrev = allowSlidePrev;\n  swiper.allowSlideNext = allowSlideNext;\n\n  if (swiper.params.watchOverflow && snapGrid !== swiper.snapGrid) {\n    swiper.checkOverflow();\n  }\n}\n\nfunction onClick (e) {\n  const swiper = this;\n  if (!swiper.allowClick) {\n    if (swiper.params.preventClicks) e.preventDefault();\n    if (swiper.params.preventClicksPropagation && swiper.animating) {\n      e.stopPropagation();\n      e.stopImmediatePropagation();\n    }\n  }\n}\n\nfunction attachEvents() {\n  const swiper = this;\n  const {\n    params, touchEvents, el, wrapperEl,\n  } = swiper;\n\n  {\n    swiper.onTouchStart = onTouchStart.bind(swiper);\n    swiper.onTouchMove = onTouchMove.bind(swiper);\n    swiper.onTouchEnd = onTouchEnd.bind(swiper);\n  }\n\n  swiper.onClick = onClick.bind(swiper);\n\n  const target = params.touchEventsTarget === 'container' ? el : wrapperEl;\n  const capture = !!params.nested;\n\n  // Touch Events\n  {\n    if (!Support.touch && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n      target.addEventListener(touchEvents.start, swiper.onTouchStart, false);\n      document.addEventListener(touchEvents.move, swiper.onTouchMove, capture);\n      document.addEventListener(touchEvents.end, swiper.onTouchEnd, false);\n    } else {\n      if (Support.touch) {\n        const passiveListener = touchEvents.start === 'touchstart' && Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n        target.addEventListener(touchEvents.start, swiper.onTouchStart, passiveListener);\n        target.addEventListener(touchEvents.move, swiper.onTouchMove, Support.passiveListener ? { passive: false, capture } : capture);\n        target.addEventListener(touchEvents.end, swiper.onTouchEnd, passiveListener);\n      }\n      if ((params.simulateTouch && !Device.ios && !Device.android) || (params.simulateTouch && !Support.touch && Device.ios)) {\n        target.addEventListener('mousedown', swiper.onTouchStart, false);\n        document.addEventListener('mousemove', swiper.onTouchMove, capture);\n        document.addEventListener('mouseup', swiper.onTouchEnd, false);\n      }\n    }\n    // Prevent Links Clicks\n    if (params.preventClicks || params.preventClicksPropagation) {\n      target.addEventListener('click', swiper.onClick, true);\n    }\n  }\n\n  // Resize handler\n  swiper.on((Device.ios || Device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate'), onResize, true);\n}\n\nfunction detachEvents() {\n  const swiper = this;\n\n  const {\n    params, touchEvents, el, wrapperEl,\n  } = swiper;\n\n  const target = params.touchEventsTarget === 'container' ? el : wrapperEl;\n  const capture = !!params.nested;\n\n  // Touch Events\n  {\n    if (!Support.touch && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n      target.removeEventListener(touchEvents.start, swiper.onTouchStart, false);\n      document.removeEventListener(touchEvents.move, swiper.onTouchMove, capture);\n      document.removeEventListener(touchEvents.end, swiper.onTouchEnd, false);\n    } else {\n      if (Support.touch) {\n        const passiveListener = touchEvents.start === 'onTouchStart' && Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n        target.removeEventListener(touchEvents.start, swiper.onTouchStart, passiveListener);\n        target.removeEventListener(touchEvents.move, swiper.onTouchMove, capture);\n        target.removeEventListener(touchEvents.end, swiper.onTouchEnd, passiveListener);\n      }\n      if ((params.simulateTouch && !Device.ios && !Device.android) || (params.simulateTouch && !Support.touch && Device.ios)) {\n        target.removeEventListener('mousedown', swiper.onTouchStart, false);\n        document.removeEventListener('mousemove', swiper.onTouchMove, capture);\n        document.removeEventListener('mouseup', swiper.onTouchEnd, false);\n      }\n    }\n    // Prevent Links Clicks\n    if (params.preventClicks || params.preventClicksPropagation) {\n      target.removeEventListener('click', swiper.onClick, true);\n    }\n  }\n\n  // Resize handler\n  swiper.off((Device.ios || Device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate'), onResize);\n}\n\nvar events = {\n  attachEvents,\n  detachEvents,\n};\n\nfunction setBreakpoint () {\n  const swiper = this;\n  const {\n    activeIndex, initialized, loopedSlides = 0, params,\n  } = swiper;\n  const breakpoints = params.breakpoints;\n  if (!breakpoints || (breakpoints && Object.keys(breakpoints).length === 0)) return;\n  // Set breakpoint for window width and update parameters\n  const breakpoint = swiper.getBreakpoint(breakpoints);\n  if (breakpoint && swiper.currentBreakpoint !== breakpoint) {\n    const breakPointsParams = breakpoint in breakpoints ? breakpoints[breakpoint] : swiper.originalParams;\n    const needsReLoop = params.loop && (breakPointsParams.slidesPerView !== params.slidesPerView);\n\n    Utils.extend(swiper.params, breakPointsParams);\n\n    Utils.extend(swiper, {\n      allowTouchMove: swiper.params.allowTouchMove,\n      allowSlideNext: swiper.params.allowSlideNext,\n      allowSlidePrev: swiper.params.allowSlidePrev,\n    });\n\n    swiper.currentBreakpoint = breakpoint;\n\n    if (needsReLoop && initialized) {\n      swiper.loopDestroy();\n      swiper.loopCreate();\n      swiper.updateSlides();\n      swiper.slideTo((activeIndex - loopedSlides) + swiper.loopedSlides, 0, false);\n    }\n    swiper.emit('breakpoint', breakPointsParams);\n  }\n}\n\nfunction getBreakpoint (breakpoints) {\n  // Get breakpoint for window width\n  if (!breakpoints) return undefined;\n  let breakpoint = false;\n  const points = [];\n  Object.keys(breakpoints).forEach((point) => {\n    points.push(point);\n  });\n  points.sort((a, b) => parseInt(a, 10) - parseInt(b, 10));\n  for (let i = 0; i < points.length; i += 1) {\n    const point = points[i];\n    if (point >= window.innerWidth && !breakpoint) {\n      breakpoint = point;\n    }\n  }\n  return breakpoint || 'max';\n}\n\nvar breakpoints = { setBreakpoint, getBreakpoint };\n\nconst Browser = (function Browser() {\n  function isSafari() {\n    const ua = window.navigator.userAgent.toLowerCase();\n    return (ua.indexOf('safari') >= 0 && ua.indexOf('chrome') < 0 && ua.indexOf('android') < 0);\n  }\n  return {\n    isIE: !!window.navigator.userAgent.match(/Trident/g) || !!window.navigator.userAgent.match(/MSIE/g),\n    isSafari: isSafari(),\n    isUiWebView: /(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(window.navigator.userAgent),\n  };\n}());\n\nfunction addClasses () {\n  const swiper = this;\n  const {\n    classNames, params, rtl, $el,\n  } = swiper;\n  const suffixes = [];\n\n  suffixes.push(params.direction);\n\n  if (params.freeMode) {\n    suffixes.push('free-mode');\n  }\n  if (!Support.flexbox) {\n    suffixes.push('no-flexbox');\n  }\n  if (params.autoHeight) {\n    suffixes.push('autoheight');\n  }\n  if (rtl) {\n    suffixes.push('rtl');\n  }\n  if (params.slidesPerColumn > 1) {\n    suffixes.push('multirow');\n  }\n  if (Device.android) {\n    suffixes.push('android');\n  }\n  if (Device.ios) {\n    suffixes.push('ios');\n  }\n  // WP8 Touch Events Fix\n  if (Browser.isIE && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n    suffixes.push(`wp8-${params.direction}`);\n  }\n\n  suffixes.forEach((suffix) => {\n    classNames.push(params.containerModifierClass + suffix);\n  });\n\n  $el.addClass(classNames.join(' '));\n}\n\nfunction removeClasses () {\n  const swiper = this;\n  const { $el, classNames } = swiper;\n\n  $el.removeClass(classNames.join(' '));\n}\n\nvar classes = { addClasses, removeClasses };\n\nfunction loadImage (imageEl, src, srcset, sizes, checkForComplete, callback) {\n  let image;\n  function onReady() {\n    if (callback) callback();\n  }\n  if (!imageEl.complete || !checkForComplete) {\n    if (src) {\n      image = new window.Image();\n      image.onload = onReady;\n      image.onerror = onReady;\n      if (sizes) {\n        image.sizes = sizes;\n      }\n      if (srcset) {\n        image.srcset = srcset;\n      }\n      if (src) {\n        image.src = src;\n      }\n    } else {\n      onReady();\n    }\n  } else {\n    // image already loaded...\n    onReady();\n  }\n}\n\nfunction preloadImages () {\n  const swiper = this;\n  swiper.imagesToLoad = swiper.$el.find('img');\n  function onReady() {\n    if (typeof swiper === 'undefined' || swiper === null || !swiper || swiper.destroyed) return;\n    if (swiper.imagesLoaded !== undefined) swiper.imagesLoaded += 1;\n    if (swiper.imagesLoaded === swiper.imagesToLoad.length) {\n      if (swiper.params.updateOnImagesReady) swiper.update();\n      swiper.emit('imagesReady');\n    }\n  }\n  for (let i = 0; i < swiper.imagesToLoad.length; i += 1) {\n    const imageEl = swiper.imagesToLoad[i];\n    swiper.loadImage(\n      imageEl,\n      imageEl.currentSrc || imageEl.getAttribute('src'),\n      imageEl.srcset || imageEl.getAttribute('srcset'),\n      imageEl.sizes || imageEl.getAttribute('sizes'),\n      true,\n      onReady\n    );\n  }\n}\n\nvar images = {\n  loadImage,\n  preloadImages,\n};\n\nfunction checkOverflow() {\n  const swiper = this;\n  const wasLocked = swiper.isLocked;\n\n  swiper.isLocked = swiper.snapGrid.length === 1;\n  swiper.allowSlideNext = !swiper.isLocked;\n  swiper.allowSlidePrev = !swiper.isLocked;\n\n  // events\n  if (wasLocked !== swiper.isLocked) swiper.emit(swiper.isLocked ? 'lock' : 'unlock');\n\n  if (wasLocked && wasLocked !== swiper.isLocked) {\n    swiper.isEnd = false;\n    swiper.navigation.update();\n  }\n}\n\nvar checkOverflow$1 = { checkOverflow };\n\nvar defaults = {\n  init: true,\n  direction: 'horizontal',\n  touchEventsTarget: 'container',\n  initialSlide: 0,\n  speed: 300,\n  //\n  preventIntercationOnTransition: false,\n\n  // To support iOS's swipe-to-go-back gesture (when being used in-app, with UIWebView).\n  iOSEdgeSwipeDetection: false,\n  iOSEdgeSwipeThreshold: 20,\n\n  // Free mode\n  freeMode: false,\n  freeModeMomentum: true,\n  freeModeMomentumRatio: 1,\n  freeModeMomentumBounce: true,\n  freeModeMomentumBounceRatio: 1,\n  freeModeMomentumVelocityRatio: 1,\n  freeModeSticky: false,\n  freeModeMinimumVelocity: 0.02,\n\n  // Autoheight\n  autoHeight: false,\n\n  // Set wrapper width\n  setWrapperSize: false,\n\n  // Virtual Translate\n  virtualTranslate: false,\n\n  // Effects\n  effect: 'slide', // 'slide' or 'fade' or 'cube' or 'coverflow' or 'flip'\n\n  // Breakpoints\n  breakpoints: undefined,\n\n  // Slides grid\n  spaceBetween: 0,\n  slidesPerView: 1,\n  slidesPerColumn: 1,\n  slidesPerColumnFill: 'column',\n  slidesPerGroup: 1,\n  centeredSlides: false,\n  slidesOffsetBefore: 0, // in px\n  slidesOffsetAfter: 0, // in px\n  normalizeSlideIndex: true,\n\n  // Disable swiper and hide navigation when container not overflow\n  watchOverflow: false,\n\n  // Round length\n  roundLengths: false,\n\n  // Touches\n  touchRatio: 1,\n  touchAngle: 45,\n  simulateTouch: true,\n  shortSwipes: true,\n  longSwipes: true,\n  longSwipesRatio: 0.5,\n  longSwipesMs: 300,\n  followFinger: true,\n  allowTouchMove: true,\n  threshold: 0,\n  touchMoveStopPropagation: true,\n  touchReleaseOnEdges: false,\n\n  // Unique Navigation Elements\n  uniqueNavElements: true,\n\n  // Resistance\n  resistance: true,\n  resistanceRatio: 0.85,\n\n  // Progress\n  watchSlidesProgress: false,\n  watchSlidesVisibility: false,\n\n  // Cursor\n  grabCursor: false,\n\n  // Clicks\n  preventClicks: true,\n  preventClicksPropagation: true,\n  slideToClickedSlide: false,\n\n  // Images\n  preloadImages: true,\n  updateOnImagesReady: true,\n\n  // loop\n  loop: false,\n  loopAdditionalSlides: 0,\n  loopedSlides: null,\n  loopFillGroupWithBlank: false,\n\n  // Swiping/no swiping\n  allowSlidePrev: true,\n  allowSlideNext: true,\n  swipeHandler: null, // '.swipe-handler',\n  noSwiping: true,\n  noSwipingClass: 'swiper-no-swiping',\n  noSwipingSelector: null,\n\n  // Passive Listeners\n  passiveListeners: true,\n\n  // NS\n  containerModifierClass: 'swiper-container-', // NEW\n  slideClass: 'swiper-slide',\n  slideBlankClass: 'swiper-slide-invisible-blank',\n  slideActiveClass: 'swiper-slide-active',\n  slideDuplicateActiveClass: 'swiper-slide-duplicate-active',\n  slideVisibleClass: 'swiper-slide-visible',\n  slideDuplicateClass: 'swiper-slide-duplicate',\n  slideNextClass: 'swiper-slide-next',\n  slideDuplicateNextClass: 'swiper-slide-duplicate-next',\n  slidePrevClass: 'swiper-slide-prev',\n  slideDuplicatePrevClass: 'swiper-slide-duplicate-prev',\n  wrapperClass: 'swiper-wrapper',\n\n  // Callbacks\n  runCallbacksOnInit: true,\n};\n\nconst prototypes = {\n  update,\n  translate,\n  transition: transition$1,\n  slide,\n  loop,\n  grabCursor,\n  manipulation,\n  events,\n  breakpoints,\n  checkOverflow: checkOverflow$1,\n  classes,\n  images,\n};\n\nconst extendedDefaults = {};\n\nclass Swiper extends SwiperClass {\n  constructor(...args) {\n    let el;\n    let params;\n    if (args.length === 1 && args[0].constructor && args[0].constructor === Object) {\n      params = args[0];\n    } else {\n      [el, params] = args;\n    }\n    if (!params) params = {};\n\n    params = Utils.extend({}, params);\n    if (el && !params.el) params.el = el;\n\n    super(params);\n\n    Object.keys(prototypes).forEach((prototypeGroup) => {\n      Object.keys(prototypes[prototypeGroup]).forEach((protoMethod) => {\n        if (!Swiper.prototype[protoMethod]) {\n          Swiper.prototype[protoMethod] = prototypes[prototypeGroup][protoMethod];\n        }\n      });\n    });\n\n    // Swiper Instance\n    const swiper = this;\n    if (typeof swiper.modules === 'undefined') {\n      swiper.modules = {};\n    }\n    Object.keys(swiper.modules).forEach((moduleName) => {\n      const module = swiper.modules[moduleName];\n      if (module.params) {\n        const moduleParamName = Object.keys(module.params)[0];\n        const moduleParams = module.params[moduleParamName];\n        if (typeof moduleParams !== 'object') return;\n        if (!(moduleParamName in params && 'enabled' in moduleParams)) return;\n        if (params[moduleParamName] === true) {\n          params[moduleParamName] = { enabled: true };\n        }\n        if (\n          typeof params[moduleParamName] === 'object' &&\n          !('enabled' in params[moduleParamName])\n        ) {\n          params[moduleParamName].enabled = true;\n        }\n        if (!params[moduleParamName]) params[moduleParamName] = { enabled: false };\n      }\n    });\n\n    // Extend defaults with modules params\n    const swiperParams = Utils.extend({}, defaults);\n    swiper.useModulesParams(swiperParams);\n\n    // Extend defaults with passed params\n    swiper.params = Utils.extend({}, swiperParams, extendedDefaults, params);\n    swiper.originalParams = Utils.extend({}, swiper.params);\n    swiper.passedParams = Utils.extend({}, params);\n\n    // Save Dom lib\n    swiper.$ = $;\n\n    // Find el\n    const $el = $(swiper.params.el);\n    el = $el[0];\n\n    if (!el) {\n      return undefined;\n    }\n\n    if ($el.length > 1) {\n      const swipers = [];\n      $el.each((index$$1, containerEl) => {\n        const newParams = Utils.extend({}, params, { el: containerEl });\n        swipers.push(new Swiper(newParams));\n      });\n      return swipers;\n    }\n\n    el.swiper = swiper;\n    $el.data('swiper', swiper);\n\n    // Find Wrapper\n    const $wrapperEl = $el.children(`.${swiper.params.wrapperClass}`);\n\n    // Extend Swiper\n    Utils.extend(swiper, {\n      $el,\n      el,\n      $wrapperEl,\n      wrapperEl: $wrapperEl[0],\n\n      // Classes\n      classNames: [],\n\n      // Slides\n      slides: $(),\n      slidesGrid: [],\n      snapGrid: [],\n      slidesSizesGrid: [],\n\n      // isDirection\n      isHorizontal() {\n        return swiper.params.direction === 'horizontal';\n      },\n      isVertical() {\n        return swiper.params.direction === 'vertical';\n      },\n      // RTL\n      rtl: (el.dir.toLowerCase() === 'rtl' || $el.css('direction') === 'rtl'),\n      rtlTranslate: swiper.params.direction === 'horizontal' && (el.dir.toLowerCase() === 'rtl' || $el.css('direction') === 'rtl'),\n      wrongRTL: $wrapperEl.css('display') === '-webkit-box',\n\n      // Indexes\n      activeIndex: 0,\n      realIndex: 0,\n\n      //\n      isBeginning: true,\n      isEnd: false,\n\n      // Props\n      translate: 0,\n      previousTranslate: 0,\n      progress: 0,\n      velocity: 0,\n      animating: false,\n\n      // Locks\n      allowSlideNext: swiper.params.allowSlideNext,\n      allowSlidePrev: swiper.params.allowSlidePrev,\n\n      // Touch Events\n      touchEvents: (function touchEvents() {\n        const touch = ['touchstart', 'touchmove', 'touchend'];\n        let desktop = ['mousedown', 'mousemove', 'mouseup'];\n        if (Support.pointerEvents) {\n          desktop = ['pointerdown', 'pointermove', 'pointerup'];\n        } else if (Support.prefixedPointerEvents) {\n          desktop = ['MSPointerDown', 'MSPointerMove', 'MSPointerUp'];\n        }\n        swiper.touchEventsTouch = {\n          start: touch[0],\n          move: touch[1],\n          end: touch[2],\n        };\n        swiper.touchEventsDesktop = {\n          start: desktop[0],\n          move: desktop[1],\n          end: desktop[2],\n        };\n        return Support.touch || !swiper.params.simulateTouch ? swiper.touchEventsTouch : swiper.touchEventsDesktop;\n      }()),\n      touchEventsData: {\n        isTouched: undefined,\n        isMoved: undefined,\n        allowTouchCallbacks: undefined,\n        touchStartTime: undefined,\n        isScrolling: undefined,\n        currentTranslate: undefined,\n        startTranslate: undefined,\n        allowThresholdMove: undefined,\n        // Form elements to match\n        formElements: 'input, select, option, textarea, button, video',\n        // Last click time\n        lastClickTime: Utils.now(),\n        clickTimeout: undefined,\n        // Velocities\n        velocities: [],\n        allowMomentumBounce: undefined,\n        isTouchEvent: undefined,\n        startMoving: undefined,\n      },\n\n      // Clicks\n      allowClick: true,\n\n      // Touches\n      allowTouchMove: swiper.params.allowTouchMove,\n\n      touches: {\n        startX: 0,\n        startY: 0,\n        currentX: 0,\n        currentY: 0,\n        diff: 0,\n      },\n\n      // Images\n      imagesToLoad: [],\n      imagesLoaded: 0,\n\n    });\n\n    // Install Modules\n    swiper.useModules();\n\n    // Init\n    if (swiper.params.init) {\n      swiper.init();\n    }\n\n    // Return app instance\n    return swiper;\n  }\n  slidesPerViewDynamic() {\n    const swiper = this;\n    const {\n      params, slides, slidesGrid, size: swiperSize, activeIndex,\n    } = swiper;\n    let spv = 1;\n    if (params.centeredSlides) {\n      let slideSize = slides[activeIndex].swiperSlideSize;\n      let breakLoop;\n      for (let i = activeIndex + 1; i < slides.length; i += 1) {\n        if (slides[i] && !breakLoop) {\n          slideSize += slides[i].swiperSlideSize;\n          spv += 1;\n          if (slideSize > swiperSize) breakLoop = true;\n        }\n      }\n      for (let i = activeIndex - 1; i >= 0; i -= 1) {\n        if (slides[i] && !breakLoop) {\n          slideSize += slides[i].swiperSlideSize;\n          spv += 1;\n          if (slideSize > swiperSize) breakLoop = true;\n        }\n      }\n    } else {\n      for (let i = activeIndex + 1; i < slides.length; i += 1) {\n        if (slidesGrid[i] - slidesGrid[activeIndex] < swiperSize) {\n          spv += 1;\n        }\n      }\n    }\n    return spv;\n  }\n  update() {\n    const swiper = this;\n    if (!swiper || swiper.destroyed) return;\n    const { snapGrid, params } = swiper;\n    // Breakpoints\n    if (params.breakpoints) {\n      swiper.setBreakpoint();\n    }\n    swiper.updateSize();\n    swiper.updateSlides();\n    swiper.updateProgress();\n    swiper.updateSlidesClasses();\n\n    function setTranslate() {\n      const translateValue = swiper.rtlTranslate ? swiper.translate * -1 : swiper.translate;\n      const newTranslate = Math.min(Math.max(translateValue, swiper.maxTranslate()), swiper.minTranslate());\n      swiper.setTranslate(newTranslate);\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n    let translated;\n    if (swiper.params.freeMode) {\n      setTranslate();\n      if (swiper.params.autoHeight) {\n        swiper.updateAutoHeight();\n      }\n    } else {\n      if ((swiper.params.slidesPerView === 'auto' || swiper.params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {\n        translated = swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n      } else {\n        translated = swiper.slideTo(swiper.activeIndex, 0, false, true);\n      }\n      if (!translated) {\n        setTranslate();\n      }\n    }\n    if (params.watchOverflow && snapGrid !== swiper.snapGrid) {\n      swiper.checkOverflow();\n    }\n    swiper.emit('update');\n  }\n  init() {\n    const swiper = this;\n    if (swiper.initialized) return;\n\n    swiper.emit('beforeInit');\n\n    // Set breakpoint\n    if (swiper.params.breakpoints) {\n      swiper.setBreakpoint();\n    }\n\n    // Add Classes\n    swiper.addClasses();\n\n    // Create loop\n    if (swiper.params.loop) {\n      swiper.loopCreate();\n    }\n\n    // Update size\n    swiper.updateSize();\n\n    // Update slides\n    swiper.updateSlides();\n\n    if (swiper.params.watchOverflow) {\n      swiper.checkOverflow();\n    }\n\n    // Set Grab Cursor\n    if (swiper.params.grabCursor) {\n      swiper.setGrabCursor();\n    }\n\n    if (swiper.params.preloadImages) {\n      swiper.preloadImages();\n    }\n\n    // Slide To Initial Slide\n    if (swiper.params.loop) {\n      swiper.slideTo(swiper.params.initialSlide + swiper.loopedSlides, 0, swiper.params.runCallbacksOnInit);\n    } else {\n      swiper.slideTo(swiper.params.initialSlide, 0, swiper.params.runCallbacksOnInit);\n    }\n\n    // Attach events\n    swiper.attachEvents();\n\n    // Init Flag\n    swiper.initialized = true;\n\n    // Emit\n    swiper.emit('init');\n  }\n  destroy(deleteInstance = true, cleanStyles = true) {\n    const swiper = this;\n    const {\n      params, $el, $wrapperEl, slides,\n    } = swiper;\n\n    if (typeof swiper.params === 'undefined' || swiper.destroyed) {\n      return null;\n    }\n\n    swiper.emit('beforeDestroy');\n\n    // Init Flag\n    swiper.initialized = false;\n\n    // Detach events\n    swiper.detachEvents();\n\n    // Destroy loop\n    if (params.loop) {\n      swiper.loopDestroy();\n    }\n\n    // Cleanup styles\n    if (cleanStyles) {\n      swiper.removeClasses();\n      $el.removeAttr('style');\n      $wrapperEl.removeAttr('style');\n      if (slides && slides.length) {\n        slides\n          .removeClass([\n            params.slideVisibleClass,\n            params.slideActiveClass,\n            params.slideNextClass,\n            params.slidePrevClass,\n          ].join(' '))\n          .removeAttr('style')\n          .removeAttr('data-swiper-slide-index')\n          .removeAttr('data-swiper-column')\n          .removeAttr('data-swiper-row');\n      }\n    }\n\n    swiper.emit('destroy');\n\n    // Detach emitter events\n    Object.keys(swiper.eventsListeners).forEach((eventName) => {\n      swiper.off(eventName);\n    });\n\n    if (deleteInstance !== false) {\n      swiper.$el[0].swiper = null;\n      swiper.$el.data('swiper', null);\n      Utils.deleteProps(swiper);\n    }\n    swiper.destroyed = true;\n\n    return null;\n  }\n  static extendDefaults(newDefaults) {\n    Utils.extend(extendedDefaults, newDefaults);\n  }\n  static get extendedDefaults() {\n    return extendedDefaults;\n  }\n  static get defaults() {\n    return defaults;\n  }\n  static get Class() {\n    return SwiperClass;\n  }\n  static get $() {\n    return $;\n  }\n}\n\nvar Device$1 = {\n  name: 'device',\n  proto: {\n    device: Device,\n  },\n  static: {\n    device: Device,\n  },\n};\n\nvar Support$1 = {\n  name: 'support',\n  proto: {\n    support: Support,\n  },\n  static: {\n    support: Support,\n  },\n};\n\nvar Browser$1 = {\n  name: 'browser',\n  proto: {\n    browser: Browser,\n  },\n  static: {\n    browser: Browser,\n  },\n};\n\nvar Resize = {\n  name: 'resize',\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      resize: {\n        resizeHandler() {\n          if (!swiper || swiper.destroyed || !swiper.initialized) return;\n          swiper.emit('beforeResize');\n          swiper.emit('resize');\n        },\n        orientationChangeHandler() {\n          if (!swiper || swiper.destroyed || !swiper.initialized) return;\n          swiper.emit('orientationchange');\n        },\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      // Emit resize\n      window.addEventListener('resize', swiper.resize.resizeHandler);\n\n      // Emit orientationchange\n      window.addEventListener('orientationchange', swiper.resize.orientationChangeHandler);\n    },\n    destroy() {\n      const swiper = this;\n      window.removeEventListener('resize', swiper.resize.resizeHandler);\n      window.removeEventListener('orientationchange', swiper.resize.orientationChangeHandler);\n    },\n  },\n};\n\nconst Observer = {\n  func: window.MutationObserver || window.WebkitMutationObserver,\n  attach(target, options = {}) {\n    const swiper = this;\n\n    const ObserverFunc = Observer.func;\n    const observer = new ObserverFunc((mutations) => {\n      mutations.forEach((mutation) => {\n        swiper.emit('observerUpdate', mutation);\n      });\n    });\n\n    observer.observe(target, {\n      attributes: typeof options.attributes === 'undefined' ? true : options.attributes,\n      childList: typeof options.childList === 'undefined' ? true : options.childList,\n      characterData: typeof options.characterData === 'undefined' ? true : options.characterData,\n    });\n\n    swiper.observer.observers.push(observer);\n  },\n  init() {\n    const swiper = this;\n    if (!Support.observer || !swiper.params.observer) return;\n    if (swiper.params.observeParents) {\n      const containerParents = swiper.$el.parents();\n      for (let i = 0; i < containerParents.length; i += 1) {\n        swiper.observer.attach(containerParents[i]);\n      }\n    }\n    // Observe container\n    swiper.observer.attach(swiper.$el[0], { childList: false });\n\n    // Observe wrapper\n    swiper.observer.attach(swiper.$wrapperEl[0], { attributes: false });\n  },\n  destroy() {\n    const swiper = this;\n    swiper.observer.observers.forEach((observer) => {\n      observer.disconnect();\n    });\n    swiper.observer.observers = [];\n  },\n};\n\nvar Observer$1 = {\n  name: 'observer',\n  params: {\n    observer: false,\n    observeParents: false,\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      observer: {\n        init: Observer.init.bind(swiper),\n        attach: Observer.attach.bind(swiper),\n        destroy: Observer.destroy.bind(swiper),\n        observers: [],\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.observer.init();\n    },\n    destroy() {\n      const swiper = this;\n      swiper.observer.destroy();\n    },\n  },\n};\n\nconst Virtual = {\n  update(force) {\n    const swiper = this;\n    const { slidesPerView, slidesPerGroup, centeredSlides } = swiper.params;\n    const {\n      from: previousFrom,\n      to: previousTo,\n      slides,\n      slidesGrid: previousSlidesGrid,\n      renderSlide,\n      offset: previousOffset,\n    } = swiper.virtual;\n    swiper.updateActiveIndex();\n    const activeIndex = swiper.activeIndex || 0;\n\n    let offsetProp;\n    if (swiper.rtlTranslate) offsetProp = 'right';\n    else offsetProp = swiper.isHorizontal() ? 'left' : 'top';\n\n    let slidesAfter;\n    let slidesBefore;\n    if (centeredSlides) {\n      slidesAfter = Math.floor(slidesPerView / 2) + slidesPerGroup;\n      slidesBefore = Math.floor(slidesPerView / 2) + slidesPerGroup;\n    } else {\n      slidesAfter = slidesPerView + (slidesPerGroup - 1);\n      slidesBefore = slidesPerGroup;\n    }\n    const from = Math.max((activeIndex || 0) - slidesBefore, 0);\n    const to = Math.min((activeIndex || 0) + slidesAfter, slides.length - 1);\n    const offset$$1 = (swiper.slidesGrid[from] || 0) - (swiper.slidesGrid[0] || 0);\n\n    Utils.extend(swiper.virtual, {\n      from,\n      to,\n      offset: offset$$1,\n      slidesGrid: swiper.slidesGrid,\n    });\n\n    function onRendered() {\n      swiper.updateSlides();\n      swiper.updateProgress();\n      swiper.updateSlidesClasses();\n      if (swiper.lazy && swiper.params.lazy.enabled) {\n        swiper.lazy.load();\n      }\n    }\n\n    if (previousFrom === from && previousTo === to && !force) {\n      if (swiper.slidesGrid !== previousSlidesGrid && offset$$1 !== previousOffset) {\n        swiper.slides.css(offsetProp, `${offset$$1}px`);\n      }\n      swiper.updateProgress();\n      return;\n    }\n    if (swiper.params.virtual.renderExternal) {\n      swiper.params.virtual.renderExternal.call(swiper, {\n        offset: offset$$1,\n        from,\n        to,\n        slides: (function getSlides() {\n          const slidesToRender = [];\n          for (let i = from; i <= to; i += 1) {\n            slidesToRender.push(slides[i]);\n          }\n          return slidesToRender;\n        }()),\n      });\n      onRendered();\n      return;\n    }\n    const prependIndexes = [];\n    const appendIndexes = [];\n    if (force) {\n      swiper.$wrapperEl.find(`.${swiper.params.slideClass}`).remove();\n    } else {\n      for (let i = previousFrom; i <= previousTo; i += 1) {\n        if (i < from || i > to) {\n          swiper.$wrapperEl.find(`.${swiper.params.slideClass}[data-swiper-slide-index=\"${i}\"]`).remove();\n        }\n      }\n    }\n    for (let i = 0; i < slides.length; i += 1) {\n      if (i >= from && i <= to) {\n        if (typeof previousTo === 'undefined' || force) {\n          appendIndexes.push(i);\n        } else {\n          if (i > previousTo) appendIndexes.push(i);\n          if (i < previousFrom) prependIndexes.push(i);\n        }\n      }\n    }\n    appendIndexes.forEach((index$$1) => {\n      swiper.$wrapperEl.append(renderSlide(slides[index$$1], index$$1));\n    });\n    prependIndexes.sort((a, b) => a < b).forEach((index$$1) => {\n      swiper.$wrapperEl.prepend(renderSlide(slides[index$$1], index$$1));\n    });\n    swiper.$wrapperEl.children('.swiper-slide').css(offsetProp, `${offset$$1}px`);\n    onRendered();\n  },\n  renderSlide(slide, index$$1) {\n    const swiper = this;\n    const params = swiper.params.virtual;\n    if (params.cache && swiper.virtual.cache[index$$1]) {\n      return swiper.virtual.cache[index$$1];\n    }\n    const $slideEl = params.renderSlide\n      ? $(params.renderSlide.call(swiper, slide, index$$1))\n      : $(`<div class=\"${swiper.params.slideClass}\" data-swiper-slide-index=\"${index$$1}\">${slide}</div>`);\n    if (!$slideEl.attr('data-swiper-slide-index')) $slideEl.attr('data-swiper-slide-index', index$$1);\n    if (params.cache) swiper.virtual.cache[index$$1] = $slideEl;\n    return $slideEl;\n  },\n  appendSlide(slide) {\n    const swiper = this;\n    swiper.virtual.slides.push(slide);\n    swiper.virtual.update(true);\n  },\n  prependSlide(slide) {\n    const swiper = this;\n    swiper.virtual.slides.unshift(slide);\n    if (swiper.params.virtual.cache) {\n      const cache = swiper.virtual.cache;\n      const newCache = {};\n      Object.keys(cache).forEach((cachedIndex) => {\n        newCache[cachedIndex + 1] = cache[cachedIndex];\n      });\n      swiper.virtual.cache = newCache;\n    }\n    swiper.virtual.update(true);\n    swiper.slideNext(0);\n  },\n};\n\nvar Virtual$1 = {\n  name: 'virtual',\n  params: {\n    virtual: {\n      enabled: false,\n      slides: [],\n      cache: true,\n      renderSlide: null,\n      renderExternal: null,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      virtual: {\n        update: Virtual.update.bind(swiper),\n        appendSlide: Virtual.appendSlide.bind(swiper),\n        prependSlide: Virtual.prependSlide.bind(swiper),\n        renderSlide: Virtual.renderSlide.bind(swiper),\n        slides: swiper.params.virtual.slides,\n        cache: {},\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (!swiper.params.virtual.enabled) return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}virtual`);\n      const overwriteParams = {\n        watchSlidesProgress: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n\n      swiper.virtual.update();\n    },\n    setTranslate() {\n      const swiper = this;\n      if (!swiper.params.virtual.enabled) return;\n      swiper.virtual.update();\n    },\n  },\n};\n\nconst Keyboard = {\n  handle(event) {\n    const swiper = this;\n    const { rtlTranslate: rtl } = swiper;\n    let e = event;\n    if (e.originalEvent) e = e.originalEvent; // jquery fix\n    const kc = e.keyCode || e.charCode;\n    // Directions locks\n    if (!swiper.allowSlideNext && ((swiper.isHorizontal() && kc === 39) || (swiper.isVertical() && kc === 40))) {\n      return false;\n    }\n    if (!swiper.allowSlidePrev && ((swiper.isHorizontal() && kc === 37) || (swiper.isVertical() && kc === 38))) {\n      return false;\n    }\n    if (e.shiftKey || e.altKey || e.ctrlKey || e.metaKey) {\n      return undefined;\n    }\n    if (document.activeElement && document.activeElement.nodeName && (document.activeElement.nodeName.toLowerCase() === 'input' || document.activeElement.nodeName.toLowerCase() === 'textarea')) {\n      return undefined;\n    }\n    if (swiper.params.keyboard.onlyInViewport && (kc === 37 || kc === 39 || kc === 38 || kc === 40)) {\n      let inView = false;\n      // Check that swiper should be inside of visible area of window\n      if (swiper.$el.parents(`.${swiper.params.slideClass}`).length > 0 && swiper.$el.parents(`.${swiper.params.slideActiveClass}`).length === 0) {\n        return undefined;\n      }\n      const windowWidth = window.innerWidth;\n      const windowHeight = window.innerHeight;\n      const swiperOffset = swiper.$el.offset();\n      if (rtl) swiperOffset.left -= swiper.$el[0].scrollLeft;\n      const swiperCoord = [\n        [swiperOffset.left, swiperOffset.top],\n        [swiperOffset.left + swiper.width, swiperOffset.top],\n        [swiperOffset.left, swiperOffset.top + swiper.height],\n        [swiperOffset.left + swiper.width, swiperOffset.top + swiper.height],\n      ];\n      for (let i = 0; i < swiperCoord.length; i += 1) {\n        const point = swiperCoord[i];\n        if (\n          point[0] >= 0 && point[0] <= windowWidth &&\n          point[1] >= 0 && point[1] <= windowHeight\n        ) {\n          inView = true;\n        }\n      }\n      if (!inView) return undefined;\n    }\n    if (swiper.isHorizontal()) {\n      if (kc === 37 || kc === 39) {\n        if (e.preventDefault) e.preventDefault();\n        else e.returnValue = false;\n      }\n      if ((kc === 39 && !rtl) || (kc === 37 && rtl)) swiper.slideNext();\n      if ((kc === 37 && !rtl) || (kc === 39 && rtl)) swiper.slidePrev();\n    } else {\n      if (kc === 38 || kc === 40) {\n        if (e.preventDefault) e.preventDefault();\n        else e.returnValue = false;\n      }\n      if (kc === 40) swiper.slideNext();\n      if (kc === 38) swiper.slidePrev();\n    }\n    swiper.emit('keyPress', kc);\n    return undefined;\n  },\n  enable() {\n    const swiper = this;\n    if (swiper.keyboard.enabled) return;\n    $(document).on('keydown', swiper.keyboard.handle);\n    swiper.keyboard.enabled = true;\n  },\n  disable() {\n    const swiper = this;\n    if (!swiper.keyboard.enabled) return;\n    $(document).off('keydown', swiper.keyboard.handle);\n    swiper.keyboard.enabled = false;\n  },\n};\n\nvar Keyboard$1 = {\n  name: 'keyboard',\n  params: {\n    keyboard: {\n      enabled: false,\n      onlyInViewport: true,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      keyboard: {\n        enabled: false,\n        enable: Keyboard.enable.bind(swiper),\n        disable: Keyboard.disable.bind(swiper),\n        handle: Keyboard.handle.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.keyboard.enabled) {\n        swiper.keyboard.enable();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.keyboard.enabled) {\n        swiper.keyboard.disable();\n      }\n    },\n  },\n};\n\nfunction isEventSupported() {\n  const eventName = 'onwheel';\n  let isSupported = eventName in document;\n\n  if (!isSupported) {\n    const element = document.createElement('div');\n    element.setAttribute(eventName, 'return;');\n    isSupported = typeof element[eventName] === 'function';\n  }\n\n  if (!isSupported &&\n    document.implementation &&\n    document.implementation.hasFeature &&\n    // always returns true in newer browsers as per the standard.\n    // @see http://dom.spec.whatwg.org/#dom-domimplementation-hasfeature\n    document.implementation.hasFeature('', '') !== true\n  ) {\n    // This is the only way to test support for the `wheel` event in IE9+.\n    isSupported = document.implementation.hasFeature('Events.wheel', '3.0');\n  }\n\n  return isSupported;\n}\nconst Mousewheel = {\n  lastScrollTime: Utils.now(),\n  event: (function getEvent() {\n    if (window.navigator.userAgent.indexOf('firefox') > -1) return 'DOMMouseScroll';\n    return isEventSupported() ? 'wheel' : 'mousewheel';\n  }()),\n  normalize(e) {\n    // Reasonable defaults\n    const PIXEL_STEP = 10;\n    const LINE_HEIGHT = 40;\n    const PAGE_HEIGHT = 800;\n\n    let sX = 0;\n    let sY = 0; // spinX, spinY\n    let pX = 0;\n    let pY = 0; // pixelX, pixelY\n\n    // Legacy\n    if ('detail' in e) {\n      sY = e.detail;\n    }\n    if ('wheelDelta' in e) {\n      sY = -e.wheelDelta / 120;\n    }\n    if ('wheelDeltaY' in e) {\n      sY = -e.wheelDeltaY / 120;\n    }\n    if ('wheelDeltaX' in e) {\n      sX = -e.wheelDeltaX / 120;\n    }\n\n    // side scrolling on FF with DOMMouseScroll\n    if ('axis' in e && e.axis === e.HORIZONTAL_AXIS) {\n      sX = sY;\n      sY = 0;\n    }\n\n    pX = sX * PIXEL_STEP;\n    pY = sY * PIXEL_STEP;\n\n    if ('deltaY' in e) {\n      pY = e.deltaY;\n    }\n    if ('deltaX' in e) {\n      pX = e.deltaX;\n    }\n\n    if ((pX || pY) && e.deltaMode) {\n      if (e.deltaMode === 1) { // delta in LINE units\n        pX *= LINE_HEIGHT;\n        pY *= LINE_HEIGHT;\n      } else { // delta in PAGE units\n        pX *= PAGE_HEIGHT;\n        pY *= PAGE_HEIGHT;\n      }\n    }\n\n    // Fall-back if spin cannot be determined\n    if (pX && !sX) {\n      sX = (pX < 1) ? -1 : 1;\n    }\n    if (pY && !sY) {\n      sY = (pY < 1) ? -1 : 1;\n    }\n\n    return {\n      spinX: sX,\n      spinY: sY,\n      pixelX: pX,\n      pixelY: pY,\n    };\n  },\n  handleMouseEnter() {\n    const swiper = this;\n    swiper.mouseEntered = true;\n  },\n  handleMouseLeave() {\n    const swiper = this;\n    swiper.mouseEntered = false;\n  },\n  handle(event) {\n    let e = event;\n    const swiper = this;\n    const params = swiper.params.mousewheel;\n\n    if (!swiper.mouseEntered && !params.releaseOnEdges) return true;\n\n    if (e.originalEvent) e = e.originalEvent; // jquery fix\n    let delta = 0;\n    const rtlFactor = swiper.rtlTranslate ? -1 : 1;\n\n    const data$$1 = Mousewheel.normalize(e);\n\n    if (params.forceToAxis) {\n      if (swiper.isHorizontal()) {\n        if (Math.abs(data$$1.pixelX) > Math.abs(data$$1.pixelY)) delta = data$$1.pixelX * rtlFactor;\n        else return true;\n      } else if (Math.abs(data$$1.pixelY) > Math.abs(data$$1.pixelX)) delta = data$$1.pixelY;\n      else return true;\n    } else {\n      delta = Math.abs(data$$1.pixelX) > Math.abs(data$$1.pixelY) ? -data$$1.pixelX * rtlFactor : -data$$1.pixelY;\n    }\n\n    if (delta === 0) return true;\n\n    if (params.invert) delta = -delta;\n\n    if (!swiper.params.freeMode) {\n      if (Utils.now() - swiper.mousewheel.lastScrollTime > 60) {\n        if (delta < 0) {\n          if ((!swiper.isEnd || swiper.params.loop) && !swiper.animating) {\n            swiper.slideNext();\n            swiper.emit('scroll', e);\n          } else if (params.releaseOnEdges) return true;\n        } else if ((!swiper.isBeginning || swiper.params.loop) && !swiper.animating) {\n          swiper.slidePrev();\n          swiper.emit('scroll', e);\n        } else if (params.releaseOnEdges) return true;\n      }\n      swiper.mousewheel.lastScrollTime = (new window.Date()).getTime();\n    } else {\n      // Freemode or scrollContainer:\n      if (swiper.params.loop) {\n        swiper.loopFix();\n      }\n      let position = swiper.getTranslate() + (delta * params.sensitivity);\n      const wasBeginning = swiper.isBeginning;\n      const wasEnd = swiper.isEnd;\n\n      if (position >= swiper.minTranslate()) position = swiper.minTranslate();\n      if (position <= swiper.maxTranslate()) position = swiper.maxTranslate();\n\n      swiper.setTransition(0);\n      swiper.setTranslate(position);\n      swiper.updateProgress();\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n\n      if ((!wasBeginning && swiper.isBeginning) || (!wasEnd && swiper.isEnd)) {\n        swiper.updateSlidesClasses();\n      }\n\n      if (swiper.params.freeModeSticky) {\n        clearTimeout(swiper.mousewheel.timeout);\n        swiper.mousewheel.timeout = Utils.nextTick(() => {\n          swiper.slideToClosest();\n        }, 300);\n      }\n      // Emit event\n      swiper.emit('scroll', e);\n\n      // Stop autoplay\n      if (swiper.params.autoplay && swiper.params.autoplayDisableOnInteraction) swiper.autoplay.stop();\n      // Return page scroll on edge positions\n      if (position === swiper.minTranslate() || position === swiper.maxTranslate()) return true;\n    }\n\n    if (e.preventDefault) e.preventDefault();\n    else e.returnValue = false;\n    return false;\n  },\n  enable() {\n    const swiper = this;\n    if (!Mousewheel.event) return false;\n    if (swiper.mousewheel.enabled) return false;\n    let target = swiper.$el;\n    if (swiper.params.mousewheel.eventsTarged !== 'container') {\n      target = $(swiper.params.mousewheel.eventsTarged);\n    }\n    target.on('mouseenter', swiper.mousewheel.handleMouseEnter);\n    target.on('mouseleave', swiper.mousewheel.handleMouseLeave);\n    target.on(Mousewheel.event, swiper.mousewheel.handle);\n    swiper.mousewheel.enabled = true;\n    return true;\n  },\n  disable() {\n    const swiper = this;\n    if (!Mousewheel.event) return false;\n    if (!swiper.mousewheel.enabled) return false;\n    let target = swiper.$el;\n    if (swiper.params.mousewheel.eventsTarged !== 'container') {\n      target = $(swiper.params.mousewheel.eventsTarged);\n    }\n    target.off(Mousewheel.event, swiper.mousewheel.handle);\n    swiper.mousewheel.enabled = false;\n    return true;\n  },\n};\n\nvar Mousewheel$1 = {\n  name: 'mousewheel',\n  params: {\n    mousewheel: {\n      enabled: false,\n      releaseOnEdges: false,\n      invert: false,\n      forceToAxis: false,\n      sensitivity: 1,\n      eventsTarged: 'container',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      mousewheel: {\n        enabled: false,\n        enable: Mousewheel.enable.bind(swiper),\n        disable: Mousewheel.disable.bind(swiper),\n        handle: Mousewheel.handle.bind(swiper),\n        handleMouseEnter: Mousewheel.handleMouseEnter.bind(swiper),\n        handleMouseLeave: Mousewheel.handleMouseLeave.bind(swiper),\n        lastScrollTime: Utils.now(),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.mousewheel.enabled) swiper.mousewheel.enable();\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.mousewheel.enabled) swiper.mousewheel.disable();\n    },\n  },\n};\n\nconst Navigation = {\n  update() {\n    // Update Navigation Buttons\n    const swiper = this;\n    const params = swiper.params.navigation;\n\n    if (swiper.params.loop) return;\n    const { $nextEl, $prevEl } = swiper.navigation;\n\n    if ($prevEl && $prevEl.length > 0) {\n      if (swiper.isBeginning) {\n        $prevEl.addClass(params.disabledClass);\n      } else {\n        $prevEl.removeClass(params.disabledClass);\n      }\n      $prevEl[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n    }\n    if ($nextEl && $nextEl.length > 0) {\n      if (swiper.isEnd) {\n        $nextEl.addClass(params.disabledClass);\n      } else {\n        $nextEl.removeClass(params.disabledClass);\n      }\n      $nextEl[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n    }\n  },\n  init() {\n    const swiper = this;\n    const params = swiper.params.navigation;\n    if (!(params.nextEl || params.prevEl)) return;\n\n    let $nextEl;\n    let $prevEl;\n    if (params.nextEl) {\n      $nextEl = $(params.nextEl);\n      if (\n        swiper.params.uniqueNavElements &&\n        typeof params.nextEl === 'string' &&\n        $nextEl.length > 1 &&\n        swiper.$el.find(params.nextEl).length === 1\n      ) {\n        $nextEl = swiper.$el.find(params.nextEl);\n      }\n    }\n    if (params.prevEl) {\n      $prevEl = $(params.prevEl);\n      if (\n        swiper.params.uniqueNavElements &&\n        typeof params.prevEl === 'string' &&\n        $prevEl.length > 1 &&\n        swiper.$el.find(params.prevEl).length === 1\n      ) {\n        $prevEl = swiper.$el.find(params.prevEl);\n      }\n    }\n\n    if ($nextEl && $nextEl.length > 0) {\n      $nextEl.on('click', (e) => {\n        e.preventDefault();\n        if (swiper.isEnd && !swiper.params.loop) return;\n        swiper.slideNext();\n      });\n    }\n    if ($prevEl && $prevEl.length > 0) {\n      $prevEl.on('click', (e) => {\n        e.preventDefault();\n        if (swiper.isBeginning && !swiper.params.loop) return;\n        swiper.slidePrev();\n      });\n    }\n\n    Utils.extend(swiper.navigation, {\n      $nextEl,\n      nextEl: $nextEl && $nextEl[0],\n      $prevEl,\n      prevEl: $prevEl && $prevEl[0],\n    });\n  },\n  destroy() {\n    const swiper = this;\n    const { $nextEl, $prevEl } = swiper.navigation;\n    if ($nextEl && $nextEl.length) {\n      $nextEl.off('click');\n      $nextEl.removeClass(swiper.params.navigation.disabledClass);\n    }\n    if ($prevEl && $prevEl.length) {\n      $prevEl.off('click');\n      $prevEl.removeClass(swiper.params.navigation.disabledClass);\n    }\n  },\n};\n\nvar Navigation$1 = {\n  name: 'navigation',\n  params: {\n    navigation: {\n      nextEl: null,\n      prevEl: null,\n\n      hideOnClick: false,\n      disabledClass: 'swiper-button-disabled',\n      hiddenClass: 'swiper-button-hidden',\n      lockClass: 'swiper-button-lock',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      navigation: {\n        init: Navigation.init.bind(swiper),\n        update: Navigation.update.bind(swiper),\n        destroy: Navigation.destroy.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.navigation.init();\n      swiper.navigation.update();\n    },\n    toEdge() {\n      const swiper = this;\n      swiper.navigation.update();\n    },\n    fromEdge() {\n      const swiper = this;\n      swiper.navigation.update();\n    },\n    destroy() {\n      const swiper = this;\n      swiper.navigation.destroy();\n    },\n    click(e) {\n      const swiper = this;\n      const { $nextEl, $prevEl } = swiper.navigation;\n      if (\n        swiper.params.navigation.hideOnClick &&\n        !$(e.target).is($prevEl) &&\n        !$(e.target).is($nextEl)\n      ) {\n        if ($nextEl) $nextEl.toggleClass(swiper.params.navigation.hiddenClass);\n        if ($prevEl) $prevEl.toggleClass(swiper.params.navigation.hiddenClass);\n      }\n    },\n  },\n};\n\nconst Pagination = {\n  update() {\n    // Render || Update Pagination bullets/items\n    const swiper = this;\n    const rtl = swiper.rtl;\n    const params = swiper.params.pagination;\n    if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) return;\n    const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n    const $el = swiper.pagination.$el;\n    // Current/Total\n    let current;\n    const total = swiper.params.loop ? Math.ceil((slidesLength - (swiper.loopedSlides * 2)) / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n    if (swiper.params.loop) {\n      current = Math.ceil((swiper.activeIndex - swiper.loopedSlides) / swiper.params.slidesPerGroup);\n      if (current > slidesLength - 1 - (swiper.loopedSlides * 2)) {\n        current -= (slidesLength - (swiper.loopedSlides * 2));\n      }\n      if (current > total - 1) current -= total;\n      if (current < 0 && swiper.params.paginationType !== 'bullets') current = total + current;\n    } else if (typeof swiper.snapIndex !== 'undefined') {\n      current = swiper.snapIndex;\n    } else {\n      current = swiper.activeIndex || 0;\n    }\n    // Types\n    if (params.type === 'bullets' && swiper.pagination.bullets && swiper.pagination.bullets.length > 0) {\n      const bullets = swiper.pagination.bullets;\n      let firstIndex;\n      let lastIndex;\n      let midIndex;\n      if (params.dynamicBullets) {\n        swiper.pagination.bulletSize = bullets.eq(0)[swiper.isHorizontal() ? 'outerWidth' : 'outerHeight'](true);\n        $el.css(swiper.isHorizontal() ? 'width' : 'height', `${swiper.pagination.bulletSize * (params.dynamicMainBullets + 4)}px`);\n        if (params.dynamicMainBullets > 1 && swiper.previousIndex !== undefined) {\n          swiper.pagination.dynamicBulletIndex += (current - swiper.previousIndex);\n          if (swiper.pagination.dynamicBulletIndex > (params.dynamicMainBullets - 1)) {\n            swiper.pagination.dynamicBulletIndex = params.dynamicMainBullets - 1;\n          } else if (swiper.pagination.dynamicBulletIndex < 0) {\n            swiper.pagination.dynamicBulletIndex = 0;\n          }\n        }\n        firstIndex = current - swiper.pagination.dynamicBulletIndex;\n        lastIndex = firstIndex + (Math.min(bullets.length, params.dynamicMainBullets) - 1);\n        midIndex = (lastIndex + firstIndex) / 2;\n      }\n      bullets.removeClass(`${params.bulletActiveClass} ${params.bulletActiveClass}-next ${params.bulletActiveClass}-next-next ${params.bulletActiveClass}-prev ${params.bulletActiveClass}-prev-prev ${params.bulletActiveClass}-main`);\n      if ($el.length > 1) {\n        bullets.each((index$$1, bullet) => {\n          const $bullet = $(bullet);\n          const bulletIndex = $bullet.index();\n          if (bulletIndex === current) {\n            $bullet.addClass(params.bulletActiveClass);\n          }\n          if (params.dynamicBullets) {\n            if (bulletIndex >= firstIndex && bulletIndex <= lastIndex) {\n              $bullet.addClass(`${params.bulletActiveClass}-main`);\n            }\n            if (bulletIndex === firstIndex) {\n              $bullet\n                .prev()\n                .addClass(`${params.bulletActiveClass}-prev`)\n                .prev()\n                .addClass(`${params.bulletActiveClass}-prev-prev`);\n            }\n            if (bulletIndex === lastIndex) {\n              $bullet\n                .next()\n                .addClass(`${params.bulletActiveClass}-next`)\n                .next()\n                .addClass(`${params.bulletActiveClass}-next-next`);\n            }\n          }\n        });\n      } else {\n        const $bullet = bullets.eq(current);\n        $bullet.addClass(params.bulletActiveClass);\n        if (params.dynamicBullets) {\n          const $firstDisplayedBullet = bullets.eq(firstIndex);\n          const $lastDisplayedBullet = bullets.eq(lastIndex);\n          for (let i = firstIndex; i <= lastIndex; i += 1) {\n            bullets.eq(i).addClass(`${params.bulletActiveClass}-main`);\n          }\n          $firstDisplayedBullet\n            .prev()\n            .addClass(`${params.bulletActiveClass}-prev`)\n            .prev()\n            .addClass(`${params.bulletActiveClass}-prev-prev`);\n          $lastDisplayedBullet\n            .next()\n            .addClass(`${params.bulletActiveClass}-next`)\n            .next()\n            .addClass(`${params.bulletActiveClass}-next-next`);\n        }\n      }\n      if (params.dynamicBullets) {\n        const dynamicBulletsLength = Math.min(bullets.length, params.dynamicMainBullets + 4);\n        const bulletsOffset = (((swiper.pagination.bulletSize * dynamicBulletsLength) - (swiper.pagination.bulletSize)) / 2) - (midIndex * swiper.pagination.bulletSize);\n        const offsetProp = rtl ? 'right' : 'left';\n        bullets.css(swiper.isHorizontal() ? offsetProp : 'top', `${bulletsOffset}px`);\n      }\n    }\n    if (params.type === 'fraction') {\n      $el.find(`.${params.currentClass}`).text(params.formatFractionCurrent(current + 1));\n      $el.find(`.${params.totalClass}`).text(params.formatFractionTotal(total));\n    }\n    if (params.type === 'progressbar') {\n      let progressbarDirection;\n      if (params.progressbarOpposite) {\n        progressbarDirection = swiper.isHorizontal() ? 'vertical' : 'horizontal';\n      } else {\n        progressbarDirection = swiper.isHorizontal() ? 'horizontal' : 'vertical';\n      }\n      const scale = (current + 1) / total;\n      let scaleX = 1;\n      let scaleY = 1;\n      if (progressbarDirection === 'horizontal') {\n        scaleX = scale;\n      } else {\n        scaleY = scale;\n      }\n      $el.find(`.${params.progressbarFillClass}`).transform(`translate3d(0,0,0) scaleX(${scaleX}) scaleY(${scaleY})`).transition(swiper.params.speed);\n    }\n    if (params.type === 'custom' && params.renderCustom) {\n      $el.html(params.renderCustom(swiper, current + 1, total));\n      swiper.emit('paginationRender', swiper, $el[0]);\n    } else {\n      swiper.emit('paginationUpdate', swiper, $el[0]);\n    }\n    $el[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n  },\n  render() {\n    // Render Container\n    const swiper = this;\n    const params = swiper.params.pagination;\n    if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) return;\n    const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n\n    const $el = swiper.pagination.$el;\n    let paginationHTML = '';\n    if (params.type === 'bullets') {\n      const numberOfBullets = swiper.params.loop ? Math.ceil((slidesLength - (swiper.loopedSlides * 2)) / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n      for (let i = 0; i < numberOfBullets; i += 1) {\n        if (params.renderBullet) {\n          paginationHTML += params.renderBullet.call(swiper, i, params.bulletClass);\n        } else {\n          paginationHTML += `<${params.bulletElement} class=\"${params.bulletClass}\"></${params.bulletElement}>`;\n        }\n      }\n      $el.html(paginationHTML);\n      swiper.pagination.bullets = $el.find(`.${params.bulletClass}`);\n    }\n    if (params.type === 'fraction') {\n      if (params.renderFraction) {\n        paginationHTML = params.renderFraction.call(swiper, params.currentClass, params.totalClass);\n      } else {\n        paginationHTML =\n        `<span class=\"${params.currentClass}\"></span>` +\n        ' / ' +\n        `<span class=\"${params.totalClass}\"></span>`;\n      }\n      $el.html(paginationHTML);\n    }\n    if (params.type === 'progressbar') {\n      if (params.renderProgressbar) {\n        paginationHTML = params.renderProgressbar.call(swiper, params.progressbarFillClass);\n      } else {\n        paginationHTML = `<span class=\"${params.progressbarFillClass}\"></span>`;\n      }\n      $el.html(paginationHTML);\n    }\n    if (params.type !== 'custom') {\n      swiper.emit('paginationRender', swiper.pagination.$el[0]);\n    }\n  },\n  init() {\n    const swiper = this;\n    const params = swiper.params.pagination;\n    if (!params.el) return;\n\n    let $el = $(params.el);\n    if ($el.length === 0) return;\n\n    if (\n      swiper.params.uniqueNavElements &&\n      typeof params.el === 'string' &&\n      $el.length > 1 &&\n      swiper.$el.find(params.el).length === 1\n    ) {\n      $el = swiper.$el.find(params.el);\n    }\n\n    if (params.type === 'bullets' && params.clickable) {\n      $el.addClass(params.clickableClass);\n    }\n\n    $el.addClass(params.modifierClass + params.type);\n\n    if (params.type === 'bullets' && params.dynamicBullets) {\n      $el.addClass(`${params.modifierClass}${params.type}-dynamic`);\n      swiper.pagination.dynamicBulletIndex = 0;\n      if (params.dynamicMainBullets < 1) {\n        params.dynamicMainBullets = 1;\n      }\n    }\n    if (params.type === 'progressbar' && params.progressbarOpposite) {\n      $el.addClass(params.progressbarOppositeClass);\n    }\n\n    if (params.clickable) {\n      $el.on('click', `.${params.bulletClass}`, function onClick(e) {\n        e.preventDefault();\n        let index$$1 = $(this).index() * swiper.params.slidesPerGroup;\n        if (swiper.params.loop) index$$1 += swiper.loopedSlides;\n        swiper.slideTo(index$$1);\n      });\n    }\n\n    Utils.extend(swiper.pagination, {\n      $el,\n      el: $el[0],\n    });\n  },\n  destroy() {\n    const swiper = this;\n    const params = swiper.params.pagination;\n    if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) return;\n    const $el = swiper.pagination.$el;\n\n    $el.removeClass(params.hiddenClass);\n    $el.removeClass(params.modifierClass + params.type);\n    if (swiper.pagination.bullets) swiper.pagination.bullets.removeClass(params.bulletActiveClass);\n    if (params.clickable) {\n      $el.off('click', `.${params.bulletClass}`);\n    }\n  },\n};\n\nvar Pagination$1 = {\n  name: 'pagination',\n  params: {\n    pagination: {\n      el: null,\n      bulletElement: 'span',\n      clickable: false,\n      hideOnClick: false,\n      renderBullet: null,\n      renderProgressbar: null,\n      renderFraction: null,\n      renderCustom: null,\n      progressbarOpposite: false,\n      type: 'bullets', // 'bullets' or 'progressbar' or 'fraction' or 'custom'\n      dynamicBullets: false,\n      dynamicMainBullets: 1,\n      formatFractionCurrent: number => number,\n      formatFractionTotal: number => number,\n      bulletClass: 'swiper-pagination-bullet',\n      bulletActiveClass: 'swiper-pagination-bullet-active',\n      modifierClass: 'swiper-pagination-', // NEW\n      currentClass: 'swiper-pagination-current',\n      totalClass: 'swiper-pagination-total',\n      hiddenClass: 'swiper-pagination-hidden',\n      progressbarFillClass: 'swiper-pagination-progressbar-fill',\n      progressbarOppositeClass: 'swiper-pagination-progressbar-opposite',\n      clickableClass: 'swiper-pagination-clickable', // NEW\n      lockClass: 'swiper-pagination-lock',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      pagination: {\n        init: Pagination.init.bind(swiper),\n        render: Pagination.render.bind(swiper),\n        update: Pagination.update.bind(swiper),\n        destroy: Pagination.destroy.bind(swiper),\n        dynamicBulletIndex: 0,\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.pagination.init();\n      swiper.pagination.render();\n      swiper.pagination.update();\n    },\n    activeIndexChange() {\n      const swiper = this;\n      if (swiper.params.loop) {\n        swiper.pagination.update();\n      } else if (typeof swiper.snapIndex === 'undefined') {\n        swiper.pagination.update();\n      }\n    },\n    snapIndexChange() {\n      const swiper = this;\n      if (!swiper.params.loop) {\n        swiper.pagination.update();\n      }\n    },\n    slidesLengthChange() {\n      const swiper = this;\n      if (swiper.params.loop) {\n        swiper.pagination.render();\n        swiper.pagination.update();\n      }\n    },\n    snapGridLengthChange() {\n      const swiper = this;\n      if (!swiper.params.loop) {\n        swiper.pagination.render();\n        swiper.pagination.update();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      swiper.pagination.destroy();\n    },\n    click(e) {\n      const swiper = this;\n      if (\n        swiper.params.pagination.el &&\n        swiper.params.pagination.hideOnClick &&\n        swiper.pagination.$el.length > 0 &&\n        !$(e.target).hasClass(swiper.params.pagination.bulletClass)\n      ) {\n        swiper.pagination.$el.toggleClass(swiper.params.pagination.hiddenClass);\n      }\n    },\n  },\n};\n\nconst Scrollbar = {\n  setTranslate() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    const { scrollbar, rtlTranslate: rtl, progress } = swiper;\n    const {\n      dragSize, trackSize, $dragEl, $el,\n    } = scrollbar;\n    const params = swiper.params.scrollbar;\n\n    let newSize = dragSize;\n    let newPos = (trackSize - dragSize) * progress;\n    if (rtl) {\n      newPos = -newPos;\n      if (newPos > 0) {\n        newSize = dragSize - newPos;\n        newPos = 0;\n      } else if (-newPos + dragSize > trackSize) {\n        newSize = trackSize + newPos;\n      }\n    } else if (newPos < 0) {\n      newSize = dragSize + newPos;\n      newPos = 0;\n    } else if (newPos + dragSize > trackSize) {\n      newSize = trackSize - newPos;\n    }\n    if (swiper.isHorizontal()) {\n      if (Support.transforms3d) {\n        $dragEl.transform(`translate3d(${newPos}px, 0, 0)`);\n      } else {\n        $dragEl.transform(`translateX(${newPos}px)`);\n      }\n      $dragEl[0].style.width = `${newSize}px`;\n    } else {\n      if (Support.transforms3d) {\n        $dragEl.transform(`translate3d(0px, ${newPos}px, 0)`);\n      } else {\n        $dragEl.transform(`translateY(${newPos}px)`);\n      }\n      $dragEl[0].style.height = `${newSize}px`;\n    }\n    if (params.hide) {\n      clearTimeout(swiper.scrollbar.timeout);\n      $el[0].style.opacity = 1;\n      swiper.scrollbar.timeout = setTimeout(() => {\n        $el[0].style.opacity = 0;\n        $el.transition(400);\n      }, 1000);\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    swiper.scrollbar.$dragEl.transition(duration);\n  },\n  updateSize() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n\n    const { scrollbar } = swiper;\n    const { $dragEl, $el } = scrollbar;\n\n    $dragEl[0].style.width = '';\n    $dragEl[0].style.height = '';\n    const trackSize = swiper.isHorizontal() ? $el[0].offsetWidth : $el[0].offsetHeight;\n\n    const divider = swiper.size / swiper.virtualSize;\n    const moveDivider = divider * (trackSize / swiper.size);\n    let dragSize;\n    if (swiper.params.scrollbar.dragSize === 'auto') {\n      dragSize = trackSize * divider;\n    } else {\n      dragSize = parseInt(swiper.params.scrollbar.dragSize, 10);\n    }\n\n    if (swiper.isHorizontal()) {\n      $dragEl[0].style.width = `${dragSize}px`;\n    } else {\n      $dragEl[0].style.height = `${dragSize}px`;\n    }\n\n    if (divider >= 1) {\n      $el[0].style.display = 'none';\n    } else {\n      $el[0].style.display = '';\n    }\n    if (swiper.params.scrollbarHide) {\n      $el[0].style.opacity = 0;\n    }\n    Utils.extend(scrollbar, {\n      trackSize,\n      divider,\n      moveDivider,\n      dragSize,\n    });\n    scrollbar.$el[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](swiper.params.scrollbar.lockClass);\n  },\n  setDragPosition(e) {\n    const swiper = this;\n    const { scrollbar, rtlTranslate: rtl } = swiper;\n    const { $el, dragSize, trackSize } = scrollbar;\n\n    let pointerPosition;\n    if (swiper.isHorizontal()) {\n      pointerPosition = ((e.type === 'touchstart' || e.type === 'touchmove') ? e.targetTouches[0].pageX : e.pageX || e.clientX);\n    } else {\n      pointerPosition = ((e.type === 'touchstart' || e.type === 'touchmove') ? e.targetTouches[0].pageY : e.pageY || e.clientY);\n    }\n    let positionRatio;\n    positionRatio = ((pointerPosition) - $el.offset()[swiper.isHorizontal() ? 'left' : 'top'] - (dragSize / 2)) / (trackSize - dragSize);\n    positionRatio = Math.max(Math.min(positionRatio, 1), 0);\n    if (rtl) {\n      positionRatio = 1 - positionRatio;\n    }\n\n    const position = swiper.minTranslate() + ((swiper.maxTranslate() - swiper.minTranslate()) * positionRatio);\n\n    swiper.updateProgress(position);\n    swiper.setTranslate(position);\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  },\n  onDragStart(e) {\n    const swiper = this;\n    const params = swiper.params.scrollbar;\n    const { scrollbar, $wrapperEl } = swiper;\n    const { $el, $dragEl } = scrollbar;\n    swiper.scrollbar.isTouched = true;\n    e.preventDefault();\n    e.stopPropagation();\n\n    $wrapperEl.transition(100);\n    $dragEl.transition(100);\n    scrollbar.setDragPosition(e);\n\n    clearTimeout(swiper.scrollbar.dragTimeout);\n\n    $el.transition(0);\n    if (params.hide) {\n      $el.css('opacity', 1);\n    }\n    swiper.emit('scrollbarDragStart', e);\n  },\n  onDragMove(e) {\n    const swiper = this;\n    const { scrollbar, $wrapperEl } = swiper;\n    const { $el, $dragEl } = scrollbar;\n\n    if (!swiper.scrollbar.isTouched) return;\n    if (e.preventDefault) e.preventDefault();\n    else e.returnValue = false;\n    scrollbar.setDragPosition(e);\n    $wrapperEl.transition(0);\n    $el.transition(0);\n    $dragEl.transition(0);\n    swiper.emit('scrollbarDragMove', e);\n  },\n  onDragEnd(e) {\n    const swiper = this;\n\n    const params = swiper.params.scrollbar;\n    const { scrollbar } = swiper;\n    const { $el } = scrollbar;\n\n    if (!swiper.scrollbar.isTouched) return;\n    swiper.scrollbar.isTouched = false;\n    if (params.hide) {\n      clearTimeout(swiper.scrollbar.dragTimeout);\n      swiper.scrollbar.dragTimeout = Utils.nextTick(() => {\n        $el.css('opacity', 0);\n        $el.transition(400);\n      }, 1000);\n    }\n    swiper.emit('scrollbarDragEnd', e);\n    if (params.snapOnRelease) {\n      swiper.slideToClosest();\n    }\n  },\n  enableDraggable() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el) return;\n    const {\n      scrollbar, touchEvents, touchEventsDesktop, params,\n    } = swiper;\n    const $el = scrollbar.$el;\n    const target = $el[0];\n    const activeListener = Support.passiveListener && params.passiveListener ? { passive: false, capture: false } : false;\n    const passiveListener = Support.passiveListener && params.passiveListener ? { passive: true, capture: false } : false;\n    if (!Support.touch && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n      target.addEventListener(touchEventsDesktop.start, swiper.scrollbar.onDragStart, activeListener);\n      document.addEventListener(touchEventsDesktop.move, swiper.scrollbar.onDragMove, activeListener);\n      document.addEventListener(touchEventsDesktop.end, swiper.scrollbar.onDragEnd, passiveListener);\n    } else {\n      if (Support.touch) {\n        target.addEventListener(touchEvents.start, swiper.scrollbar.onDragStart, activeListener);\n        target.addEventListener(touchEvents.move, swiper.scrollbar.onDragMove, activeListener);\n        target.addEventListener(touchEvents.end, swiper.scrollbar.onDragEnd, passiveListener);\n      }\n      if ((params.simulateTouch && !Device.ios && !Device.android) || (params.simulateTouch && !Support.touch && Device.ios)) {\n        target.addEventListener('mousedown', swiper.scrollbar.onDragStart, activeListener);\n        document.addEventListener('mousemove', swiper.scrollbar.onDragMove, activeListener);\n        document.addEventListener('mouseup', swiper.scrollbar.onDragEnd, passiveListener);\n      }\n    }\n  },\n  disableDraggable() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el) return;\n    const {\n      scrollbar, touchEvents, touchEventsDesktop, params,\n    } = swiper;\n    const $el = scrollbar.$el;\n    const target = $el[0];\n    const activeListener = Support.passiveListener && params.passiveListener ? { passive: false, capture: false } : false;\n    const passiveListener = Support.passiveListener && params.passiveListener ? { passive: true, capture: false } : false;\n    if (!Support.touch && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n      target.removeEventListener(touchEventsDesktop.start, swiper.scrollbar.onDragStart, activeListener);\n      document.removeEventListener(touchEventsDesktop.move, swiper.scrollbar.onDragMove, activeListener);\n      document.removeEventListener(touchEventsDesktop.end, swiper.scrollbar.onDragEnd, passiveListener);\n    } else {\n      if (Support.touch) {\n        target.removeEventListener(touchEvents.start, swiper.scrollbar.onDragStart, activeListener);\n        target.removeEventListener(touchEvents.move, swiper.scrollbar.onDragMove, activeListener);\n        target.removeEventListener(touchEvents.end, swiper.scrollbar.onDragEnd, passiveListener);\n      }\n      if ((params.simulateTouch && !Device.ios && !Device.android) || (params.simulateTouch && !Support.touch && Device.ios)) {\n        target.removeEventListener('mousedown', swiper.scrollbar.onDragStart, activeListener);\n        document.removeEventListener('mousemove', swiper.scrollbar.onDragMove, activeListener);\n        document.removeEventListener('mouseup', swiper.scrollbar.onDragEnd, passiveListener);\n      }\n    }\n  },\n  init() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el) return;\n    const { scrollbar, $el: $swiperEl } = swiper;\n    const params = swiper.params.scrollbar;\n\n    let $el = $(params.el);\n    if (swiper.params.uniqueNavElements && typeof params.el === 'string' && $el.length > 1 && $swiperEl.find(params.el).length === 1) {\n      $el = $swiperEl.find(params.el);\n    }\n\n    let $dragEl = $el.find(`.${swiper.params.scrollbar.dragClass}`);\n    if ($dragEl.length === 0) {\n      $dragEl = $(`<div class=\"${swiper.params.scrollbar.dragClass}\"></div>`);\n      $el.append($dragEl);\n    }\n\n    Utils.extend(scrollbar, {\n      $el,\n      el: $el[0],\n      $dragEl,\n      dragEl: $dragEl[0],\n    });\n\n    if (params.draggable) {\n      scrollbar.enableDraggable();\n    }\n  },\n  destroy() {\n    const swiper = this;\n    swiper.scrollbar.disableDraggable();\n  },\n};\n\nvar Scrollbar$1 = {\n  name: 'scrollbar',\n  params: {\n    scrollbar: {\n      el: null,\n      dragSize: 'auto',\n      hide: false,\n      draggable: false,\n      snapOnRelease: true,\n      lockClass: 'swiper-scrollbar-lock',\n      dragClass: 'swiper-scrollbar-drag',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      scrollbar: {\n        init: Scrollbar.init.bind(swiper),\n        destroy: Scrollbar.destroy.bind(swiper),\n        updateSize: Scrollbar.updateSize.bind(swiper),\n        setTranslate: Scrollbar.setTranslate.bind(swiper),\n        setTransition: Scrollbar.setTransition.bind(swiper),\n        enableDraggable: Scrollbar.enableDraggable.bind(swiper),\n        disableDraggable: Scrollbar.disableDraggable.bind(swiper),\n        setDragPosition: Scrollbar.setDragPosition.bind(swiper),\n        onDragStart: Scrollbar.onDragStart.bind(swiper),\n        onDragMove: Scrollbar.onDragMove.bind(swiper),\n        onDragEnd: Scrollbar.onDragEnd.bind(swiper),\n        isTouched: false,\n        timeout: null,\n        dragTimeout: null,\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.scrollbar.init();\n      swiper.scrollbar.updateSize();\n      swiper.scrollbar.setTranslate();\n    },\n    update() {\n      const swiper = this;\n      swiper.scrollbar.updateSize();\n    },\n    resize() {\n      const swiper = this;\n      swiper.scrollbar.updateSize();\n    },\n    observerUpdate() {\n      const swiper = this;\n      swiper.scrollbar.updateSize();\n    },\n    setTranslate() {\n      const swiper = this;\n      swiper.scrollbar.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      swiper.scrollbar.setTransition(duration);\n    },\n    destroy() {\n      const swiper = this;\n      swiper.scrollbar.destroy();\n    },\n  },\n};\n\nconst Parallax = {\n  setTransform(el, progress) {\n    const swiper = this;\n    const { rtl } = swiper;\n\n    const $el = $(el);\n    const rtlFactor = rtl ? -1 : 1;\n\n    const p = $el.attr('data-swiper-parallax') || '0';\n    let x = $el.attr('data-swiper-parallax-x');\n    let y = $el.attr('data-swiper-parallax-y');\n    const scale = $el.attr('data-swiper-parallax-scale');\n    const opacity = $el.attr('data-swiper-parallax-opacity');\n\n    if (x || y) {\n      x = x || '0';\n      y = y || '0';\n    } else if (swiper.isHorizontal()) {\n      x = p;\n      y = '0';\n    } else {\n      y = p;\n      x = '0';\n    }\n\n    if ((x).indexOf('%') >= 0) {\n      x = `${parseInt(x, 10) * progress * rtlFactor}%`;\n    } else {\n      x = `${x * progress * rtlFactor}px`;\n    }\n    if ((y).indexOf('%') >= 0) {\n      y = `${parseInt(y, 10) * progress}%`;\n    } else {\n      y = `${y * progress}px`;\n    }\n\n    if (typeof opacity !== 'undefined' && opacity !== null) {\n      const currentOpacity = opacity - ((opacity - 1) * (1 - Math.abs(progress)));\n      $el[0].style.opacity = currentOpacity;\n    }\n    if (typeof scale === 'undefined' || scale === null) {\n      $el.transform(`translate3d(${x}, ${y}, 0px)`);\n    } else {\n      const currentScale = scale - ((scale - 1) * (1 - Math.abs(progress)));\n      $el.transform(`translate3d(${x}, ${y}, 0px) scale(${currentScale})`);\n    }\n  },\n  setTranslate() {\n    const swiper = this;\n    const {\n      $el, slides, progress, snapGrid,\n    } = swiper;\n    $el.children('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]')\n      .each((index$$1, el) => {\n        swiper.parallax.setTransform(el, progress);\n      });\n    slides.each((slideIndex, slideEl) => {\n      let slideProgress = slideEl.progress;\n      if (swiper.params.slidesPerGroup > 1 && swiper.params.slidesPerView !== 'auto') {\n        slideProgress += Math.ceil(slideIndex / 2) - (progress * (snapGrid.length - 1));\n      }\n      slideProgress = Math.min(Math.max(slideProgress, -1), 1);\n      $(slideEl).find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]')\n        .each((index$$1, el) => {\n          swiper.parallax.setTransform(el, slideProgress);\n        });\n    });\n  },\n  setTransition(duration = this.params.speed) {\n    const swiper = this;\n    const { $el } = swiper;\n    $el.find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]')\n      .each((index$$1, parallaxEl) => {\n        const $parallaxEl = $(parallaxEl);\n        let parallaxDuration = parseInt($parallaxEl.attr('data-swiper-parallax-duration'), 10) || duration;\n        if (duration === 0) parallaxDuration = 0;\n        $parallaxEl.transition(parallaxDuration);\n      });\n  },\n};\n\nvar Parallax$1 = {\n  name: 'parallax',\n  params: {\n    parallax: {\n      enabled: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      parallax: {\n        setTransform: Parallax.setTransform.bind(swiper),\n        setTranslate: Parallax.setTranslate.bind(swiper),\n        setTransition: Parallax.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (!swiper.params.parallax.enabled) return;\n      swiper.params.watchSlidesProgress = true;\n    },\n    init() {\n      const swiper = this;\n      if (!swiper.params.parallax) return;\n      swiper.parallax.setTranslate();\n    },\n    setTranslate() {\n      const swiper = this;\n      if (!swiper.params.parallax) return;\n      swiper.parallax.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (!swiper.params.parallax) return;\n      swiper.parallax.setTransition(duration);\n    },\n  },\n};\n\nconst Zoom = {\n  // Calc Scale From Multi-touches\n  getDistanceBetweenTouches(e) {\n    if (e.targetTouches.length < 2) return 1;\n    const x1 = e.targetTouches[0].pageX;\n    const y1 = e.targetTouches[0].pageY;\n    const x2 = e.targetTouches[1].pageX;\n    const y2 = e.targetTouches[1].pageY;\n    const distance = Math.sqrt(((x2 - x1) ** 2) + ((y2 - y1) ** 2));\n    return distance;\n  },\n  // Events\n  onGestureStart(e) {\n    const swiper = this;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    zoom.fakeGestureTouched = false;\n    zoom.fakeGestureMoved = false;\n    if (!Support.gestures) {\n      if (e.type !== 'touchstart' || (e.type === 'touchstart' && e.targetTouches.length < 2)) {\n        return;\n      }\n      zoom.fakeGestureTouched = true;\n      gesture.scaleStart = Zoom.getDistanceBetweenTouches(e);\n    }\n    if (!gesture.$slideEl || !gesture.$slideEl.length) {\n      gesture.$slideEl = $(e.target).closest('.swiper-slide');\n      if (gesture.$slideEl.length === 0) gesture.$slideEl = swiper.slides.eq(swiper.activeIndex);\n      gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');\n      gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\n      gesture.maxRatio = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n      if (gesture.$imageWrapEl.length === 0) {\n        gesture.$imageEl = undefined;\n        return;\n      }\n    }\n    gesture.$imageEl.transition(0);\n    swiper.zoom.isScaling = true;\n  },\n  onGestureChange(e) {\n    const swiper = this;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    if (!Support.gestures) {\n      if (e.type !== 'touchmove' || (e.type === 'touchmove' && e.targetTouches.length < 2)) {\n        return;\n      }\n      zoom.fakeGestureMoved = true;\n      gesture.scaleMove = Zoom.getDistanceBetweenTouches(e);\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    if (Support.gestures) {\n      swiper.zoom.scale = e.scale * zoom.currentScale;\n    } else {\n      zoom.scale = (gesture.scaleMove / gesture.scaleStart) * zoom.currentScale;\n    }\n    if (zoom.scale > gesture.maxRatio) {\n      zoom.scale = (gesture.maxRatio - 1) + (((zoom.scale - gesture.maxRatio) + 1) ** 0.5);\n    }\n    if (zoom.scale < params.minRatio) {\n      zoom.scale = (params.minRatio + 1) - (((params.minRatio - zoom.scale) + 1) ** 0.5);\n    }\n    gesture.$imageEl.transform(`translate3d(0,0,0) scale(${zoom.scale})`);\n  },\n  onGestureEnd(e) {\n    const swiper = this;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    if (!Support.gestures) {\n      if (!zoom.fakeGestureTouched || !zoom.fakeGestureMoved) {\n        return;\n      }\n      if (e.type !== 'touchend' || (e.type === 'touchend' && e.changedTouches.length < 2 && !Device.android)) {\n        return;\n      }\n      zoom.fakeGestureTouched = false;\n      zoom.fakeGestureMoved = false;\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    zoom.scale = Math.max(Math.min(zoom.scale, gesture.maxRatio), params.minRatio);\n    gesture.$imageEl.transition(swiper.params.speed).transform(`translate3d(0,0,0) scale(${zoom.scale})`);\n    zoom.currentScale = zoom.scale;\n    zoom.isScaling = false;\n    if (zoom.scale === 1) gesture.$slideEl = undefined;\n  },\n  onTouchStart(e) {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture, image } = zoom;\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    if (image.isTouched) return;\n    if (Device.android) e.preventDefault();\n    image.isTouched = true;\n    image.touchesStart.x = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n    image.touchesStart.y = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n  },\n  onTouchMove(e) {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture, image, velocity } = zoom;\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    swiper.allowClick = false;\n    if (!image.isTouched || !gesture.$slideEl) return;\n\n    if (!image.isMoved) {\n      image.width = gesture.$imageEl[0].offsetWidth;\n      image.height = gesture.$imageEl[0].offsetHeight;\n      image.startX = Utils.getTranslate(gesture.$imageWrapEl[0], 'x') || 0;\n      image.startY = Utils.getTranslate(gesture.$imageWrapEl[0], 'y') || 0;\n      gesture.slideWidth = gesture.$slideEl[0].offsetWidth;\n      gesture.slideHeight = gesture.$slideEl[0].offsetHeight;\n      gesture.$imageWrapEl.transition(0);\n      if (swiper.rtl) {\n        image.startX = -image.startX;\n        image.startY = -image.startY;\n      }\n    }\n    // Define if we need image drag\n    const scaledWidth = image.width * zoom.scale;\n    const scaledHeight = image.height * zoom.scale;\n\n    if (scaledWidth < gesture.slideWidth && scaledHeight < gesture.slideHeight) return;\n\n    image.minX = Math.min(((gesture.slideWidth / 2) - (scaledWidth / 2)), 0);\n    image.maxX = -image.minX;\n    image.minY = Math.min(((gesture.slideHeight / 2) - (scaledHeight / 2)), 0);\n    image.maxY = -image.minY;\n\n    image.touchesCurrent.x = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;\n    image.touchesCurrent.y = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;\n\n    if (!image.isMoved && !zoom.isScaling) {\n      if (\n        swiper.isHorizontal() &&\n        (\n          (Math.floor(image.minX) === Math.floor(image.startX) && image.touchesCurrent.x < image.touchesStart.x) ||\n          (Math.floor(image.maxX) === Math.floor(image.startX) && image.touchesCurrent.x > image.touchesStart.x)\n        )\n      ) {\n        image.isTouched = false;\n        return;\n      } else if (\n        !swiper.isHorizontal() &&\n        (\n          (Math.floor(image.minY) === Math.floor(image.startY) && image.touchesCurrent.y < image.touchesStart.y) ||\n          (Math.floor(image.maxY) === Math.floor(image.startY) && image.touchesCurrent.y > image.touchesStart.y)\n        )\n      ) {\n        image.isTouched = false;\n        return;\n      }\n    }\n    e.preventDefault();\n    e.stopPropagation();\n\n    image.isMoved = true;\n    image.currentX = (image.touchesCurrent.x - image.touchesStart.x) + image.startX;\n    image.currentY = (image.touchesCurrent.y - image.touchesStart.y) + image.startY;\n\n    if (image.currentX < image.minX) {\n      image.currentX = (image.minX + 1) - (((image.minX - image.currentX) + 1) ** 0.8);\n    }\n    if (image.currentX > image.maxX) {\n      image.currentX = (image.maxX - 1) + (((image.currentX - image.maxX) + 1) ** 0.8);\n    }\n\n    if (image.currentY < image.minY) {\n      image.currentY = (image.minY + 1) - (((image.minY - image.currentY) + 1) ** 0.8);\n    }\n    if (image.currentY > image.maxY) {\n      image.currentY = (image.maxY - 1) + (((image.currentY - image.maxY) + 1) ** 0.8);\n    }\n\n    // Velocity\n    if (!velocity.prevPositionX) velocity.prevPositionX = image.touchesCurrent.x;\n    if (!velocity.prevPositionY) velocity.prevPositionY = image.touchesCurrent.y;\n    if (!velocity.prevTime) velocity.prevTime = Date.now();\n    velocity.x = (image.touchesCurrent.x - velocity.prevPositionX) / (Date.now() - velocity.prevTime) / 2;\n    velocity.y = (image.touchesCurrent.y - velocity.prevPositionY) / (Date.now() - velocity.prevTime) / 2;\n    if (Math.abs(image.touchesCurrent.x - velocity.prevPositionX) < 2) velocity.x = 0;\n    if (Math.abs(image.touchesCurrent.y - velocity.prevPositionY) < 2) velocity.y = 0;\n    velocity.prevPositionX = image.touchesCurrent.x;\n    velocity.prevPositionY = image.touchesCurrent.y;\n    velocity.prevTime = Date.now();\n\n    gesture.$imageWrapEl.transform(`translate3d(${image.currentX}px, ${image.currentY}px,0)`);\n  },\n  onTouchEnd() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture, image, velocity } = zoom;\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    if (!image.isTouched || !image.isMoved) {\n      image.isTouched = false;\n      image.isMoved = false;\n      return;\n    }\n    image.isTouched = false;\n    image.isMoved = false;\n    let momentumDurationX = 300;\n    let momentumDurationY = 300;\n    const momentumDistanceX = velocity.x * momentumDurationX;\n    const newPositionX = image.currentX + momentumDistanceX;\n    const momentumDistanceY = velocity.y * momentumDurationY;\n    const newPositionY = image.currentY + momentumDistanceY;\n\n    // Fix duration\n    if (velocity.x !== 0) momentumDurationX = Math.abs((newPositionX - image.currentX) / velocity.x);\n    if (velocity.y !== 0) momentumDurationY = Math.abs((newPositionY - image.currentY) / velocity.y);\n    const momentumDuration = Math.max(momentumDurationX, momentumDurationY);\n\n    image.currentX = newPositionX;\n    image.currentY = newPositionY;\n\n    // Define if we need image drag\n    const scaledWidth = image.width * zoom.scale;\n    const scaledHeight = image.height * zoom.scale;\n    image.minX = Math.min(((gesture.slideWidth / 2) - (scaledWidth / 2)), 0);\n    image.maxX = -image.minX;\n    image.minY = Math.min(((gesture.slideHeight / 2) - (scaledHeight / 2)), 0);\n    image.maxY = -image.minY;\n    image.currentX = Math.max(Math.min(image.currentX, image.maxX), image.minX);\n    image.currentY = Math.max(Math.min(image.currentY, image.maxY), image.minY);\n\n    gesture.$imageWrapEl.transition(momentumDuration).transform(`translate3d(${image.currentX}px, ${image.currentY}px,0)`);\n  },\n  onTransitionEnd() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    if (gesture.$slideEl && swiper.previousIndex !== swiper.activeIndex) {\n      gesture.$imageEl.transform('translate3d(0,0,0) scale(1)');\n      gesture.$imageWrapEl.transform('translate3d(0,0,0)');\n      gesture.$slideEl = undefined;\n      gesture.$imageEl = undefined;\n      gesture.$imageWrapEl = undefined;\n\n      zoom.scale = 1;\n      zoom.currentScale = 1;\n    }\n  },\n  // Toggle Zoom\n  toggle(e) {\n    const swiper = this;\n    const zoom = swiper.zoom;\n\n    if (zoom.scale && zoom.scale !== 1) {\n      // Zoom Out\n      zoom.out();\n    } else {\n      // Zoom In\n      zoom.in(e);\n    }\n  },\n  in(e) {\n    const swiper = this;\n\n    const zoom = swiper.zoom;\n    const params = swiper.params.zoom;\n    const { gesture, image } = zoom;\n\n    if (!gesture.$slideEl) {\n      gesture.$slideEl = swiper.clickedSlide ? $(swiper.clickedSlide) : swiper.slides.eq(swiper.activeIndex);\n      gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');\n      gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n\n    gesture.$slideEl.addClass(`${params.zoomedSlideClass}`);\n\n    let touchX;\n    let touchY;\n    let offsetX;\n    let offsetY;\n    let diffX;\n    let diffY;\n    let translateX;\n    let translateY;\n    let imageWidth;\n    let imageHeight;\n    let scaledWidth;\n    let scaledHeight;\n    let translateMinX;\n    let translateMinY;\n    let translateMaxX;\n    let translateMaxY;\n    let slideWidth;\n    let slideHeight;\n\n    if (typeof image.touchesStart.x === 'undefined' && e) {\n      touchX = e.type === 'touchend' ? e.changedTouches[0].pageX : e.pageX;\n      touchY = e.type === 'touchend' ? e.changedTouches[0].pageY : e.pageY;\n    } else {\n      touchX = image.touchesStart.x;\n      touchY = image.touchesStart.y;\n    }\n\n    zoom.scale = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n    zoom.currentScale = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n    if (e) {\n      slideWidth = gesture.$slideEl[0].offsetWidth;\n      slideHeight = gesture.$slideEl[0].offsetHeight;\n      offsetX = gesture.$slideEl.offset().left;\n      offsetY = gesture.$slideEl.offset().top;\n      diffX = (offsetX + (slideWidth / 2)) - touchX;\n      diffY = (offsetY + (slideHeight / 2)) - touchY;\n\n      imageWidth = gesture.$imageEl[0].offsetWidth;\n      imageHeight = gesture.$imageEl[0].offsetHeight;\n      scaledWidth = imageWidth * zoom.scale;\n      scaledHeight = imageHeight * zoom.scale;\n\n      translateMinX = Math.min(((slideWidth / 2) - (scaledWidth / 2)), 0);\n      translateMinY = Math.min(((slideHeight / 2) - (scaledHeight / 2)), 0);\n      translateMaxX = -translateMinX;\n      translateMaxY = -translateMinY;\n\n      translateX = diffX * zoom.scale;\n      translateY = diffY * zoom.scale;\n\n      if (translateX < translateMinX) {\n        translateX = translateMinX;\n      }\n      if (translateX > translateMaxX) {\n        translateX = translateMaxX;\n      }\n\n      if (translateY < translateMinY) {\n        translateY = translateMinY;\n      }\n      if (translateY > translateMaxY) {\n        translateY = translateMaxY;\n      }\n    } else {\n      translateX = 0;\n      translateY = 0;\n    }\n    gesture.$imageWrapEl.transition(300).transform(`translate3d(${translateX}px, ${translateY}px,0)`);\n    gesture.$imageEl.transition(300).transform(`translate3d(0,0,0) scale(${zoom.scale})`);\n  },\n  out() {\n    const swiper = this;\n\n    const zoom = swiper.zoom;\n    const params = swiper.params.zoom;\n    const { gesture } = zoom;\n\n    if (!gesture.$slideEl) {\n      gesture.$slideEl = swiper.clickedSlide ? $(swiper.clickedSlide) : swiper.slides.eq(swiper.activeIndex);\n      gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');\n      gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n\n    zoom.scale = 1;\n    zoom.currentScale = 1;\n    gesture.$imageWrapEl.transition(300).transform('translate3d(0,0,0)');\n    gesture.$imageEl.transition(300).transform('translate3d(0,0,0) scale(1)');\n    gesture.$slideEl.removeClass(`${params.zoomedSlideClass}`);\n    gesture.$slideEl = undefined;\n  },\n  // Attach/Detach Events\n  enable() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    if (zoom.enabled) return;\n    zoom.enabled = true;\n\n    const passiveListener = swiper.touchEvents.start === 'touchstart' && Support.passiveListener && swiper.params.passiveListeners ? { passive: true, capture: false } : false;\n\n    // Scale image\n    if (Support.gestures) {\n      swiper.$wrapperEl.on('gesturestart', '.swiper-slide', zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.on('gesturechange', '.swiper-slide', zoom.onGestureChange, passiveListener);\n      swiper.$wrapperEl.on('gestureend', '.swiper-slide', zoom.onGestureEnd, passiveListener);\n    } else if (swiper.touchEvents.start === 'touchstart') {\n      swiper.$wrapperEl.on(swiper.touchEvents.start, '.swiper-slide', zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.on(swiper.touchEvents.move, '.swiper-slide', zoom.onGestureChange, passiveListener);\n      swiper.$wrapperEl.on(swiper.touchEvents.end, '.swiper-slide', zoom.onGestureEnd, passiveListener);\n    }\n\n    // Move image\n    swiper.$wrapperEl.on(swiper.touchEvents.move, `.${swiper.params.zoom.containerClass}`, zoom.onTouchMove);\n  },\n  disable() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    if (!zoom.enabled) return;\n\n    swiper.zoom.enabled = false;\n\n    const passiveListener = swiper.touchEvents.start === 'touchstart' && Support.passiveListener && swiper.params.passiveListeners ? { passive: true, capture: false } : false;\n\n    // Scale image\n    if (Support.gestures) {\n      swiper.$wrapperEl.off('gesturestart', '.swiper-slide', zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.off('gesturechange', '.swiper-slide', zoom.onGestureChange, passiveListener);\n      swiper.$wrapperEl.off('gestureend', '.swiper-slide', zoom.onGestureEnd, passiveListener);\n    } else if (swiper.touchEvents.start === 'touchstart') {\n      swiper.$wrapperEl.off(swiper.touchEvents.start, '.swiper-slide', zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.off(swiper.touchEvents.move, '.swiper-slide', zoom.onGestureChange, passiveListener);\n      swiper.$wrapperEl.off(swiper.touchEvents.end, '.swiper-slide', zoom.onGestureEnd, passiveListener);\n    }\n\n    // Move image\n    swiper.$wrapperEl.off(swiper.touchEvents.move, `.${swiper.params.zoom.containerClass}`, zoom.onTouchMove);\n  },\n};\n\nvar Zoom$1 = {\n  name: 'zoom',\n  params: {\n    zoom: {\n      enabled: false,\n      maxRatio: 3,\n      minRatio: 1,\n      toggle: true,\n      containerClass: 'swiper-zoom-container',\n      zoomedSlideClass: 'swiper-slide-zoomed',\n    },\n  },\n  create() {\n    const swiper = this;\n    const zoom = {\n      enabled: false,\n      scale: 1,\n      currentScale: 1,\n      isScaling: false,\n      gesture: {\n        $slideEl: undefined,\n        slideWidth: undefined,\n        slideHeight: undefined,\n        $imageEl: undefined,\n        $imageWrapEl: undefined,\n        maxRatio: 3,\n      },\n      image: {\n        isTouched: undefined,\n        isMoved: undefined,\n        currentX: undefined,\n        currentY: undefined,\n        minX: undefined,\n        minY: undefined,\n        maxX: undefined,\n        maxY: undefined,\n        width: undefined,\n        height: undefined,\n        startX: undefined,\n        startY: undefined,\n        touchesStart: {},\n        touchesCurrent: {},\n      },\n      velocity: {\n        x: undefined,\n        y: undefined,\n        prevPositionX: undefined,\n        prevPositionY: undefined,\n        prevTime: undefined,\n      },\n    };\n    ('onGestureStart onGestureChange onGestureEnd onTouchStart onTouchMove onTouchEnd onTransitionEnd toggle enable disable in out').split(' ').forEach((methodName) => {\n      zoom[methodName] = Zoom[methodName].bind(swiper);\n    });\n    Utils.extend(swiper, {\n      zoom,\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.zoom.enabled) {\n        swiper.zoom.enable();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      swiper.zoom.disable();\n    },\n    touchStart(e) {\n      const swiper = this;\n      if (!swiper.zoom.enabled) return;\n      swiper.zoom.onTouchStart(e);\n    },\n    touchEnd(e) {\n      const swiper = this;\n      if (!swiper.zoom.enabled) return;\n      swiper.zoom.onTouchEnd(e);\n    },\n    doubleTap(e) {\n      const swiper = this;\n      if (swiper.params.zoom.enabled && swiper.zoom.enabled && swiper.params.zoom.toggle) {\n        swiper.zoom.toggle(e);\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.zoom.enabled && swiper.params.zoom.enabled) {\n        swiper.zoom.onTransitionEnd();\n      }\n    },\n  },\n};\n\nconst Lazy = {\n  loadInSlide(index$$1, loadInDuplicate = true) {\n    const swiper = this;\n    const params = swiper.params.lazy;\n    if (typeof index$$1 === 'undefined') return;\n    if (swiper.slides.length === 0) return;\n    const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n\n    const $slideEl = isVirtual\n      ? swiper.$wrapperEl.children(`.${swiper.params.slideClass}[data-swiper-slide-index=\"${index$$1}\"]`)\n      : swiper.slides.eq(index$$1);\n\n    let $images = $slideEl.find(`.${params.elementClass}:not(.${params.loadedClass}):not(.${params.loadingClass})`);\n    if ($slideEl.hasClass(params.elementClass) && !$slideEl.hasClass(params.loadedClass) && !$slideEl.hasClass(params.loadingClass)) {\n      $images = $images.add($slideEl[0]);\n    }\n    if ($images.length === 0) return;\n\n    $images.each((imageIndex, imageEl) => {\n      const $imageEl = $(imageEl);\n      $imageEl.addClass(params.loadingClass);\n\n      const background = $imageEl.attr('data-background');\n      const src = $imageEl.attr('data-src');\n      const srcset = $imageEl.attr('data-srcset');\n      const sizes = $imageEl.attr('data-sizes');\n\n      swiper.loadImage($imageEl[0], (src || background), srcset, sizes, false, () => {\n        if (typeof swiper === 'undefined' || swiper === null || !swiper || (swiper && !swiper.params) || swiper.destroyed) return;\n        if (background) {\n          $imageEl.css('background-image', `url(\"${background}\")`);\n          $imageEl.removeAttr('data-background');\n        } else {\n          if (srcset) {\n            $imageEl.attr('srcset', srcset);\n            $imageEl.removeAttr('data-srcset');\n          }\n          if (sizes) {\n            $imageEl.attr('sizes', sizes);\n            $imageEl.removeAttr('data-sizes');\n          }\n          if (src) {\n            $imageEl.attr('src', src);\n            $imageEl.removeAttr('data-src');\n          }\n        }\n\n        $imageEl.addClass(params.loadedClass).removeClass(params.loadingClass);\n        $slideEl.find(`.${params.preloaderClass}`).remove();\n        if (swiper.params.loop && loadInDuplicate) {\n          const slideOriginalIndex = $slideEl.attr('data-swiper-slide-index');\n          if ($slideEl.hasClass(swiper.params.slideDuplicateClass)) {\n            const originalSlide = swiper.$wrapperEl.children(`[data-swiper-slide-index=\"${slideOriginalIndex}\"]:not(.${swiper.params.slideDuplicateClass})`);\n            swiper.lazy.loadInSlide(originalSlide.index(), false);\n          } else {\n            const duplicatedSlide = swiper.$wrapperEl.children(`.${swiper.params.slideDuplicateClass}[data-swiper-slide-index=\"${slideOriginalIndex}\"]`);\n            swiper.lazy.loadInSlide(duplicatedSlide.index(), false);\n          }\n        }\n        swiper.emit('lazyImageReady', $slideEl[0], $imageEl[0]);\n      });\n\n      swiper.emit('lazyImageLoad', $slideEl[0], $imageEl[0]);\n    });\n  },\n  load() {\n    const swiper = this;\n    const {\n      $wrapperEl, params: swiperParams, slides, activeIndex,\n    } = swiper;\n    const isVirtual = swiper.virtual && swiperParams.virtual.enabled;\n    const params = swiperParams.lazy;\n\n    let slidesPerView = swiperParams.slidesPerView;\n    if (slidesPerView === 'auto') {\n      slidesPerView = 0;\n    }\n\n    function slideExist(index$$1) {\n      if (isVirtual) {\n        if ($wrapperEl.children(`.${swiperParams.slideClass}[data-swiper-slide-index=\"${index$$1}\"]`).length) {\n          return true;\n        }\n      } else if (slides[index$$1]) return true;\n      return false;\n    }\n    function slideIndex(slideEl) {\n      if (isVirtual) {\n        return $(slideEl).attr('data-swiper-slide-index');\n      }\n      return $(slideEl).index();\n    }\n\n    if (!swiper.lazy.initialImageLoaded) swiper.lazy.initialImageLoaded = true;\n    if (swiper.params.watchSlidesVisibility) {\n      $wrapperEl.children(`.${swiperParams.slideVisibleClass}`).each((elIndex, slideEl) => {\n        const index$$1 = isVirtual ? $(slideEl).attr('data-swiper-slide-index') : $(slideEl).index();\n        swiper.lazy.loadInSlide(index$$1);\n      });\n    } else if (slidesPerView > 1) {\n      for (let i = activeIndex; i < activeIndex + slidesPerView; i += 1) {\n        if (slideExist(i)) swiper.lazy.loadInSlide(i);\n      }\n    } else {\n      swiper.lazy.loadInSlide(activeIndex);\n    }\n    if (params.loadPrevNext) {\n      if (slidesPerView > 1 || (params.loadPrevNextAmount && params.loadPrevNextAmount > 1)) {\n        const amount = params.loadPrevNextAmount;\n        const spv = slidesPerView;\n        const maxIndex = Math.min(activeIndex + spv + Math.max(amount, spv), slides.length);\n        const minIndex = Math.max(activeIndex - Math.max(spv, amount), 0);\n        // Next Slides\n        for (let i = activeIndex + slidesPerView; i < maxIndex; i += 1) {\n          if (slideExist(i)) swiper.lazy.loadInSlide(i);\n        }\n        // Prev Slides\n        for (let i = minIndex; i < activeIndex; i += 1) {\n          if (slideExist(i)) swiper.lazy.loadInSlide(i);\n        }\n      } else {\n        const nextSlide = $wrapperEl.children(`.${swiperParams.slideNextClass}`);\n        if (nextSlide.length > 0) swiper.lazy.loadInSlide(slideIndex(nextSlide));\n\n        const prevSlide = $wrapperEl.children(`.${swiperParams.slidePrevClass}`);\n        if (prevSlide.length > 0) swiper.lazy.loadInSlide(slideIndex(prevSlide));\n      }\n    }\n  },\n};\n\nvar Lazy$1 = {\n  name: 'lazy',\n  params: {\n    lazy: {\n      enabled: false,\n      loadPrevNext: false,\n      loadPrevNextAmount: 1,\n      loadOnTransitionStart: false,\n\n      elementClass: 'swiper-lazy',\n      loadingClass: 'swiper-lazy-loading',\n      loadedClass: 'swiper-lazy-loaded',\n      preloaderClass: 'swiper-lazy-preloader',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      lazy: {\n        initialImageLoaded: false,\n        load: Lazy.load.bind(swiper),\n        loadInSlide: Lazy.loadInSlide.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled && swiper.params.preloadImages) {\n        swiper.params.preloadImages = false;\n      }\n    },\n    init() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled && !swiper.params.loop && swiper.params.initialSlide === 0) {\n        swiper.lazy.load();\n      }\n    },\n    scroll() {\n      const swiper = this;\n      if (swiper.params.freeMode && !swiper.params.freeModeSticky) {\n        swiper.lazy.load();\n      }\n    },\n    resize() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled) {\n        swiper.lazy.load();\n      }\n    },\n    scrollbarDragMove() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled) {\n        swiper.lazy.load();\n      }\n    },\n    transitionStart() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled) {\n        if (swiper.params.lazy.loadOnTransitionStart || (!swiper.params.lazy.loadOnTransitionStart && !swiper.lazy.initialImageLoaded)) {\n          swiper.lazy.load();\n        }\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled && !swiper.params.lazy.loadOnTransitionStart) {\n        swiper.lazy.load();\n      }\n    },\n  },\n};\n\n/* eslint no-bitwise: [\"error\", { \"allow\": [\">>\"] }] */\n\nconst Controller = {\n  LinearSpline: function LinearSpline(x, y) {\n    const binarySearch = (function search() {\n      let maxIndex;\n      let minIndex;\n      let guess;\n      return (array, val) => {\n        minIndex = -1;\n        maxIndex = array.length;\n        while (maxIndex - minIndex > 1) {\n          guess = maxIndex + minIndex >> 1;\n          if (array[guess] <= val) {\n            minIndex = guess;\n          } else {\n            maxIndex = guess;\n          }\n        }\n        return maxIndex;\n      };\n    }());\n    this.x = x;\n    this.y = y;\n    this.lastIndex = x.length - 1;\n    // Given an x value (x2), return the expected y2 value:\n    // (x1,y1) is the known point before given value,\n    // (x3,y3) is the known point after given value.\n    let i1;\n    let i3;\n\n    this.interpolate = function interpolate(x2) {\n      if (!x2) return 0;\n\n      // Get the indexes of x1 and x3 (the array indexes before and after given x2):\n      i3 = binarySearch(this.x, x2);\n      i1 = i3 - 1;\n\n      // We have our indexes i1 & i3, so we can calculate already:\n      // y2 := ((x2−x1) × (y3−y1)) ÷ (x3−x1) + y1\n      return (((x2 - this.x[i1]) * (this.y[i3] - this.y[i1])) / (this.x[i3] - this.x[i1])) + this.y[i1];\n    };\n    return this;\n  },\n  // xxx: for now i will just save one spline function to to\n  getInterpolateFunction(c) {\n    const swiper = this;\n    if (!swiper.controller.spline) {\n      swiper.controller.spline = swiper.params.loop ?\n        new Controller.LinearSpline(swiper.slidesGrid, c.slidesGrid) :\n        new Controller.LinearSpline(swiper.snapGrid, c.snapGrid);\n    }\n  },\n  setTranslate(setTranslate, byController) {\n    const swiper = this;\n    const controlled = swiper.controller.control;\n    let multiplier;\n    let controlledTranslate;\n    function setControlledTranslate(c) {\n      // this will create an Interpolate function based on the snapGrids\n      // x is the Grid of the scrolled scroller and y will be the controlled scroller\n      // it makes sense to create this only once and recall it for the interpolation\n      // the function does a lot of value caching for performance\n      const translate = swiper.rtlTranslate ? -swiper.translate : swiper.translate;\n      if (swiper.params.controller.by === 'slide') {\n        swiper.controller.getInterpolateFunction(c);\n        // i am not sure why the values have to be multiplicated this way, tried to invert the snapGrid\n        // but it did not work out\n        controlledTranslate = -swiper.controller.spline.interpolate(-translate);\n      }\n\n      if (!controlledTranslate || swiper.params.controller.by === 'container') {\n        multiplier = (c.maxTranslate() - c.minTranslate()) / (swiper.maxTranslate() - swiper.minTranslate());\n        controlledTranslate = ((translate - swiper.minTranslate()) * multiplier) + c.minTranslate();\n      }\n\n      if (swiper.params.controller.inverse) {\n        controlledTranslate = c.maxTranslate() - controlledTranslate;\n      }\n      c.updateProgress(controlledTranslate);\n      c.setTranslate(controlledTranslate, swiper);\n      c.updateActiveIndex();\n      c.updateSlidesClasses();\n    }\n    if (Array.isArray(controlled)) {\n      for (let i = 0; i < controlled.length; i += 1) {\n        if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n          setControlledTranslate(controlled[i]);\n        }\n      }\n    } else if (controlled instanceof Swiper && byController !== controlled) {\n      setControlledTranslate(controlled);\n    }\n  },\n  setTransition(duration, byController) {\n    const swiper = this;\n    const controlled = swiper.controller.control;\n    let i;\n    function setControlledTransition(c) {\n      c.setTransition(duration, swiper);\n      if (duration !== 0) {\n        c.transitionStart();\n        c.$wrapperEl.transitionEnd(() => {\n          if (!controlled) return;\n          if (c.params.loop && swiper.params.controller.by === 'slide') {\n            c.loopFix();\n          }\n          c.transitionEnd();\n        });\n      }\n    }\n    if (Array.isArray(controlled)) {\n      for (i = 0; i < controlled.length; i += 1) {\n        if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n          setControlledTransition(controlled[i]);\n        }\n      }\n    } else if (controlled instanceof Swiper && byController !== controlled) {\n      setControlledTransition(controlled);\n    }\n  },\n};\nvar Controller$1 = {\n  name: 'controller',\n  params: {\n    controller: {\n      control: undefined,\n      inverse: false,\n      by: 'slide', // or 'container'\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      controller: {\n        control: swiper.params.controller.control,\n        getInterpolateFunction: Controller.getInterpolateFunction.bind(swiper),\n        setTranslate: Controller.setTranslate.bind(swiper),\n        setTransition: Controller.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    update() {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      if (swiper.controller.spline) {\n        swiper.controller.spline = undefined;\n        delete swiper.controller.spline;\n      }\n    },\n    resize() {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      if (swiper.controller.spline) {\n        swiper.controller.spline = undefined;\n        delete swiper.controller.spline;\n      }\n    },\n    observerUpdate() {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      if (swiper.controller.spline) {\n        swiper.controller.spline = undefined;\n        delete swiper.controller.spline;\n      }\n    },\n    setTranslate(translate, byController) {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      swiper.controller.setTranslate(translate, byController);\n    },\n    setTransition(duration, byController) {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      swiper.controller.setTransition(duration, byController);\n    },\n  },\n};\n\nconst a11y = {\n  makeElFocusable($el) {\n    $el.attr('tabIndex', '0');\n    return $el;\n  },\n  addElRole($el, role) {\n    $el.attr('role', role);\n    return $el;\n  },\n  addElLabel($el, label) {\n    $el.attr('aria-label', label);\n    return $el;\n  },\n  disableEl($el) {\n    $el.attr('aria-disabled', true);\n    return $el;\n  },\n  enableEl($el) {\n    $el.attr('aria-disabled', false);\n    return $el;\n  },\n  onEnterKey(e) {\n    const swiper = this;\n    const params = swiper.params.a11y;\n    if (e.keyCode !== 13) return;\n    const $targetEl = $(e.target);\n    if (swiper.navigation && swiper.navigation.$nextEl && $targetEl.is(swiper.navigation.$nextEl)) {\n      if (!(swiper.isEnd && !swiper.params.loop)) {\n        swiper.slideNext();\n      }\n      if (swiper.isEnd) {\n        swiper.a11y.notify(params.lastSlideMessage);\n      } else {\n        swiper.a11y.notify(params.nextSlideMessage);\n      }\n    }\n    if (swiper.navigation && swiper.navigation.$prevEl && $targetEl.is(swiper.navigation.$prevEl)) {\n      if (!(swiper.isBeginning && !swiper.params.loop)) {\n        swiper.slidePrev();\n      }\n      if (swiper.isBeginning) {\n        swiper.a11y.notify(params.firstSlideMessage);\n      } else {\n        swiper.a11y.notify(params.prevSlideMessage);\n      }\n    }\n    if (swiper.pagination && $targetEl.is(`.${swiper.params.pagination.bulletClass}`)) {\n      $targetEl[0].click();\n    }\n  },\n  notify(message) {\n    const swiper = this;\n    const notification = swiper.a11y.liveRegion;\n    if (notification.length === 0) return;\n    notification.html('');\n    notification.html(message);\n  },\n  updateNavigation() {\n    const swiper = this;\n\n    if (swiper.params.loop) return;\n    const { $nextEl, $prevEl } = swiper.navigation;\n\n    if ($prevEl && $prevEl.length > 0) {\n      if (swiper.isBeginning) {\n        swiper.a11y.disableEl($prevEl);\n      } else {\n        swiper.a11y.enableEl($prevEl);\n      }\n    }\n    if ($nextEl && $nextEl.length > 0) {\n      if (swiper.isEnd) {\n        swiper.a11y.disableEl($nextEl);\n      } else {\n        swiper.a11y.enableEl($nextEl);\n      }\n    }\n  },\n  updatePagination() {\n    const swiper = this;\n    const params = swiper.params.a11y;\n    if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n      swiper.pagination.bullets.each((bulletIndex, bulletEl) => {\n        const $bulletEl = $(bulletEl);\n        swiper.a11y.makeElFocusable($bulletEl);\n        swiper.a11y.addElRole($bulletEl, 'button');\n        swiper.a11y.addElLabel($bulletEl, params.paginationBulletMessage.replace(/{{index}}/, $bulletEl.index() + 1));\n      });\n    }\n  },\n  init() {\n    const swiper = this;\n\n    swiper.$el.append(swiper.a11y.liveRegion);\n\n    // Navigation\n    const params = swiper.params.a11y;\n    let $nextEl;\n    let $prevEl;\n    if (swiper.navigation && swiper.navigation.$nextEl) {\n      $nextEl = swiper.navigation.$nextEl;\n    }\n    if (swiper.navigation && swiper.navigation.$prevEl) {\n      $prevEl = swiper.navigation.$prevEl;\n    }\n    if ($nextEl) {\n      swiper.a11y.makeElFocusable($nextEl);\n      swiper.a11y.addElRole($nextEl, 'button');\n      swiper.a11y.addElLabel($nextEl, params.nextSlideMessage);\n      $nextEl.on('keydown', swiper.a11y.onEnterKey);\n    }\n    if ($prevEl) {\n      swiper.a11y.makeElFocusable($prevEl);\n      swiper.a11y.addElRole($prevEl, 'button');\n      swiper.a11y.addElLabel($prevEl, params.prevSlideMessage);\n      $prevEl.on('keydown', swiper.a11y.onEnterKey);\n    }\n\n    // Pagination\n    if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n      swiper.pagination.$el.on('keydown', `.${swiper.params.pagination.bulletClass}`, swiper.a11y.onEnterKey);\n    }\n  },\n  destroy() {\n    const swiper = this;\n    if (swiper.a11y.liveRegion && swiper.a11y.liveRegion.length > 0) swiper.a11y.liveRegion.remove();\n\n    let $nextEl;\n    let $prevEl;\n    if (swiper.navigation && swiper.navigation.$nextEl) {\n      $nextEl = swiper.navigation.$nextEl;\n    }\n    if (swiper.navigation && swiper.navigation.$prevEl) {\n      $prevEl = swiper.navigation.$prevEl;\n    }\n    if ($nextEl) {\n      $nextEl.off('keydown', swiper.a11y.onEnterKey);\n    }\n    if ($prevEl) {\n      $prevEl.off('keydown', swiper.a11y.onEnterKey);\n    }\n\n    // Pagination\n    if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n      swiper.pagination.$el.off('keydown', `.${swiper.params.pagination.bulletClass}`, swiper.a11y.onEnterKey);\n    }\n  },\n};\nvar A11y = {\n  name: 'a11y',\n  params: {\n    a11y: {\n      enabled: true,\n      notificationClass: 'swiper-notification',\n      prevSlideMessage: 'Previous slide',\n      nextSlideMessage: 'Next slide',\n      firstSlideMessage: 'This is the first slide',\n      lastSlideMessage: 'This is the last slide',\n      paginationBulletMessage: 'Go to slide {{index}}',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      a11y: {\n        liveRegion: $(`<span class=\"${swiper.params.a11y.notificationClass}\" aria-live=\"assertive\" aria-atomic=\"true\"></span>`),\n      },\n    });\n    Object.keys(a11y).forEach((methodName) => {\n      swiper.a11y[methodName] = a11y[methodName].bind(swiper);\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.init();\n      swiper.a11y.updateNavigation();\n    },\n    toEdge() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.updateNavigation();\n    },\n    fromEdge() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.updateNavigation();\n    },\n    paginationUpdate() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.updatePagination();\n    },\n    destroy() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.destroy();\n    },\n  },\n};\n\nconst History = {\n  init() {\n    const swiper = this;\n    if (!swiper.params.history) return;\n    if (!window.history || !window.history.pushState) {\n      swiper.params.history.enabled = false;\n      swiper.params.hashNavigation.enabled = true;\n      return;\n    }\n    const history = swiper.history;\n    history.initialized = true;\n    history.paths = History.getPathValues();\n    if (!history.paths.key && !history.paths.value) return;\n    history.scrollToSlide(0, history.paths.value, swiper.params.runCallbacksOnInit);\n    if (!swiper.params.history.replaceState) {\n      window.addEventListener('popstate', swiper.history.setHistoryPopState);\n    }\n  },\n  destroy() {\n    const swiper = this;\n    if (!swiper.params.history.replaceState) {\n      window.removeEventListener('popstate', swiper.history.setHistoryPopState);\n    }\n  },\n  setHistoryPopState() {\n    const swiper = this;\n    swiper.history.paths = History.getPathValues();\n    swiper.history.scrollToSlide(swiper.params.speed, swiper.history.paths.value, false);\n  },\n  getPathValues() {\n    const pathArray = window.location.pathname.slice(1).split('/').filter(part => part !== '');\n    const total = pathArray.length;\n    const key = pathArray[total - 2];\n    const value = pathArray[total - 1];\n    return { key, value };\n  },\n  setHistory(key, index$$1) {\n    const swiper = this;\n    if (!swiper.history.initialized || !swiper.params.history.enabled) return;\n    const slide = swiper.slides.eq(index$$1);\n    let value = History.slugify(slide.attr('data-history'));\n    if (!window.location.pathname.includes(key)) {\n      value = `${key}/${value}`;\n    }\n    const currentState = window.history.state;\n    if (currentState && currentState.value === value) {\n      return;\n    }\n    if (swiper.params.history.replaceState) {\n      window.history.replaceState({ value }, null, value);\n    } else {\n      window.history.pushState({ value }, null, value);\n    }\n  },\n  slugify(text$$1) {\n    return text$$1.toString().toLowerCase()\n      .replace(/\\s+/g, '-')\n      .replace(/[^\\w-]+/g, '')\n      .replace(/--+/g, '-')\n      .replace(/^-+/, '')\n      .replace(/-+$/, '');\n  },\n  scrollToSlide(speed, value, runCallbacks) {\n    const swiper = this;\n    if (value) {\n      for (let i = 0, length = swiper.slides.length; i < length; i += 1) {\n        const slide = swiper.slides.eq(i);\n        const slideHistory = History.slugify(slide.attr('data-history'));\n        if (slideHistory === value && !slide.hasClass(swiper.params.slideDuplicateClass)) {\n          const index$$1 = slide.index();\n          swiper.slideTo(index$$1, speed, runCallbacks);\n        }\n      }\n    } else {\n      swiper.slideTo(0, speed, runCallbacks);\n    }\n  },\n};\n\nvar History$1 = {\n  name: 'history',\n  params: {\n    history: {\n      enabled: false,\n      replaceState: false,\n      key: 'slides',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      history: {\n        init: History.init.bind(swiper),\n        setHistory: History.setHistory.bind(swiper),\n        setHistoryPopState: History.setHistoryPopState.bind(swiper),\n        scrollToSlide: History.scrollToSlide.bind(swiper),\n        destroy: History.destroy.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.history.enabled) {\n        swiper.history.init();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.params.history.enabled) {\n        swiper.history.destroy();\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.history.initialized) {\n        swiper.history.setHistory(swiper.params.history.key, swiper.activeIndex);\n      }\n    },\n  },\n};\n\nconst HashNavigation = {\n  onHashCange() {\n    const swiper = this;\n    const newHash = document.location.hash.replace('#', '');\n    const activeSlideHash = swiper.slides.eq(swiper.activeIndex).attr('data-hash');\n    if (newHash !== activeSlideHash) {\n      swiper.slideTo(swiper.$wrapperEl.children(`.${swiper.params.slideClass}[data-hash=\"${newHash}\"]`).index());\n    }\n  },\n  setHash() {\n    const swiper = this;\n    if (!swiper.hashNavigation.initialized || !swiper.params.hashNavigation.enabled) return;\n    if (swiper.params.hashNavigation.replaceState && window.history && window.history.replaceState) {\n      window.history.replaceState(null, null, (`#${swiper.slides.eq(swiper.activeIndex).attr('data-hash')}` || ''));\n    } else {\n      const slide = swiper.slides.eq(swiper.activeIndex);\n      const hash = slide.attr('data-hash') || slide.attr('data-history');\n      document.location.hash = hash || '';\n    }\n  },\n  init() {\n    const swiper = this;\n    if (!swiper.params.hashNavigation.enabled || (swiper.params.history && swiper.params.history.enabled)) return;\n    swiper.hashNavigation.initialized = true;\n    const hash = document.location.hash.replace('#', '');\n    if (hash) {\n      const speed = 0;\n      for (let i = 0, length = swiper.slides.length; i < length; i += 1) {\n        const slide = swiper.slides.eq(i);\n        const slideHash = slide.attr('data-hash') || slide.attr('data-history');\n        if (slideHash === hash && !slide.hasClass(swiper.params.slideDuplicateClass)) {\n          const index$$1 = slide.index();\n          swiper.slideTo(index$$1, speed, swiper.params.runCallbacksOnInit, true);\n        }\n      }\n    }\n    if (swiper.params.hashNavigation.watchState) {\n      $(window).on('hashchange', swiper.hashNavigation.onHashCange);\n    }\n  },\n  destroy() {\n    const swiper = this;\n    if (swiper.params.hashNavigation.watchState) {\n      $(window).off('hashchange', swiper.hashNavigation.onHashCange);\n    }\n  },\n};\nvar HashNavigation$1 = {\n  name: 'hash-navigation',\n  params: {\n    hashNavigation: {\n      enabled: false,\n      replaceState: false,\n      watchState: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      hashNavigation: {\n        initialized: false,\n        init: HashNavigation.init.bind(swiper),\n        destroy: HashNavigation.destroy.bind(swiper),\n        setHash: HashNavigation.setHash.bind(swiper),\n        onHashCange: HashNavigation.onHashCange.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.hashNavigation.enabled) {\n        swiper.hashNavigation.init();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.params.hashNavigation.enabled) {\n        swiper.hashNavigation.destroy();\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.hashNavigation.initialized) {\n        swiper.hashNavigation.setHash();\n      }\n    },\n  },\n};\n\n/* eslint no-underscore-dangle: \"off\" */\n\nconst Autoplay = {\n  run() {\n    const swiper = this;\n    const $activeSlideEl = swiper.slides.eq(swiper.activeIndex);\n    let delay = swiper.params.autoplay.delay;\n    if ($activeSlideEl.attr('data-swiper-autoplay')) {\n      delay = $activeSlideEl.attr('data-swiper-autoplay') || swiper.params.autoplay.delay;\n    }\n    swiper.autoplay.timeout = Utils.nextTick(() => {\n      if (swiper.params.autoplay.reverseDirection) {\n        if (swiper.params.loop) {\n          swiper.loopFix();\n          swiper.slidePrev(swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else if (!swiper.isBeginning) {\n          swiper.slidePrev(swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else if (!swiper.params.autoplay.stopOnLastSlide) {\n          swiper.slideTo(swiper.slides.length - 1, swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else {\n          swiper.autoplay.stop();\n        }\n      } else if (swiper.params.loop) {\n        swiper.loopFix();\n        swiper.slideNext(swiper.params.speed, true, true);\n        swiper.emit('autoplay');\n      } else if (!swiper.isEnd) {\n        swiper.slideNext(swiper.params.speed, true, true);\n        swiper.emit('autoplay');\n      } else if (!swiper.params.autoplay.stopOnLastSlide) {\n        swiper.slideTo(0, swiper.params.speed, true, true);\n        swiper.emit('autoplay');\n      } else {\n        swiper.autoplay.stop();\n      }\n    }, delay);\n  },\n  start() {\n    const swiper = this;\n    if (typeof swiper.autoplay.timeout !== 'undefined') return false;\n    if (swiper.autoplay.running) return false;\n    swiper.autoplay.running = true;\n    swiper.emit('autoplayStart');\n    swiper.autoplay.run();\n    return true;\n  },\n  stop() {\n    const swiper = this;\n    if (!swiper.autoplay.running) return false;\n    if (typeof swiper.autoplay.timeout === 'undefined') return false;\n\n    if (swiper.autoplay.timeout) {\n      clearTimeout(swiper.autoplay.timeout);\n      swiper.autoplay.timeout = undefined;\n    }\n    swiper.autoplay.running = false;\n    swiper.emit('autoplayStop');\n    return true;\n  },\n  pause(speed) {\n    const swiper = this;\n    if (!swiper.autoplay.running) return;\n    if (swiper.autoplay.paused) return;\n    if (swiper.autoplay.timeout) clearTimeout(swiper.autoplay.timeout);\n    swiper.autoplay.paused = true;\n    if (speed === 0 || !swiper.params.autoplay.waitForTransition) {\n      swiper.autoplay.paused = false;\n      swiper.autoplay.run();\n    } else {\n      swiper.$wrapperEl[0].addEventListener('transitionend', swiper.autoplay.onTransitionEnd);\n      swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.autoplay.onTransitionEnd);\n    }\n  },\n};\n\nvar Autoplay$1 = {\n  name: 'autoplay',\n  params: {\n    autoplay: {\n      enabled: false,\n      delay: 3000,\n      waitForTransition: true,\n      disableOnInteraction: true,\n      stopOnLastSlide: false,\n      reverseDirection: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      autoplay: {\n        running: false,\n        paused: false,\n        run: Autoplay.run.bind(swiper),\n        start: Autoplay.start.bind(swiper),\n        stop: Autoplay.stop.bind(swiper),\n        pause: Autoplay.pause.bind(swiper),\n        onTransitionEnd(e) {\n          if (!swiper || swiper.destroyed || !swiper.$wrapperEl) return;\n          if (e.target !== this) return;\n          swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.autoplay.onTransitionEnd);\n          swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.autoplay.onTransitionEnd);\n          swiper.autoplay.paused = false;\n          if (!swiper.autoplay.running) {\n            swiper.autoplay.stop();\n          } else {\n            swiper.autoplay.run();\n          }\n        },\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.autoplay.enabled) {\n        swiper.autoplay.start();\n      }\n    },\n    beforeTransitionStart(speed, internal) {\n      const swiper = this;\n      if (swiper.autoplay.running) {\n        if (internal || !swiper.params.autoplay.disableOnInteraction) {\n          swiper.autoplay.pause(speed);\n        } else {\n          swiper.autoplay.stop();\n        }\n      }\n    },\n    sliderFirstMove() {\n      const swiper = this;\n      if (swiper.autoplay.running) {\n        if (swiper.params.autoplay.disableOnInteraction) {\n          swiper.autoplay.stop();\n        } else {\n          swiper.autoplay.pause();\n        }\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.autoplay.running) {\n        swiper.autoplay.stop();\n      }\n    },\n  },\n};\n\nconst Fade = {\n  setTranslate() {\n    const swiper = this;\n    const { slides } = swiper;\n    for (let i = 0; i < slides.length; i += 1) {\n      const $slideEl = swiper.slides.eq(i);\n      const offset$$1 = $slideEl[0].swiperSlideOffset;\n      let tx = -offset$$1;\n      if (!swiper.params.virtualTranslate) tx -= swiper.translate;\n      let ty = 0;\n      if (!swiper.isHorizontal()) {\n        ty = tx;\n        tx = 0;\n      }\n      const slideOpacity = swiper.params.fadeEffect.crossFade ?\n        Math.max(1 - Math.abs($slideEl[0].progress), 0) :\n        1 + Math.min(Math.max($slideEl[0].progress, -1), 0);\n      $slideEl\n        .css({\n          opacity: slideOpacity,\n        })\n        .transform(`translate3d(${tx}px, ${ty}px, 0px)`);\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    const { slides, $wrapperEl } = swiper;\n    slides.transition(duration);\n    if (swiper.params.virtualTranslate && duration !== 0) {\n      let eventTriggered = false;\n      slides.transitionEnd(() => {\n        if (eventTriggered) return;\n        if (!swiper || swiper.destroyed) return;\n        eventTriggered = true;\n        swiper.animating = false;\n        const triggerEvents = ['webkitTransitionEnd', 'transitionend'];\n        for (let i = 0; i < triggerEvents.length; i += 1) {\n          $wrapperEl.trigger(triggerEvents[i]);\n        }\n      });\n    }\n  },\n};\n\nvar EffectFade = {\n  name: 'effect-fade',\n  params: {\n    fadeEffect: {\n      crossFade: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      fadeEffect: {\n        setTranslate: Fade.setTranslate.bind(swiper),\n        setTransition: Fade.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'fade') return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}fade`);\n      const overwriteParams = {\n        slidesPerView: 1,\n        slidesPerColumn: 1,\n        slidesPerGroup: 1,\n        watchSlidesProgress: true,\n        spaceBetween: 0,\n        virtualTranslate: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'fade') return;\n      swiper.fadeEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'fade') return;\n      swiper.fadeEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Cube = {\n  setTranslate() {\n    const swiper = this;\n    const {\n      $el, $wrapperEl, slides, width: swiperWidth, height: swiperHeight, rtlTranslate: rtl, size: swiperSize,\n    } = swiper;\n    const params = swiper.params.cubeEffect;\n    const isHorizontal = swiper.isHorizontal();\n    const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n    let wrapperRotate = 0;\n    let $cubeShadowEl;\n    if (params.shadow) {\n      if (isHorizontal) {\n        $cubeShadowEl = $wrapperEl.find('.swiper-cube-shadow');\n        if ($cubeShadowEl.length === 0) {\n          $cubeShadowEl = $('<div class=\"swiper-cube-shadow\"></div>');\n          $wrapperEl.append($cubeShadowEl);\n        }\n        $cubeShadowEl.css({ height: `${swiperWidth}px` });\n      } else {\n        $cubeShadowEl = $el.find('.swiper-cube-shadow');\n        if ($cubeShadowEl.length === 0) {\n          $cubeShadowEl = $('<div class=\"swiper-cube-shadow\"></div>');\n          $el.append($cubeShadowEl);\n        }\n      }\n    }\n    for (let i = 0; i < slides.length; i += 1) {\n      const $slideEl = slides.eq(i);\n      let slideIndex = i;\n      if (isVirtual) {\n        slideIndex = parseInt($slideEl.attr('data-swiper-slide-index'), 10);\n      }\n      let slideAngle = slideIndex * 90;\n      let round = Math.floor(slideAngle / 360);\n      if (rtl) {\n        slideAngle = -slideAngle;\n        round = Math.floor(-slideAngle / 360);\n      }\n      const progress = Math.max(Math.min($slideEl[0].progress, 1), -1);\n      let tx = 0;\n      let ty = 0;\n      let tz = 0;\n      if (slideIndex % 4 === 0) {\n        tx = -round * 4 * swiperSize;\n        tz = 0;\n      } else if ((slideIndex - 1) % 4 === 0) {\n        tx = 0;\n        tz = -round * 4 * swiperSize;\n      } else if ((slideIndex - 2) % 4 === 0) {\n        tx = swiperSize + (round * 4 * swiperSize);\n        tz = swiperSize;\n      } else if ((slideIndex - 3) % 4 === 0) {\n        tx = -swiperSize;\n        tz = (3 * swiperSize) + (swiperSize * 4 * round);\n      }\n      if (rtl) {\n        tx = -tx;\n      }\n\n      if (!isHorizontal) {\n        ty = tx;\n        tx = 0;\n      }\n\n      const transform$$1 = `rotateX(${isHorizontal ? 0 : -slideAngle}deg) rotateY(${isHorizontal ? slideAngle : 0}deg) translate3d(${tx}px, ${ty}px, ${tz}px)`;\n      if (progress <= 1 && progress > -1) {\n        wrapperRotate = (slideIndex * 90) + (progress * 90);\n        if (rtl) wrapperRotate = (-slideIndex * 90) - (progress * 90);\n      }\n      $slideEl.transform(transform$$1);\n      if (params.slideShadows) {\n        // Set shadows\n        let shadowBefore = isHorizontal ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n        let shadowAfter = isHorizontal ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n        if (shadowBefore.length === 0) {\n          shadowBefore = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'left' : 'top'}\"></div>`);\n          $slideEl.append(shadowBefore);\n        }\n        if (shadowAfter.length === 0) {\n          shadowAfter = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'right' : 'bottom'}\"></div>`);\n          $slideEl.append(shadowAfter);\n        }\n        if (shadowBefore.length) shadowBefore[0].style.opacity = Math.max(-progress, 0);\n        if (shadowAfter.length) shadowAfter[0].style.opacity = Math.max(progress, 0);\n      }\n    }\n    $wrapperEl.css({\n      '-webkit-transform-origin': `50% 50% -${swiperSize / 2}px`,\n      '-moz-transform-origin': `50% 50% -${swiperSize / 2}px`,\n      '-ms-transform-origin': `50% 50% -${swiperSize / 2}px`,\n      'transform-origin': `50% 50% -${swiperSize / 2}px`,\n    });\n\n    if (params.shadow) {\n      if (isHorizontal) {\n        $cubeShadowEl.transform(`translate3d(0px, ${(swiperWidth / 2) + params.shadowOffset}px, ${-swiperWidth / 2}px) rotateX(90deg) rotateZ(0deg) scale(${params.shadowScale})`);\n      } else {\n        const shadowAngle = Math.abs(wrapperRotate) - (Math.floor(Math.abs(wrapperRotate) / 90) * 90);\n        const multiplier = 1.5 - (\n          (Math.sin((shadowAngle * 2 * Math.PI) / 360) / 2) +\n          (Math.cos((shadowAngle * 2 * Math.PI) / 360) / 2)\n        );\n        const scale1 = params.shadowScale;\n        const scale2 = params.shadowScale / multiplier;\n        const offset$$1 = params.shadowOffset;\n        $cubeShadowEl.transform(`scale3d(${scale1}, 1, ${scale2}) translate3d(0px, ${(swiperHeight / 2) + offset$$1}px, ${-swiperHeight / 2 / scale2}px) rotateX(-90deg)`);\n      }\n    }\n    const zFactor = (Browser.isSafari || Browser.isUiWebView) ? (-swiperSize / 2) : 0;\n    $wrapperEl\n      .transform(`translate3d(0px,0,${zFactor}px) rotateX(${swiper.isHorizontal() ? 0 : wrapperRotate}deg) rotateY(${swiper.isHorizontal() ? -wrapperRotate : 0}deg)`);\n  },\n  setTransition(duration) {\n    const swiper = this;\n    const { $el, slides } = swiper;\n    slides\n      .transition(duration)\n      .find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left')\n      .transition(duration);\n    if (swiper.params.cubeEffect.shadow && !swiper.isHorizontal()) {\n      $el.find('.swiper-cube-shadow').transition(duration);\n    }\n  },\n};\n\nvar EffectCube = {\n  name: 'effect-cube',\n  params: {\n    cubeEffect: {\n      slideShadows: true,\n      shadow: true,\n      shadowOffset: 20,\n      shadowScale: 0.94,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      cubeEffect: {\n        setTranslate: Cube.setTranslate.bind(swiper),\n        setTransition: Cube.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'cube') return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}cube`);\n      swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n      const overwriteParams = {\n        slidesPerView: 1,\n        slidesPerColumn: 1,\n        slidesPerGroup: 1,\n        watchSlidesProgress: true,\n        resistanceRatio: 0,\n        spaceBetween: 0,\n        centeredSlides: false,\n        virtualTranslate: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'cube') return;\n      swiper.cubeEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'cube') return;\n      swiper.cubeEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Flip = {\n  setTranslate() {\n    const swiper = this;\n    const { slides, rtlTranslate: rtl } = swiper;\n    for (let i = 0; i < slides.length; i += 1) {\n      const $slideEl = slides.eq(i);\n      let progress = $slideEl[0].progress;\n      if (swiper.params.flipEffect.limitRotation) {\n        progress = Math.max(Math.min($slideEl[0].progress, 1), -1);\n      }\n      const offset$$1 = $slideEl[0].swiperSlideOffset;\n      const rotate = -180 * progress;\n      let rotateY = rotate;\n      let rotateX = 0;\n      let tx = -offset$$1;\n      let ty = 0;\n      if (!swiper.isHorizontal()) {\n        ty = tx;\n        tx = 0;\n        rotateX = -rotateY;\n        rotateY = 0;\n      } else if (rtl) {\n        rotateY = -rotateY;\n      }\n\n      $slideEl[0].style.zIndex = -Math.abs(Math.round(progress)) + slides.length;\n\n      if (swiper.params.flipEffect.slideShadows) {\n        // Set shadows\n        let shadowBefore = swiper.isHorizontal() ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n        let shadowAfter = swiper.isHorizontal() ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n        if (shadowBefore.length === 0) {\n          shadowBefore = $(`<div class=\"swiper-slide-shadow-${swiper.isHorizontal() ? 'left' : 'top'}\"></div>`);\n          $slideEl.append(shadowBefore);\n        }\n        if (shadowAfter.length === 0) {\n          shadowAfter = $(`<div class=\"swiper-slide-shadow-${swiper.isHorizontal() ? 'right' : 'bottom'}\"></div>`);\n          $slideEl.append(shadowAfter);\n        }\n        if (shadowBefore.length) shadowBefore[0].style.opacity = Math.max(-progress, 0);\n        if (shadowAfter.length) shadowAfter[0].style.opacity = Math.max(progress, 0);\n      }\n      $slideEl\n        .transform(`translate3d(${tx}px, ${ty}px, 0px) rotateX(${rotateX}deg) rotateY(${rotateY}deg)`);\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    const { slides, activeIndex, $wrapperEl } = swiper;\n    slides\n      .transition(duration)\n      .find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left')\n      .transition(duration);\n    if (swiper.params.virtualTranslate && duration !== 0) {\n      let eventTriggered = false;\n      // eslint-disable-next-line\n      slides.eq(activeIndex).transitionEnd(function onTransitionEnd() {\n        if (eventTriggered) return;\n        if (!swiper || swiper.destroyed) return;\n        // if (!$(this).hasClass(swiper.params.slideActiveClass)) return;\n        eventTriggered = true;\n        swiper.animating = false;\n        const triggerEvents = ['webkitTransitionEnd', 'transitionend'];\n        for (let i = 0; i < triggerEvents.length; i += 1) {\n          $wrapperEl.trigger(triggerEvents[i]);\n        }\n      });\n    }\n  },\n};\n\nvar EffectFlip = {\n  name: 'effect-flip',\n  params: {\n    flipEffect: {\n      slideShadows: true,\n      limitRotation: true,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      flipEffect: {\n        setTranslate: Flip.setTranslate.bind(swiper),\n        setTransition: Flip.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'flip') return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}flip`);\n      swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n      const overwriteParams = {\n        slidesPerView: 1,\n        slidesPerColumn: 1,\n        slidesPerGroup: 1,\n        watchSlidesProgress: true,\n        spaceBetween: 0,\n        virtualTranslate: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'flip') return;\n      swiper.flipEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'flip') return;\n      swiper.flipEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Coverflow = {\n  setTranslate() {\n    const swiper = this;\n    const {\n      width: swiperWidth, height: swiperHeight, slides, $wrapperEl, slidesSizesGrid,\n    } = swiper;\n    const params = swiper.params.coverflowEffect;\n    const isHorizontal = swiper.isHorizontal();\n    const transform$$1 = swiper.translate;\n    const center = isHorizontal ? -transform$$1 + (swiperWidth / 2) : -transform$$1 + (swiperHeight / 2);\n    const rotate = isHorizontal ? params.rotate : -params.rotate;\n    const translate = params.depth;\n    // Each slide offset from center\n    for (let i = 0, length = slides.length; i < length; i += 1) {\n      const $slideEl = slides.eq(i);\n      const slideSize = slidesSizesGrid[i];\n      const slideOffset = $slideEl[0].swiperSlideOffset;\n      const offsetMultiplier = ((center - slideOffset - (slideSize / 2)) / slideSize) * params.modifier;\n\n      let rotateY = isHorizontal ? rotate * offsetMultiplier : 0;\n      let rotateX = isHorizontal ? 0 : rotate * offsetMultiplier;\n      // var rotateZ = 0\n      let translateZ = -translate * Math.abs(offsetMultiplier);\n\n      let translateY = isHorizontal ? 0 : params.stretch * (offsetMultiplier);\n      let translateX = isHorizontal ? params.stretch * (offsetMultiplier) : 0;\n\n      // Fix for ultra small values\n      if (Math.abs(translateX) < 0.001) translateX = 0;\n      if (Math.abs(translateY) < 0.001) translateY = 0;\n      if (Math.abs(translateZ) < 0.001) translateZ = 0;\n      if (Math.abs(rotateY) < 0.001) rotateY = 0;\n      if (Math.abs(rotateX) < 0.001) rotateX = 0;\n\n      const slideTransform = `translate3d(${translateX}px,${translateY}px,${translateZ}px)  rotateX(${rotateX}deg) rotateY(${rotateY}deg)`;\n\n      $slideEl.transform(slideTransform);\n      $slideEl[0].style.zIndex = -Math.abs(Math.round(offsetMultiplier)) + 1;\n      if (params.slideShadows) {\n        // Set shadows\n        let $shadowBeforeEl = isHorizontal ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n        let $shadowAfterEl = isHorizontal ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n        if ($shadowBeforeEl.length === 0) {\n          $shadowBeforeEl = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'left' : 'top'}\"></div>`);\n          $slideEl.append($shadowBeforeEl);\n        }\n        if ($shadowAfterEl.length === 0) {\n          $shadowAfterEl = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'right' : 'bottom'}\"></div>`);\n          $slideEl.append($shadowAfterEl);\n        }\n        if ($shadowBeforeEl.length) $shadowBeforeEl[0].style.opacity = offsetMultiplier > 0 ? offsetMultiplier : 0;\n        if ($shadowAfterEl.length) $shadowAfterEl[0].style.opacity = (-offsetMultiplier) > 0 ? -offsetMultiplier : 0;\n      }\n    }\n\n    // Set correct perspective for IE10\n    if (Support.pointerEvents || Support.prefixedPointerEvents) {\n      const ws = $wrapperEl[0].style;\n      ws.perspectiveOrigin = `${center}px 50%`;\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    swiper.slides\n      .transition(duration)\n      .find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left')\n      .transition(duration);\n  },\n};\n\nvar EffectCoverflow = {\n  name: 'effect-coverflow',\n  params: {\n    coverflowEffect: {\n      rotate: 50,\n      stretch: 0,\n      depth: 100,\n      modifier: 1,\n      slideShadows: true,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      coverflowEffect: {\n        setTranslate: Coverflow.setTranslate.bind(swiper),\n        setTransition: Coverflow.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'coverflow') return;\n\n      swiper.classNames.push(`${swiper.params.containerModifierClass}coverflow`);\n      swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n\n      swiper.params.watchSlidesProgress = true;\n      swiper.originalParams.watchSlidesProgress = true;\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'coverflow') return;\n      swiper.coverflowEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'coverflow') return;\n      swiper.coverflowEffect.setTransition(duration);\n    },\n  },\n};\n\n// Swiper Class\n\nconst components = [\n  Device$1,\n  Support$1,\n  Browser$1,\n  Resize,\n  Observer$1,\n  Virtual$1,\n  Keyboard$1,\n  Mousewheel$1,\n  Navigation$1,\n  Pagination$1,\n  Scrollbar$1,\n  Parallax$1,\n  Zoom$1,\n  Lazy$1,\n  Controller$1,\n  A11y,\n  History$1,\n  HashNavigation$1,\n  Autoplay$1,\n  EffectFade,\n  EffectCube,\n  EffectFlip,\n  EffectCoverflow\n];\n\nif (typeof Swiper.use === 'undefined') {\n  Swiper.use = Swiper.Class.use;\n  Swiper.installModule = Swiper.Class.installModule;\n}\n\nSwiper.use(components);\n\nexport default Swiper;\n","<template>\r\n     <div class=\"swiper-container\" >\r\n            <div class=\"swiper-wrapper\">\r\n                 <div class=\"swiper-slide\" v-for='(item,index) in items' :key='index' >\r\n                        <img :src='item.url' alt=\"\">\r\n                </div>\r\n            </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport Swiper from 'swiper'\r\nimport 'swiper/dist/css/swiper.css'\r\nimport 'swiper/dist/js/swiper.js'\r\n\r\nexport default {\r\n  mounted: function() {\r\n    new Swiper(\".swiper-container\", {\r\n      observer: true,\r\n      observeParents: true,\r\n      loop: true,\r\n    })\r\n  },\r\n  props: ['items']\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.swiper-container {\r\n  .swiper-wrapper {\r\n    .swiper-slide {\r\n      display: flex;\r\n      justify-content: center;\r\n      img {\r\n        width: 98vw;\r\n      }\r\n    }\r\n  }\r\n}\r\n</style>\r\n\r\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./swipe.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./swipe.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./swipe.vue?vue&type=template&id=68929526&scoped=true\"\nimport script from \"./swipe.vue?vue&type=script&lang=js\"\nexport * from \"./swipe.vue?vue&type=script&lang=js\"\nimport style0 from \"./swipe.vue?vue&type=style&index=0&id=68929526&lang=scss&scoped=true\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"68929526\",\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}